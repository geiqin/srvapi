// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inConfig.proto

package geiqin_srv_eat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InConfig struct {
	Id                   int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsOpen               bool          `protobuf:"varint,2,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
	BusinessMode         int32         `protobuf:"varint,3,opt,name=business_mode,json=businessMode,proto3" json:"business_mode,omitempty"`
	SelfTakeType         int32         `protobuf:"varint,4,opt,name=self_take_type,json=selfTakeType,proto3" json:"self_take_type,omitempty"`
	SurchargeType        int32         `protobuf:"varint,5,opt,name=surcharge_type,json=surchargeType,proto3" json:"surcharge_type,omitempty"`
	PlatformFee          float32       `protobuf:"fixed32,6,opt,name=platform_fee,json=platformFee,proto3" json:"platform_fee,omitempty"`
	PlatformFeeName      string        `protobuf:"bytes,7,opt,name=platform_fee_name,json=platformFeeName,proto3" json:"platform_fee_name,omitempty"`
	OpenTableFee         float32       `protobuf:"fixed32,8,opt,name=open_table_fee,json=openTableFee,proto3" json:"open_table_fee,omitempty"`
	OpenTableFeeName     string        `protobuf:"bytes,9,opt,name=open_table_fee_name,json=openTableFeeName,proto3" json:"open_table_fee_name,omitempty"`
	PayConfigType        int32         `protobuf:"varint,10,opt,name=pay_config_type,json=payConfigType,proto3" json:"pay_config_type,omitempty"`
	HourType             int32         `protobuf:"varint,11,opt,name=hour_type,json=hourType,proto3" json:"hour_type,omitempty"`
	WholeStartTime       string        `protobuf:"bytes,12,opt,name=whole_start_time,json=wholeStartTime,proto3" json:"whole_start_time,omitempty"`
	WholeEndTime         string        `protobuf:"bytes,13,opt,name=whole_end_time,json=wholeEndTime,proto3" json:"whole_end_time,omitempty"`
	CreatedAt            string        `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string        `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	OpenTimes            []*TimeConfig `protobuf:"bytes,16,rep,name=open_times,json=openTimes,proto3" json:"open_times,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *InConfig) Reset()         { *m = InConfig{} }
func (m *InConfig) String() string { return proto.CompactTextString(m) }
func (*InConfig) ProtoMessage()    {}
func (*InConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_30f5ceda94ec370a, []int{0}
}

func (m *InConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InConfig.Unmarshal(m, b)
}
func (m *InConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InConfig.Marshal(b, m, deterministic)
}
func (m *InConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InConfig.Merge(m, src)
}
func (m *InConfig) XXX_Size() int {
	return xxx_messageInfo_InConfig.Size(m)
}
func (m *InConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_InConfig.DiscardUnknown(m)
}

var xxx_messageInfo_InConfig proto.InternalMessageInfo

func (m *InConfig) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *InConfig) GetIsOpen() bool {
	if m != nil {
		return m.IsOpen
	}
	return false
}

func (m *InConfig) GetBusinessMode() int32 {
	if m != nil {
		return m.BusinessMode
	}
	return 0
}

func (m *InConfig) GetSelfTakeType() int32 {
	if m != nil {
		return m.SelfTakeType
	}
	return 0
}

func (m *InConfig) GetSurchargeType() int32 {
	if m != nil {
		return m.SurchargeType
	}
	return 0
}

func (m *InConfig) GetPlatformFee() float32 {
	if m != nil {
		return m.PlatformFee
	}
	return 0
}

func (m *InConfig) GetPlatformFeeName() string {
	if m != nil {
		return m.PlatformFeeName
	}
	return ""
}

func (m *InConfig) GetOpenTableFee() float32 {
	if m != nil {
		return m.OpenTableFee
	}
	return 0
}

func (m *InConfig) GetOpenTableFeeName() string {
	if m != nil {
		return m.OpenTableFeeName
	}
	return ""
}

func (m *InConfig) GetPayConfigType() int32 {
	if m != nil {
		return m.PayConfigType
	}
	return 0
}

func (m *InConfig) GetHourType() int32 {
	if m != nil {
		return m.HourType
	}
	return 0
}

func (m *InConfig) GetWholeStartTime() string {
	if m != nil {
		return m.WholeStartTime
	}
	return ""
}

func (m *InConfig) GetWholeEndTime() string {
	if m != nil {
		return m.WholeEndTime
	}
	return ""
}

func (m *InConfig) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *InConfig) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *InConfig) GetOpenTimes() []*TimeConfig {
	if m != nil {
		return m.OpenTimes
	}
	return nil
}

type InConfigResponse struct {
	Entity               *InConfig   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager      `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*InConfig `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error      `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info       `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InConfigResponse) Reset()         { *m = InConfigResponse{} }
func (m *InConfigResponse) String() string { return proto.CompactTextString(m) }
func (*InConfigResponse) ProtoMessage()    {}
func (*InConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_30f5ceda94ec370a, []int{1}
}

func (m *InConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InConfigResponse.Unmarshal(m, b)
}
func (m *InConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InConfigResponse.Marshal(b, m, deterministic)
}
func (m *InConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InConfigResponse.Merge(m, src)
}
func (m *InConfigResponse) XXX_Size() int {
	return xxx_messageInfo_InConfigResponse.Size(m)
}
func (m *InConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InConfigResponse proto.InternalMessageInfo

func (m *InConfigResponse) GetEntity() *InConfig {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *InConfigResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *InConfigResponse) GetItems() []*InConfig {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *InConfigResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *InConfigResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*InConfig)(nil), "geiqin.srv.eat.InConfig")
	proto.RegisterType((*InConfigResponse)(nil), "geiqin.srv.eat.InConfigResponse")
}

func init() {
	proto.RegisterFile("inConfig.proto", fileDescriptor_30f5ceda94ec370a)
}

var fileDescriptor_30f5ceda94ec370a = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x14, 0x85, 0x71, 0xfe, 0x9a, 0xdc, 0xa4, 0x4e, 0x18, 0x40, 0x58, 0x41, 0x48, 0xa6, 0xfc, 0xc8,
	0x02, 0x61, 0xa1, 0xb0, 0x62, 0x59, 0x95, 0x82, 0x58, 0xf0, 0x23, 0x37, 0x7b, 0x6b, 0x1a, 0x5f,
	0xa7, 0xa3, 0xc6, 0x33, 0x66, 0x66, 0x52, 0x94, 0x77, 0xe1, 0xbd, 0x78, 0x15, 0x96, 0x68, 0xee,
	0x38, 0x55, 0x5a, 0xc8, 0x8a, 0xed, 0x39, 0xdf, 0x1c, 0xdf, 0x7b, 0x73, 0x02, 0xa1, 0x90, 0x27,
	0x4a, 0x96, 0x62, 0x99, 0xd6, 0x5a, 0x59, 0xc5, 0xc2, 0x25, 0x8a, 0xef, 0x42, 0xa6, 0x46, 0x5f,
	0xa5, 0xc8, 0xed, 0x74, 0xb4, 0x50, 0x55, 0xa5, 0xa4, 0x77, 0xa7, 0x13, 0x2b, 0x2a, 0xdc, 0xe5,
	0x8f, 0x7e, 0x75, 0xa0, 0xff, 0xa9, 0x89, 0x60, 0x21, 0xb4, 0x44, 0x11, 0x05, 0x71, 0x90, 0x74,
	0xb3, 0x96, 0x28, 0xd8, 0x43, 0x38, 0x10, 0x26, 0x57, 0x35, 0xca, 0xa8, 0x15, 0x07, 0x49, 0x3f,
	0xeb, 0x09, 0xf3, 0xb5, 0x46, 0xc9, 0x9e, 0xc2, 0xe1, 0xf9, 0xda, 0x08, 0x89, 0xc6, 0xe4, 0x95,
	0x2a, 0x30, 0x6a, 0xd3, 0x9b, 0xd1, 0x56, 0xfc, 0xac, 0x0a, 0x64, 0xcf, 0x20, 0x34, 0xb8, 0x2a,
	0x73, 0xcb, 0x2f, 0x31, 0xb7, 0x9b, 0x1a, 0xa3, 0x8e, 0xa7, 0x9c, 0x3a, 0xe7, 0x97, 0x38, 0xdf,
	0xd4, 0xc8, 0x9e, 0x43, 0x68, 0xd6, 0x7a, 0x71, 0xc1, 0xf5, 0xb2, 0xa1, 0xba, 0x44, 0x1d, 0x5e,
	0xab, 0x84, 0x3d, 0x81, 0x51, 0xbd, 0xe2, 0xb6, 0x54, 0xba, 0xca, 0x4b, 0xc4, 0xa8, 0x17, 0x07,
	0x49, 0x2b, 0x1b, 0x6e, 0xb5, 0x0f, 0x88, 0xec, 0x25, 0xdc, 0xdd, 0x45, 0x72, 0xc9, 0x2b, 0x8c,
	0x0e, 0xe2, 0x20, 0x19, 0x64, 0xe3, 0x1d, 0xee, 0x0b, 0xaf, 0x68, 0x36, 0xb7, 0x56, 0x6e, 0xf9,
	0xf9, 0x0a, 0x29, 0xb0, 0x4f, 0x81, 0x23, 0xa7, 0xce, 0x9d, 0xe8, 0x12, 0x5f, 0xc3, 0xbd, 0x9b,
	0x94, 0xcf, 0x1c, 0x50, 0xe6, 0x64, 0x17, 0xa5, 0xd0, 0x17, 0x30, 0xae, 0xf9, 0x26, 0x5f, 0xd0,
	0x31, 0xfd, 0x2e, 0xe0, 0x77, 0xa9, 0xf9, 0xc6, 0x9f, 0x98, 0x76, 0x79, 0x04, 0x83, 0x0b, 0xb5,
	0xd6, 0x9e, 0x18, 0x12, 0xd1, 0x77, 0x02, 0x99, 0x09, 0x4c, 0x7e, 0x5c, 0xa8, 0x15, 0xe6, 0xc6,
	0x72, 0x6d, 0x73, 0xf7, 0x83, 0x45, 0x23, 0xfa, 0x60, 0x48, 0xfa, 0x99, 0x93, 0xe7, 0xc2, 0xef,
	0xe0, 0x49, 0x94, 0x85, 0xe7, 0x0e, 0x89, 0x1b, 0x91, 0x7a, 0x2a, 0x0b, 0xa2, 0x1e, 0x03, 0x2c,
	0x34, 0x72, 0x8b, 0x45, 0xce, 0x6d, 0x14, 0x12, 0x31, 0x68, 0x94, 0x63, 0xeb, 0xec, 0x75, 0x5d,
	0x6c, 0xed, 0xb1, 0xb7, 0x1b, 0xe5, 0xd8, 0xb2, 0x77, 0x00, 0xfe, 0x02, 0xa2, 0x42, 0x13, 0x4d,
	0xe2, 0x76, 0x32, 0x9c, 0x4d, 0xd3, 0x9b, 0x1d, 0x4b, 0xe7, 0xd7, 0xa5, 0xca, 0x06, 0x74, 0x14,
	0x07, 0x1f, 0xfd, 0x0e, 0x60, 0xb2, 0x6d, 0x56, 0x86, 0xa6, 0x56, 0xd2, 0x20, 0x7b, 0x03, 0x3d,
	0x94, 0x56, 0xd8, 0x0d, 0xb5, 0x6c, 0x38, 0x8b, 0x6e, 0x67, 0x5d, 0xbf, 0x68, 0x38, 0xf6, 0x0a,
	0xba, 0x35, 0x5f, 0xa2, 0xa6, 0x06, 0x0e, 0x67, 0x0f, 0x6e, 0x3f, 0xf8, 0xe6, 0xcc, 0xcc, 0x33,
	0x2c, 0x85, 0xae, 0xb0, 0x58, 0x99, 0xa8, 0x4d, 0x93, 0xee, 0x4f, 0xf7, 0x98, 0x0b, 0x47, 0xad,
	0x95, 0xa6, 0x66, 0xfe, 0x23, 0xfc, 0xd4, 0x99, 0x99, 0x67, 0x58, 0x02, 0x1d, 0x21, 0x4b, 0x45,
	0xfd, 0x1c, 0xce, 0xee, 0xff, 0x9d, 0x5d, 0xaa, 0x8c, 0x88, 0xd9, 0xcf, 0x00, 0xc6, 0xdb, 0x4f,
	0x9d, 0xa1, 0xbe, 0x12, 0x0b, 0x64, 0x27, 0xd0, 0xfe, 0x88, 0x96, 0xed, 0x1d, 0x69, 0x1a, 0xef,
	0x1d, 0xb6, 0x39, 0xde, 0xd1, 0x1d, 0xf6, 0x1e, 0x3a, 0x67, 0xfc, 0x0a, 0xff, 0x2f, 0xe5, 0xbc,
	0x47, 0x7f, 0xfd, 0xb7, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x26, 0x91, 0xe6, 0x3c, 0x04,
	0x00, 0x00,
}
