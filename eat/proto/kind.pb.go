// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kind.proto

package geiqin_srv_eat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KindWhere struct {
	Paged                int32    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Top                  int32    `protobuf:"varint,3,opt,name=top,proto3" json:"top,omitempty"`
	Id                   int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Ids                  []int64  `protobuf:"varint,5,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	TagId                int32    `protobuf:"varint,7,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	TagIds               []int32  `protobuf:"varint,8,rep,packed,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	KindId               int64    `protobuf:"varint,9,opt,name=kind_id,json=kindId,proto3" json:"kind_id,omitempty"`
	DestKindId           int64    `protobuf:"varint,10,opt,name=dest_kind_id,json=destKindId,proto3" json:"dest_kind_id,omitempty"`
	MinSort              int64    `protobuf:"varint,11,opt,name=min_sort,json=minSort,proto3" json:"min_sort,omitempty"`
	MaxSort              int64    `protobuf:"varint,12,opt,name=max_sort,json=maxSort,proto3" json:"max_sort,omitempty"`
	Keywords             string   `protobuf:"bytes,13,opt,name=keywords,proto3" json:"keywords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KindWhere) Reset()         { *m = KindWhere{} }
func (m *KindWhere) String() string { return proto.CompactTextString(m) }
func (*KindWhere) ProtoMessage()    {}
func (*KindWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_5af1ef8d038732d1, []int{0}
}

func (m *KindWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KindWhere.Unmarshal(m, b)
}
func (m *KindWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KindWhere.Marshal(b, m, deterministic)
}
func (m *KindWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KindWhere.Merge(m, src)
}
func (m *KindWhere) XXX_Size() int {
	return xxx_messageInfo_KindWhere.Size(m)
}
func (m *KindWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_KindWhere.DiscardUnknown(m)
}

var xxx_messageInfo_KindWhere proto.InternalMessageInfo

func (m *KindWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *KindWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *KindWhere) GetTop() int32 {
	if m != nil {
		return m.Top
	}
	return 0
}

func (m *KindWhere) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *KindWhere) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *KindWhere) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *KindWhere) GetTagId() int32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *KindWhere) GetTagIds() []int32 {
	if m != nil {
		return m.TagIds
	}
	return nil
}

func (m *KindWhere) GetKindId() int64 {
	if m != nil {
		return m.KindId
	}
	return 0
}

func (m *KindWhere) GetDestKindId() int64 {
	if m != nil {
		return m.DestKindId
	}
	return 0
}

func (m *KindWhere) GetMinSort() int64 {
	if m != nil {
		return m.MinSort
	}
	return 0
}

func (m *KindWhere) GetMaxSort() int64 {
	if m != nil {
		return m.MaxSort
	}
	return 0
}

func (m *KindWhere) GetKeywords() string {
	if m != nil {
		return m.Keywords
	}
	return ""
}

type Kind struct {
	Id                   int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string          `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	TagId                int32           `protobuf:"varint,4,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	RequireChoose        bool            `protobuf:"varint,5,opt,name=require_choose,json=requireChoose,proto3" json:"require_choose,omitempty"`
	RequireLeastCount    int32           `protobuf:"varint,6,opt,name=require_least_count,json=requireLeastCount,proto3" json:"require_least_count,omitempty"`
	IsSellTime           bool            `protobuf:"varint,7,opt,name=is_sell_time,json=isSellTime,proto3" json:"is_sell_time,omitempty"`
	WeekDays             string          `protobuf:"bytes,8,opt,name=week_days,json=weekDays,proto3" json:"week_days,omitempty"`
	Sort                 int64           `protobuf:"varint,9,opt,name=sort,proto3" json:"sort,omitempty"`
	ItemCount            int32           `protobuf:"varint,10,opt,name=item_count,json=itemCount,proto3" json:"item_count,omitempty"`
	OnShelfItemCount     int32           `protobuf:"varint,11,opt,name=on_shelf_item_count,json=onShelfItemCount,proto3" json:"on_shelf_item_count,omitempty"`
	CreatedAt            string          `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string          `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Tag                  *KindTag        `protobuf:"bytes,14,opt,name=tag,proto3" json:"tag,omitempty"`
	KindSellTimes        []*KindSellTime `protobuf:"bytes,15,rep,name=kind_sell_times,json=kindSellTimes,proto3" json:"kind_sell_times,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Kind) Reset()         { *m = Kind{} }
func (m *Kind) String() string { return proto.CompactTextString(m) }
func (*Kind) ProtoMessage()    {}
func (*Kind) Descriptor() ([]byte, []int) {
	return fileDescriptor_5af1ef8d038732d1, []int{1}
}

func (m *Kind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kind.Unmarshal(m, b)
}
func (m *Kind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kind.Marshal(b, m, deterministic)
}
func (m *Kind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kind.Merge(m, src)
}
func (m *Kind) XXX_Size() int {
	return xxx_messageInfo_Kind.Size(m)
}
func (m *Kind) XXX_DiscardUnknown() {
	xxx_messageInfo_Kind.DiscardUnknown(m)
}

var xxx_messageInfo_Kind proto.InternalMessageInfo

func (m *Kind) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Kind) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Kind) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Kind) GetTagId() int32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *Kind) GetRequireChoose() bool {
	if m != nil {
		return m.RequireChoose
	}
	return false
}

func (m *Kind) GetRequireLeastCount() int32 {
	if m != nil {
		return m.RequireLeastCount
	}
	return 0
}

func (m *Kind) GetIsSellTime() bool {
	if m != nil {
		return m.IsSellTime
	}
	return false
}

func (m *Kind) GetWeekDays() string {
	if m != nil {
		return m.WeekDays
	}
	return ""
}

func (m *Kind) GetSort() int64 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *Kind) GetItemCount() int32 {
	if m != nil {
		return m.ItemCount
	}
	return 0
}

func (m *Kind) GetOnShelfItemCount() int32 {
	if m != nil {
		return m.OnShelfItemCount
	}
	return 0
}

func (m *Kind) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Kind) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Kind) GetTag() *KindTag {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *Kind) GetKindSellTimes() []*KindSellTime {
	if m != nil {
		return m.KindSellTimes
	}
	return nil
}

type KindResponse struct {
	Entity               *Kind    `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Kind  `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KindResponse) Reset()         { *m = KindResponse{} }
func (m *KindResponse) String() string { return proto.CompactTextString(m) }
func (*KindResponse) ProtoMessage()    {}
func (*KindResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5af1ef8d038732d1, []int{2}
}

func (m *KindResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KindResponse.Unmarshal(m, b)
}
func (m *KindResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KindResponse.Marshal(b, m, deterministic)
}
func (m *KindResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KindResponse.Merge(m, src)
}
func (m *KindResponse) XXX_Size() int {
	return xxx_messageInfo_KindResponse.Size(m)
}
func (m *KindResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KindResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KindResponse proto.InternalMessageInfo

func (m *KindResponse) GetEntity() *Kind {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *KindResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *KindResponse) GetItems() []*Kind {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *KindResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *KindResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*KindWhere)(nil), "geiqin.srv.eat.KindWhere")
	proto.RegisterType((*Kind)(nil), "geiqin.srv.eat.Kind")
	proto.RegisterType((*KindResponse)(nil), "geiqin.srv.eat.KindResponse")
}

func init() {
	proto.RegisterFile("kind.proto", fileDescriptor_5af1ef8d038732d1)
}

var fileDescriptor_5af1ef8d038732d1 = []byte{
	// 748 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xdd, 0x6a, 0xeb, 0x46,
	0x10, 0xae, 0x2c, 0x5b, 0xb1, 0xc6, 0x3f, 0x49, 0xf7, 0x9c, 0xc3, 0x51, 0xdc, 0x06, 0x84, 0xa1,
	0xa0, 0xfe, 0xf9, 0xc2, 0xbd, 0x2c, 0x14, 0x82, 0x53, 0x8a, 0x49, 0x42, 0xcb, 0x3a, 0xa5, 0x97,
	0x42, 0xb5, 0x26, 0xf6, 0x12, 0x4b, 0xeb, 0xec, 0xae, 0x93, 0x38, 0xaf, 0xd7, 0x77, 0x68, 0xef,
	0xda, 0x17, 0xe8, 0x23, 0xf4, 0xa2, 0xec, 0xac, 0x6c, 0xd2, 0x22, 0x28, 0x24, 0x77, 0xa1, 0x77,
	0xb3, 0xdf, 0xf7, 0xed, 0xac, 0xe6, 0x9b, 0x19, 0x63, 0x80, 0x1b, 0x51, 0xe6, 0xa3, 0xb5, 0x92,
	0x46, 0xb2, 0xfe, 0x02, 0xc5, 0xad, 0x28, 0x47, 0x5a, 0xdd, 0x8d, 0x30, 0x33, 0x83, 0xee, 0x5c,
	0x16, 0x85, 0x2c, 0x1d, 0x3b, 0xe8, 0x59, 0xe5, 0x55, 0xb6, 0xa8, 0x8e, 0xcc, 0x1e, 0x67, 0xb8,
	0x5a, 0x5d, 0x89, 0x02, 0x1d, 0x36, 0xfc, 0xa5, 0x01, 0xe1, 0xb9, 0x28, 0xf3, 0x9f, 0x96, 0xa8,
	0x90, 0xbd, 0x85, 0xd6, 0x3a, 0x5b, 0x60, 0x1e, 0x79, 0xb1, 0x97, 0xb4, 0xb8, 0x3b, 0xb0, 0x8f,
	0x20, 0xb4, 0x41, 0xaa, 0xc5, 0x23, 0x46, 0x0d, 0x62, 0xda, 0x16, 0x98, 0x89, 0x47, 0x64, 0x47,
	0xe0, 0x1b, 0xb9, 0x8e, 0x7c, 0x82, 0x6d, 0xc8, 0xfa, 0xd0, 0x10, 0x79, 0xd4, 0x8c, 0xbd, 0xc4,
	0xe7, 0x0d, 0x91, 0x5b, 0x85, 0xc8, 0x75, 0xd4, 0x8a, 0xfd, 0xc4, 0xe7, 0x36, 0x64, 0x0c, 0x9a,
	0x66, 0xbb, 0xc6, 0x28, 0x88, 0xbd, 0x24, 0xe4, 0x14, 0xb3, 0x77, 0x10, 0x98, 0x6c, 0x91, 0x8a,
	0x3c, 0x3a, 0x70, 0x6f, 0x9b, 0x6c, 0x31, 0xcd, 0xd9, 0x7b, 0x38, 0x70, 0xb0, 0x8e, 0xda, 0xb1,
	0x9f, 0xb4, 0x78, 0x40, 0xb8, 0xb6, 0x84, 0x2d, 0xc7, 0x5e, 0x08, 0xe9, 0xa9, 0xc0, 0x1e, 0xa7,
	0x39, 0x8b, 0xa1, 0x9b, 0xa3, 0x36, 0xe9, 0x8e, 0x05, 0x62, 0xc1, 0x62, 0xe7, 0x4e, 0x71, 0x0c,
	0xed, 0x42, 0x94, 0xa9, 0x96, 0xca, 0x44, 0x1d, 0x62, 0x0f, 0x0a, 0x51, 0xce, 0xa4, 0x32, 0x44,
	0x65, 0x0f, 0x8e, 0xea, 0x56, 0x54, 0xf6, 0x40, 0xd4, 0x00, 0xda, 0x37, 0xb8, 0xbd, 0x97, 0x2a,
	0xd7, 0x51, 0x8f, 0x3e, 0x7c, 0x7f, 0x1e, 0xfe, 0xe5, 0x43, 0xd3, 0x26, 0xaf, 0x6a, 0xf7, 0xf6,
	0xb5, 0x33, 0x68, 0x96, 0x59, 0xe1, 0x5c, 0x0b, 0x39, 0xc5, 0xfb, 0xea, 0xfd, 0xda, 0xea, 0x9b,
	0x4f, 0xab, 0xff, 0x04, 0xfa, 0x0a, 0x6f, 0x37, 0x42, 0x61, 0x3a, 0x5f, 0x4a, 0xa9, 0x31, 0x6a,
	0xc5, 0x5e, 0xd2, 0xe6, 0xbd, 0x0a, 0x9d, 0x10, 0xc8, 0x46, 0xf0, 0x66, 0x27, 0x5b, 0x61, 0xa6,
	0x4d, 0x3a, 0x97, 0x9b, 0xd2, 0x90, 0xbd, 0x2d, 0xfe, 0x61, 0x45, 0x5d, 0x58, 0x66, 0x62, 0x09,
	0x6b, 0x91, 0xd0, 0xa9, 0xc6, 0xd5, 0x2a, 0x35, 0xa2, 0x40, 0x72, 0xbc, 0xcd, 0x41, 0xe8, 0xdd,
	0x70, 0xd8, 0x96, 0xdf, 0x23, 0xde, 0xa4, 0x79, 0xb6, 0xb5, 0xc6, 0x53, 0xb5, 0x16, 0x38, 0xcb,
	0xb6, 0xd4, 0x3e, 0x32, 0xc8, 0xf9, 0x4e, 0x31, 0x3b, 0x01, 0x10, 0x06, 0x8b, 0xea, 0x65, 0xa0,
	0x97, 0x43, 0x8b, 0xb8, 0x17, 0xbf, 0x84, 0x37, 0xb2, 0x4c, 0xf5, 0x12, 0x57, 0xd7, 0xe9, 0x13,
	0x5d, 0x87, 0x74, 0x47, 0xb2, 0x9c, 0x59, 0x66, 0xba, 0x97, 0x9f, 0x00, 0xcc, 0x15, 0x66, 0x06,
	0xf3, 0x34, 0x73, 0x8d, 0x08, 0x79, 0x58, 0x21, 0xa7, 0x44, 0x6f, 0xd6, 0xf9, 0x8e, 0x76, 0xcd,
	0x08, 0x2b, 0xe4, 0xd4, 0xb0, 0x4f, 0xc1, 0x37, 0xd9, 0x22, 0xea, 0xc7, 0x5e, 0xd2, 0x19, 0xbf,
	0x1f, 0xfd, 0x73, 0x45, 0x46, 0xe7, 0x6e, 0x27, 0xb8, 0xd5, 0xb0, 0x33, 0x38, 0xa4, 0x39, 0xd9,
	0x7b, 0xa1, 0xa3, 0xc3, 0xd8, 0x4f, 0x3a, 0xe3, 0x8f, 0xeb, 0xae, 0xed, 0xec, 0xe1, 0xbd, 0xa7,
	0x9b, 0xa4, 0x87, 0x7f, 0x7a, 0xd0, 0xb5, 0x3c, 0x47, 0xbd, 0x96, 0xa5, 0x46, 0xf6, 0x05, 0x04,
	0x58, 0x1a, 0x61, 0xb6, 0x34, 0x0a, 0x9d, 0xf1, 0xdb, 0xba, 0x6c, 0xbc, 0xd2, 0xb0, 0xcf, 0xdd,
	0xd6, 0x29, 0x9a, 0x92, 0xce, 0xf8, 0xdd, 0xbf, 0xc5, 0x3f, 0x58, 0xd2, 0x2d, 0xa3, 0x62, 0x9f,
	0x41, 0xcb, 0x1a, 0xa8, 0x23, 0x9f, 0xbe, 0xb3, 0x3e, 0xb3, 0x93, 0xd8, 0xc4, 0xa8, 0x94, 0x54,
	0x34, 0x54, 0x35, 0x89, 0xbf, 0xb5, 0x24, 0x77, 0x1a, 0x96, 0x40, 0x53, 0x94, 0xd7, 0x92, 0x26,
	0xac, 0x26, 0xef, 0xb4, 0xbc, 0x96, 0x9c, 0x14, 0xe3, 0xdf, 0x7d, 0xe8, 0x4d, 0x4b, 0x67, 0x88,
	0xba, 0x13, 0x73, 0x64, 0x13, 0x08, 0x66, 0x98, 0xa9, 0xf9, 0x92, 0x1d, 0xd7, 0x7d, 0x0f, 0xfd,
	0xb8, 0x0c, 0x6a, 0x2d, 0xdd, 0x59, 0x36, 0xfc, 0x80, 0x9d, 0x42, 0xf3, 0x42, 0x68, 0xf3, 0x92,
	0x14, 0x5f, 0x83, 0xff, 0x1d, 0x1a, 0x56, 0x6b, 0xca, 0x7f, 0x5e, 0xfe, 0x06, 0x82, 0x09, 0x8d,
	0xd8, 0xf3, 0xef, 0xff, 0x48, 0x33, 0xf8, 0xcc, 0xfb, 0x13, 0x08, 0xce, 0x70, 0x85, 0x06, 0x5f,
	0xe2, 0xc0, 0x04, 0x02, 0x8e, 0xb4, 0x91, 0xcf, 0x4f, 0x32, 0xfe, 0xd5, 0x83, 0xc3, 0xcb, 0xed,
	0xeb, 0x6b, 0xf1, 0xf8, 0x0f, 0x1f, 0xfa, 0xdf, 0x6f, 0xcc, 0xff, 0xa3, 0xfb, 0x6a, 0x47, 0xf7,
	0x37, 0x0f, 0x8e, 0x2e, 0xb7, 0xaf, 0xb0, 0xc7, 0x3f, 0x07, 0xf4, 0x87, 0xed, 0xab, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xf3, 0x20, 0x4d, 0x00, 0xff, 0x09, 0x00, 0x00,
}
