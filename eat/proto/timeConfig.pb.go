// Code generated by protoc-gen-go. DO NOT EDIT.
// source: timeConfig.proto

package geiqin_srv_eat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TimeConfigWhere struct {
	BusinessType         string   `protobuf:"bytes,1,opt,name=business_type,json=businessType,proto3" json:"business_type,omitempty"`
	TimeType             int32    `protobuf:"varint,2,opt,name=time_type,json=timeType,proto3" json:"time_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeConfigWhere) Reset()         { *m = TimeConfigWhere{} }
func (m *TimeConfigWhere) String() string { return proto.CompactTextString(m) }
func (*TimeConfigWhere) ProtoMessage()    {}
func (*TimeConfigWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fdd6acd4805540b, []int{0}
}

func (m *TimeConfigWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeConfigWhere.Unmarshal(m, b)
}
func (m *TimeConfigWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeConfigWhere.Marshal(b, m, deterministic)
}
func (m *TimeConfigWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeConfigWhere.Merge(m, src)
}
func (m *TimeConfigWhere) XXX_Size() int {
	return xxx_messageInfo_TimeConfigWhere.Size(m)
}
func (m *TimeConfigWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeConfigWhere.DiscardUnknown(m)
}

var xxx_messageInfo_TimeConfigWhere proto.InternalMessageInfo

func (m *TimeConfigWhere) GetBusinessType() string {
	if m != nil {
		return m.BusinessType
	}
	return ""
}

func (m *TimeConfigWhere) GetTimeType() int32 {
	if m != nil {
		return m.TimeType
	}
	return 0
}

type TimeConfig struct {
	Id                   int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BusinessType         string       `protobuf:"bytes,2,opt,name=business_type,json=businessType,proto3" json:"business_type,omitempty"`
	TimeType             int32        `protobuf:"varint,3,opt,name=time_type,json=timeType,proto3" json:"time_type,omitempty"`
	FieldName            string       `protobuf:"bytes,4,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	CreatedAt            string       `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string       `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TimeRanges           []*TimeRange `protobuf:"bytes,7,rep,name=time_ranges,json=timeRanges,proto3" json:"time_ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TimeConfig) Reset()         { *m = TimeConfig{} }
func (m *TimeConfig) String() string { return proto.CompactTextString(m) }
func (*TimeConfig) ProtoMessage()    {}
func (*TimeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fdd6acd4805540b, []int{1}
}

func (m *TimeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeConfig.Unmarshal(m, b)
}
func (m *TimeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeConfig.Marshal(b, m, deterministic)
}
func (m *TimeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeConfig.Merge(m, src)
}
func (m *TimeConfig) XXX_Size() int {
	return xxx_messageInfo_TimeConfig.Size(m)
}
func (m *TimeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TimeConfig proto.InternalMessageInfo

func (m *TimeConfig) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TimeConfig) GetBusinessType() string {
	if m != nil {
		return m.BusinessType
	}
	return ""
}

func (m *TimeConfig) GetTimeType() int32 {
	if m != nil {
		return m.TimeType
	}
	return 0
}

func (m *TimeConfig) GetFieldName() string {
	if m != nil {
		return m.FieldName
	}
	return ""
}

func (m *TimeConfig) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *TimeConfig) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *TimeConfig) GetTimeRanges() []*TimeRange {
	if m != nil {
		return m.TimeRanges
	}
	return nil
}

func init() {
	proto.RegisterType((*TimeConfigWhere)(nil), "geiqin.srv.eat.TimeConfigWhere")
	proto.RegisterType((*TimeConfig)(nil), "geiqin.srv.eat.TimeConfig")
}

func init() {
	proto.RegisterFile("timeConfig.proto", fileDescriptor_2fdd6acd4805540b)
}

var fileDescriptor_2fdd6acd4805540b = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0x84, 0x16, 0x72, 0x85, 0x16, 0x79, 0x0a, 0x20, 0xa4, 0xa8, 0x2c, 0x99, 0x3c,
	0xc0, 0xc6, 0x56, 0xb1, 0x33, 0x98, 0x48, 0x8c, 0x91, 0x8b, 0xaf, 0xc1, 0x12, 0x71, 0x82, 0x7d,
	0x45, 0xea, 0x2f, 0x67, 0x45, 0xb6, 0x9b, 0xa2, 0x8a, 0x81, 0xf5, 0x7d, 0x77, 0xef, 0x49, 0x1f,
	0x5c, 0x92, 0xee, 0xf0, 0xa9, 0x37, 0x1b, 0xdd, 0xf2, 0xc1, 0xf6, 0xd4, 0xb3, 0x79, 0x8b, 0xfa,
	0x53, 0x1b, 0xee, 0xec, 0x17, 0x47, 0x49, 0xd7, 0x0b, 0x7f, 0x21, 0xa4, 0x69, 0x31, 0x1e, 0x2c,
	0x5f, 0x60, 0x51, 0x1f, 0x9e, 0x5e, 0xdf, 0xd1, 0x22, 0xbb, 0x83, 0x8b, 0xf5, 0xd6, 0x69, 0x83,
	0xce, 0x35, 0xb4, 0x1b, 0xb0, 0x48, 0xca, 0xa4, 0xca, 0xc5, 0xf9, 0x18, 0xd6, 0xbb, 0x01, 0xd9,
	0x0d, 0xe4, 0xbe, 0x2a, 0x1e, 0xa4, 0x65, 0x52, 0x4d, 0xc4, 0x99, 0x0f, 0x3c, 0x5c, 0x7e, 0x27,
	0x00, 0xbf, 0xad, 0x6c, 0x0e, 0xa9, 0x56, 0xa1, 0x25, 0x13, 0xa9, 0x56, 0x7f, 0x07, 0xd2, 0xff,
	0x06, 0xb2, 0xe3, 0x01, 0x76, 0x0b, 0xb0, 0xd1, 0xf8, 0xa1, 0x1a, 0x23, 0x3b, 0x2c, 0x4e, 0xc2,
	0x7b, 0x1e, 0x92, 0x67, 0xd9, 0x05, 0xfc, 0x66, 0x51, 0x12, 0xaa, 0x46, 0x52, 0x31, 0x89, 0x78,
	0x9f, 0xac, 0xc8, 0xe3, 0xed, 0xa0, 0x46, 0x3c, 0x8d, 0x78, 0x9f, 0xac, 0x88, 0x3d, 0xc2, 0x2c,
	0x2c, 0x5b, 0xaf, 0xc9, 0x15, 0xa7, 0x65, 0x56, 0xcd, 0xee, 0xaf, 0xf8, 0xb1, 0x49, 0x5e, 0x8f,
	0x22, 0x05, 0x1c, 0x9c, 0xba, 0xf5, 0x34, 0x58, 0x7d, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0x59,
	0x0c, 0xad, 0x94, 0x8a, 0x01, 0x00, 0x00,
}
