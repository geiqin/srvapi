// Code generated by protoc-gen-go. DO NOT EDIT.
// source: food.proto

package geiqin_srv_eat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FoodWhere struct {
	Paged                int32    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Top                  int32    `protobuf:"varint,3,opt,name=top,proto3" json:"top,omitempty"`
	Id                   int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Ids                  []int64  `protobuf:"varint,5,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	ItemId               int64    `protobuf:"varint,6,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	FoodType             string   `protobuf:"bytes,7,opt,name=food_type,json=foodType,proto3" json:"food_type,omitempty"`
	KindId               int64    `protobuf:"varint,8,opt,name=kind_id,json=kindId,proto3" json:"kind_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FoodWhere) Reset()         { *m = FoodWhere{} }
func (m *FoodWhere) String() string { return proto.CompactTextString(m) }
func (*FoodWhere) ProtoMessage()    {}
func (*FoodWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{0}
}

func (m *FoodWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FoodWhere.Unmarshal(m, b)
}
func (m *FoodWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FoodWhere.Marshal(b, m, deterministic)
}
func (m *FoodWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FoodWhere.Merge(m, src)
}
func (m *FoodWhere) XXX_Size() int {
	return xxx_messageInfo_FoodWhere.Size(m)
}
func (m *FoodWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_FoodWhere.DiscardUnknown(m)
}

var xxx_messageInfo_FoodWhere proto.InternalMessageInfo

func (m *FoodWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *FoodWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *FoodWhere) GetTop() int32 {
	if m != nil {
		return m.Top
	}
	return 0
}

func (m *FoodWhere) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FoodWhere) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *FoodWhere) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *FoodWhere) GetFoodType() string {
	if m != nil {
		return m.FoodType
	}
	return ""
}

func (m *FoodWhere) GetKindId() int64 {
	if m != nil {
		return m.KindId
	}
	return 0
}

type Food struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemId               int64    `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	FoodType             string   `protobuf:"bytes,3,opt,name=food_type,json=foodType,proto3" json:"food_type,omitempty"`
	KindId               int64    `protobuf:"varint,4,opt,name=kind_id,json=kindId,proto3" json:"kind_id,omitempty"`
	BoxFee               float32  `protobuf:"fixed32,5,opt,name=box_fee,json=boxFee,proto3" json:"box_fee,omitempty"`
	CreatedAt            string   `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Food) Reset()         { *m = Food{} }
func (m *Food) String() string { return proto.CompactTextString(m) }
func (*Food) ProtoMessage()    {}
func (*Food) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{1}
}

func (m *Food) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Food.Unmarshal(m, b)
}
func (m *Food) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Food.Marshal(b, m, deterministic)
}
func (m *Food) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Food.Merge(m, src)
}
func (m *Food) XXX_Size() int {
	return xxx_messageInfo_Food.Size(m)
}
func (m *Food) XXX_DiscardUnknown() {
	xxx_messageInfo_Food.DiscardUnknown(m)
}

var xxx_messageInfo_Food proto.InternalMessageInfo

func (m *Food) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Food) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *Food) GetFoodType() string {
	if m != nil {
		return m.FoodType
	}
	return ""
}

func (m *Food) GetKindId() int64 {
	if m != nil {
		return m.KindId
	}
	return 0
}

func (m *Food) GetBoxFee() float32 {
	if m != nil {
		return m.BoxFee
	}
	return 0
}

func (m *Food) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Food) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type FoodResponse struct {
	Entity               *Food    `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Food  `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FoodResponse) Reset()         { *m = FoodResponse{} }
func (m *FoodResponse) String() string { return proto.CompactTextString(m) }
func (*FoodResponse) ProtoMessage()    {}
func (*FoodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{2}
}

func (m *FoodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FoodResponse.Unmarshal(m, b)
}
func (m *FoodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FoodResponse.Marshal(b, m, deterministic)
}
func (m *FoodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FoodResponse.Merge(m, src)
}
func (m *FoodResponse) XXX_Size() int {
	return xxx_messageInfo_FoodResponse.Size(m)
}
func (m *FoodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FoodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FoodResponse proto.InternalMessageInfo

func (m *FoodResponse) GetEntity() *Food {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *FoodResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *FoodResponse) GetItems() []*Food {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *FoodResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *FoodResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*FoodWhere)(nil), "geiqin.srv.eat.FoodWhere")
	proto.RegisterType((*Food)(nil), "geiqin.srv.eat.Food")
	proto.RegisterType((*FoodResponse)(nil), "geiqin.srv.eat.FoodResponse")
}

func init() {
	proto.RegisterFile("food.proto", fileDescriptor_99c7773ae8ad4a83)
}

var fileDescriptor_99c7773ae8ad4a83 = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xc1, 0x8a, 0xd4, 0x40,
	0x10, 0xb5, 0xd3, 0x93, 0xec, 0xa4, 0x66, 0x59, 0xa4, 0x59, 0xb1, 0x5d, 0x15, 0xc2, 0x9c, 0x82,
	0x4a, 0x0e, 0xe3, 0x5d, 0x5c, 0xc4, 0x95, 0xb9, 0x49, 0xaf, 0xe2, 0x31, 0xcc, 0x4c, 0x57, 0xd6,
	0x46, 0x26, 0x1d, 0x3b, 0xed, 0xb2, 0xb3, 0xdf, 0xe6, 0xc5, 0x2f, 0xf0, 0x47, 0xfc, 0x08, 0xa9,
	0xee, 0x28, 0xa3, 0x64, 0x10, 0xbc, 0x75, 0xd5, 0x7b, 0x55, 0xaf, 0xea, 0x15, 0x0d, 0xd0, 0x58,
	0xab, 0xab, 0xce, 0x59, 0x6f, 0xc5, 0xc9, 0x15, 0x9a, 0xcf, 0xa6, 0xad, 0x7a, 0x77, 0x5d, 0xe1,
	0xca, 0x9f, 0x1d, 0x6f, 0xec, 0x76, 0x6b, 0xdb, 0x88, 0xce, 0xbf, 0x31, 0xc8, 0x2f, 0xac, 0xd5,
	0x1f, 0x3e, 0xa2, 0x43, 0x71, 0x0a, 0x69, 0xb7, 0xba, 0x42, 0x2d, 0x59, 0xc1, 0xca, 0x54, 0xc5,
	0x40, 0x3c, 0x84, 0x9c, 0x1e, 0x75, 0x6f, 0x6e, 0x51, 0x26, 0x01, 0x99, 0x52, 0xe2, 0xd2, 0xdc,
	0xa2, 0xb8, 0x0b, 0xdc, 0xdb, 0x4e, 0xf2, 0x90, 0xa6, 0xa7, 0x38, 0x81, 0xc4, 0x68, 0x39, 0x29,
	0x58, 0xc9, 0x55, 0x62, 0x34, 0x31, 0x8c, 0xee, 0x65, 0x5a, 0xf0, 0x92, 0x2b, 0x7a, 0x8a, 0xfb,
	0x70, 0x64, 0x3c, 0x6e, 0x6b, 0xa3, 0x65, 0x16, 0x68, 0x19, 0x85, 0xcb, 0xa0, 0x44, 0x93, 0xd7,
	0x7e, 0xd7, 0xa1, 0x3c, 0x2a, 0x58, 0x99, 0xab, 0x29, 0x25, 0xde, 0xed, 0x3a, 0xa4, 0xaa, 0x4f,
	0xa6, 0xd5, 0x54, 0x35, 0x8d, 0x55, 0x14, 0x2e, 0xf5, 0xfc, 0x2b, 0x83, 0x09, 0xed, 0x30, 0x28,
	0xb3, 0xdf, 0xca, 0x7b, 0x3a, 0xc9, 0x61, 0x1d, 0x7e, 0x58, 0x67, 0xb2, 0xaf, 0x43, 0xc0, 0xda,
	0xde, 0xd4, 0x0d, 0xa2, 0x4c, 0x0b, 0x56, 0x26, 0x2a, 0x5b, 0xdb, 0x9b, 0x0b, 0x44, 0xf1, 0x18,
	0x60, 0xe3, 0x70, 0xe5, 0x51, 0xd7, 0x2b, 0x1f, 0x56, 0xca, 0x55, 0x3e, 0x64, 0xce, 0x3d, 0xc1,
	0x5f, 0x3a, 0xfd, 0x0b, 0x8e, 0x6b, 0xe5, 0x43, 0xe6, 0xdc, 0xcf, 0x7f, 0x30, 0x38, 0xa6, 0xf1,
	0x15, 0xf6, 0x9d, 0x6d, 0x7b, 0x14, 0xcf, 0x20, 0xc3, 0xd6, 0x1b, 0xbf, 0x0b, 0xab, 0xcc, 0x16,
	0xa7, 0xd5, 0x9f, 0x27, 0xac, 0x02, 0x7b, 0xe0, 0x88, 0xa7, 0xf1, 0x66, 0x2e, 0xac, 0x38, 0x5b,
	0xdc, 0xfb, 0x9b, 0xfc, 0x96, 0xc0, 0x78, 0x4a, 0x27, 0x9e, 0x40, 0x4a, 0x16, 0xf4, 0x92, 0x17,
	0xfc, 0x60, 0xe7, 0x48, 0xa1, 0xc6, 0xe8, 0x9c, 0x75, 0xc1, 0x85, 0x91, 0xc6, 0xaf, 0x09, 0x54,
	0x91, 0x23, 0x4a, 0x98, 0x98, 0xb6, 0xb1, 0xc1, 0x98, 0x91, 0xbe, 0xcb, 0xb6, 0xb1, 0x2a, 0x30,
	0x16, 0xdf, 0x19, 0xcc, 0x48, 0xe6, 0x12, 0xdd, 0xb5, 0xd9, 0xa0, 0x78, 0x01, 0xd9, 0xab, 0x60,
	0x95, 0x18, 0x9d, 0xe6, 0xec, 0xd1, 0xe8, 0x8c, 0x83, 0x57, 0xf3, 0x3b, 0x54, 0xff, 0x3e, 0x78,
	0xf9, 0x9f, 0xf5, 0x2f, 0x81, 0xbf, 0x41, 0x2f, 0x1e, 0x8c, 0xd1, 0xc2, 0xaf, 0xf8, 0x57, 0x87,
	0x75, 0x16, 0xbe, 0xd2, 0xf3, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xac, 0x4e, 0x27, 0x4c, 0x76,
	0x03, 0x00, 0x00,
}
