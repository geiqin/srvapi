// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reward.proto

package geiqin_srv_ims_reward

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Reward struct {
	Id                   int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartAt              string         `protobuf:"bytes,3,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt                string         `protobuf:"bytes,4,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	RangeType            int32          `protobuf:"varint,5,opt,name=range_type,json=rangeType,proto3" json:"range_type,omitempty"`
	ConditionType        int32          `protobuf:"varint,6,opt,name=condition_type,json=conditionType,proto3" json:"condition_type,omitempty"`
	StepNum              int32          `protobuf:"varint,7,opt,name=step_num,json=stepNum,proto3" json:"step_num,omitempty"`
	Description          string         `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt            string         `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string         `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Goodses              []*RewardGoods `protobuf:"bytes,11,rep,name=goodses,proto3" json:"goodses,omitempty"`
	Steps                []*RewardStep  `protobuf:"bytes,12,rep,name=steps,proto3" json:"steps,omitempty"`
	Looped               bool           `protobuf:"varint,13,opt,name=looped,proto3" json:"looped,omitempty"`
	Status               int32          `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	StatusName           string         `protobuf:"bytes,15,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Reward) Reset()         { *m = Reward{} }
func (m *Reward) String() string { return proto.CompactTextString(m) }
func (*Reward) ProtoMessage()    {}
func (*Reward) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aa76dc13de95b4d, []int{0}
}

func (m *Reward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reward.Unmarshal(m, b)
}
func (m *Reward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reward.Marshal(b, m, deterministic)
}
func (m *Reward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reward.Merge(m, src)
}
func (m *Reward) XXX_Size() int {
	return xxx_messageInfo_Reward.Size(m)
}
func (m *Reward) XXX_DiscardUnknown() {
	xxx_messageInfo_Reward.DiscardUnknown(m)
}

var xxx_messageInfo_Reward proto.InternalMessageInfo

func (m *Reward) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Reward) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Reward) GetStartAt() string {
	if m != nil {
		return m.StartAt
	}
	return ""
}

func (m *Reward) GetEndAt() string {
	if m != nil {
		return m.EndAt
	}
	return ""
}

func (m *Reward) GetRangeType() int32 {
	if m != nil {
		return m.RangeType
	}
	return 0
}

func (m *Reward) GetConditionType() int32 {
	if m != nil {
		return m.ConditionType
	}
	return 0
}

func (m *Reward) GetStepNum() int32 {
	if m != nil {
		return m.StepNum
	}
	return 0
}

func (m *Reward) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Reward) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Reward) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Reward) GetGoodses() []*RewardGoods {
	if m != nil {
		return m.Goodses
	}
	return nil
}

func (m *Reward) GetSteps() []*RewardStep {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *Reward) GetLooped() bool {
	if m != nil {
		return m.Looped
	}
	return false
}

func (m *Reward) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Reward) GetStatusName() string {
	if m != nil {
		return m.StatusName
	}
	return ""
}

//
type RewardResponse struct {
	Entity               *Reward   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager    `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Reward `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info     `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RewardResponse) Reset()         { *m = RewardResponse{} }
func (m *RewardResponse) String() string { return proto.CompactTextString(m) }
func (*RewardResponse) ProtoMessage()    {}
func (*RewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9aa76dc13de95b4d, []int{1}
}

func (m *RewardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewardResponse.Unmarshal(m, b)
}
func (m *RewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewardResponse.Marshal(b, m, deterministic)
}
func (m *RewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewardResponse.Merge(m, src)
}
func (m *RewardResponse) XXX_Size() int {
	return xxx_messageInfo_RewardResponse.Size(m)
}
func (m *RewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RewardResponse proto.InternalMessageInfo

func (m *RewardResponse) GetEntity() *Reward {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *RewardResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *RewardResponse) GetItems() []*Reward {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *RewardResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RewardResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Reward)(nil), "geiqin.srv.ims.reward.Reward")
	proto.RegisterType((*RewardResponse)(nil), "geiqin.srv.ims.reward.RewardResponse")
}

func init() {
	proto.RegisterFile("reward.proto", fileDescriptor_9aa76dc13de95b4d)
}

var fileDescriptor_9aa76dc13de95b4d = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xc7, 0x7f, 0x89, 0x63, 0xa7, 0x19, 0xb7, 0xf9, 0xc1, 0x4a, 0x45, 0xa6, 0x50, 0x61, 0x22,
	0x55, 0xca, 0xc9, 0x48, 0xae, 0x10, 0x17, 0x2e, 0xa5, 0xa0, 0x0a, 0x09, 0xaa, 0xb2, 0x05, 0x71,
	0x8c, 0x16, 0x7b, 0x9a, 0xae, 0x14, 0xef, 0x9a, 0xdd, 0x4d, 0x51, 0x1e, 0x84, 0xd7, 0xe2, 0x35,
	0x78, 0x0d, 0xb4, 0xb3, 0x2e, 0x70, 0x20, 0x81, 0x43, 0x6e, 0x9e, 0xef, 0x7c, 0xe6, 0xcf, 0xce,
	0x8c, 0x0c, 0xbb, 0x06, 0xbf, 0x08, 0x53, 0x17, 0xad, 0xd1, 0x4e, 0xb3, 0xfd, 0x39, 0xca, 0xcf,
	0x52, 0x15, 0xd6, 0xdc, 0x14, 0xb2, 0xb1, 0x45, 0x70, 0x1e, 0xec, 0x56, 0xba, 0x69, 0xb4, 0x0a,
	0xd0, 0xc1, 0xdd, 0xa0, 0x9e, 0x69, 0x5d, 0xdb, 0x4e, 0xba, 0x13, 0xa4, 0x4b, 0x87, 0x6d, 0x50,
	0x26, 0xdf, 0x23, 0x48, 0x38, 0x89, 0x6c, 0x0c, 0x7d, 0x59, 0x67, 0xbd, 0xbc, 0x37, 0x8d, 0x78,
	0x5f, 0xd6, 0x8c, 0xc1, 0x40, 0x89, 0x06, 0xb3, 0x7e, 0xde, 0x9b, 0x8e, 0x38, 0x7d, 0xb3, 0xfb,
	0xb0, 0x63, 0x9d, 0x30, 0x6e, 0x26, 0x5c, 0x16, 0x91, 0x3e, 0x24, 0xfb, 0xc4, 0xb1, 0x7d, 0x48,
	0x50, 0xd5, 0xde, 0x31, 0x20, 0x47, 0x8c, 0xaa, 0x3e, 0x71, 0xec, 0x10, 0xc0, 0x08, 0x35, 0xc7,
	0x99, 0x5b, 0xb5, 0x98, 0xc5, 0x79, 0x6f, 0x1a, 0xf3, 0x11, 0x29, 0xef, 0x57, 0x2d, 0xb2, 0x23,
	0x18, 0x57, 0x5a, 0xd5, 0xd2, 0x49, 0xad, 0x02, 0x92, 0x10, 0xb2, 0xf7, 0x53, 0x25, 0x8c, 0xea,
	0x62, 0x3b, 0x53, 0xcb, 0x26, 0x1b, 0x12, 0x30, 0xf4, 0xf6, 0xf9, 0xb2, 0x61, 0x39, 0xa4, 0x35,
	0xda, 0xca, 0xc8, 0xd6, 0xd3, 0xd9, 0x0e, 0x15, 0xff, 0x5d, 0xf2, 0x2d, 0x54, 0x06, 0x85, 0x43,
	0xea, 0x6e, 0x44, 0xc0, 0xa8, 0x53, 0x42, 0x87, 0xcb, 0xb6, 0xbe, 0x75, 0x43, 0x70, 0x77, 0xca,
	0x89, 0x63, 0xcf, 0x61, 0x38, 0xf7, 0x23, 0x44, 0x9b, 0xa5, 0x79, 0x34, 0x4d, 0xcb, 0x49, 0xf1,
	0xc7, 0xe9, 0x17, 0xfc, 0xd7, 0xb8, 0xf9, 0x6d, 0x08, 0x7b, 0x06, 0xb1, 0x6f, 0xd4, 0x66, 0xbb,
	0x14, 0xfb, 0x78, 0x63, 0xac, 0xdf, 0x0b, 0x0f, 0x3c, 0xbb, 0x07, 0xc9, 0x42, 0xeb, 0x16, 0xeb,
	0x6c, 0x2f, 0xef, 0x4d, 0x77, 0x78, 0x67, 0x79, 0xdd, 0x3a, 0xe1, 0x96, 0x36, 0x1b, 0xd3, 0x1c,
	0x3a, 0x8b, 0x3d, 0x82, 0x34, 0x7c, 0xcd, 0x68, 0x69, 0xff, 0xd3, 0x33, 0x20, 0x48, 0xe7, 0xa2,
	0xc1, 0xc9, 0xd7, 0x3e, 0x8c, 0x43, 0x19, 0x8e, 0xb6, 0xd5, 0xca, 0x22, 0x7b, 0xea, 0x57, 0xe6,
	0xa4, 0x5b, 0xd1, 0xd6, 0xd3, 0xf2, 0x70, 0x63, 0x77, 0xbc, 0x83, 0x59, 0x09, 0x71, 0x2b, 0xe6,
	0x68, 0xe8, 0x32, 0xd2, 0xf2, 0xe1, 0x9a, 0xa8, 0x0b, 0xcf, 0xf0, 0x80, 0xb2, 0x63, 0x88, 0xa5,
	0xc3, 0xc6, 0x66, 0x11, 0xcd, 0xe1, 0x2f, 0x95, 0x02, 0xeb, 0x0b, 0xa1, 0x31, 0xda, 0xd0, 0x45,
	0xad, 0x2f, 0xf4, 0xca, 0x33, 0x3c, 0xa0, 0xec, 0x09, 0x0c, 0xa4, 0xba, 0xd2, 0x74, 0x69, 0x69,
	0xf9, 0x60, 0x4d, 0xc8, 0x6b, 0x75, 0xa5, 0x39, 0x81, 0xe5, 0xb7, 0x01, 0xec, 0x75, 0xe3, 0x47,
	0x73, 0x23, 0x2b, 0x64, 0x17, 0x90, 0x9c, 0xd2, 0x75, 0xb0, 0xcd, 0x6d, 0x1e, 0x1c, 0x6d, 0x7e,
	0x45, 0x37, 0xe6, 0xc9, 0x7f, 0x3e, 0xe3, 0x07, 0x3a, 0xa8, 0x6d, 0x66, 0x7c, 0x89, 0x0b, 0xdc,
	0x6e, 0xc6, 0x53, 0xa1, 0x2a, 0x5c, 0x6c, 0x2d, 0xe3, 0x5b, 0x88, 0xce, 0xd0, 0x6d, 0x2d, 0xdd,
	0x25, 0x24, 0x97, 0x28, 0x4c, 0x75, 0xcd, 0xf2, 0x35, 0x21, 0x2f, 0x84, 0xc5, 0x8f, 0xd7, 0x68,
	0xf0, 0xdf, 0x93, 0xbe, 0x83, 0xc1, 0x1b, 0x69, 0xdd, 0x16, 0x53, 0x7e, 0x4a, 0xe8, 0xcf, 0x7a,
	0xfc, 0x23, 0x00, 0x00, 0xff, 0xff, 0x70, 0xa1, 0xbf, 0x82, 0xb3, 0x05, 0x00, 0x00,
}
