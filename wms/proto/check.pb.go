// Code generated by protoc-gen-go. DO NOT EDIT.
// source: check.proto

package geiqin_srv_wms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Check struct {
	Id                   int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckSn              string         `protobuf:"bytes,2,opt,name=check_sn,json=checkSn,proto3" json:"check_sn,omitempty"`
	UserId               int32          `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Memo                 string         `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	RowTotal             int32          `protobuf:"varint,5,opt,name=row_total,json=rowTotal,proto3" json:"row_total,omitempty"`
	QuantityTotal        int32          `protobuf:"varint,6,opt,name=quantity_total,json=quantityTotal,proto3" json:"quantity_total,omitempty"`
	Status               int32          `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Failure              string         `protobuf:"bytes,8,opt,name=failure,proto3" json:"failure,omitempty"`
	CreatedAt            string         `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string         `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Details              []*CheckDetail `protobuf:"bytes,11,rep,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Check) Reset()         { *m = Check{} }
func (m *Check) String() string { return proto.CompactTextString(m) }
func (*Check) ProtoMessage()    {}
func (*Check) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8d3c606fb107336, []int{0}
}

func (m *Check) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Check.Unmarshal(m, b)
}
func (m *Check) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Check.Marshal(b, m, deterministic)
}
func (m *Check) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Check.Merge(m, src)
}
func (m *Check) XXX_Size() int {
	return xxx_messageInfo_Check.Size(m)
}
func (m *Check) XXX_DiscardUnknown() {
	xxx_messageInfo_Check.DiscardUnknown(m)
}

var xxx_messageInfo_Check proto.InternalMessageInfo

func (m *Check) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Check) GetCheckSn() string {
	if m != nil {
		return m.CheckSn
	}
	return ""
}

func (m *Check) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Check) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Check) GetRowTotal() int32 {
	if m != nil {
		return m.RowTotal
	}
	return 0
}

func (m *Check) GetQuantityTotal() int32 {
	if m != nil {
		return m.QuantityTotal
	}
	return 0
}

func (m *Check) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Check) GetFailure() string {
	if m != nil {
		return m.Failure
	}
	return ""
}

func (m *Check) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Check) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Check) GetDetails() []*CheckDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

type CheckResponse struct {
	Entity               *Check   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Check `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckResponse) Reset()         { *m = CheckResponse{} }
func (m *CheckResponse) String() string { return proto.CompactTextString(m) }
func (*CheckResponse) ProtoMessage()    {}
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8d3c606fb107336, []int{1}
}

func (m *CheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResponse.Unmarshal(m, b)
}
func (m *CheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResponse.Marshal(b, m, deterministic)
}
func (m *CheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResponse.Merge(m, src)
}
func (m *CheckResponse) XXX_Size() int {
	return xxx_messageInfo_CheckResponse.Size(m)
}
func (m *CheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResponse proto.InternalMessageInfo

func (m *CheckResponse) GetEntity() *Check {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *CheckResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *CheckResponse) GetItems() []*Check {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CheckResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CheckResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Check)(nil), "geiqin.srv.wms.Check")
	proto.RegisterType((*CheckResponse)(nil), "geiqin.srv.wms.CheckResponse")
}

func init() {
	proto.RegisterFile("check.proto", fileDescriptor_d8d3c606fb107336)
}

var fileDescriptor_d8d3c606fb107336 = []byte{
	// 482 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0xed, 0xbf, 0xa4, 0x3d, 0xd9, 0x2d, 0x38, 0xf8, 0x67, 0xb6, 0xcb, 0x42, 0xa9, 0x08,
	0x01, 0x31, 0x17, 0x15, 0x2f, 0x05, 0x6b, 0x2b, 0xb2, 0x78, 0x23, 0xa9, 0xe2, 0x65, 0x19, 0x93,
	0xd3, 0xed, 0x60, 0x93, 0xc9, 0xce, 0x4c, 0x5a, 0x7c, 0x27, 0x9f, 0xc4, 0x97, 0xf1, 0x15, 0x24,
	0x67, 0x52, 0xc5, 0x25, 0xae, 0xb0, 0xbd, 0xcb, 0x39, 0xdf, 0x2f, 0xdf, 0x9c, 0x7c, 0x27, 0x09,
	0x04, 0xc9, 0x06, 0x93, 0xaf, 0x51, 0xa1, 0x95, 0x55, 0x6c, 0x78, 0x85, 0xf2, 0x5a, 0xe6, 0x91,
	0xd1, 0xbb, 0x68, 0x9f, 0x99, 0xd1, 0x49, 0xa2, 0xb2, 0x4c, 0xe5, 0x4e, 0x1d, 0xdd, 0x27, 0x74,
	0x81, 0x56, 0xc8, 0xad, 0x6b, 0x4d, 0x7e, 0xb4, 0xa1, 0x37, 0xaf, 0xba, 0x6c, 0x08, 0x6d, 0x99,
	0xf2, 0xd6, 0xb8, 0x15, 0x76, 0xe2, 0xb6, 0x4c, 0xd9, 0x19, 0xf4, 0x09, 0x5f, 0x99, 0x9c, 0xb7,
	0xc7, 0xad, 0x70, 0x10, 0xfb, 0x54, 0x2f, 0x73, 0xf6, 0x18, 0xfc, 0xd2, 0xa0, 0x5e, 0xc9, 0x94,
	0x77, 0xc6, 0xad, 0xb0, 0x17, 0x7b, 0x55, 0x79, 0x99, 0x32, 0x06, 0xdd, 0x0c, 0x33, 0xc5, 0xbb,
	0xc4, 0xd3, 0x35, 0x3b, 0x87, 0x81, 0x56, 0xfb, 0x95, 0x55, 0x56, 0x6c, 0x79, 0x8f, 0xf0, 0xbe,
	0x56, 0xfb, 0x8f, 0x55, 0xcd, 0x9e, 0xc2, 0xf0, 0xba, 0x14, 0xb9, 0x95, 0xf6, 0x5b, 0x4d, 0x78,
	0x44, 0x9c, 0x1e, 0xba, 0x0e, 0x7b, 0x04, 0x9e, 0xb1, 0xc2, 0x96, 0x86, 0xfb, 0xee, 0x3c, 0x57,
	0x31, 0x0e, 0xfe, 0x5a, 0xc8, 0x6d, 0xa9, 0x91, 0xf7, 0xdd, 0x88, 0x75, 0xc9, 0x2e, 0x00, 0x12,
	0x8d, 0xc2, 0x62, 0xba, 0x12, 0x96, 0x0f, 0x48, 0x1c, 0xd4, 0x9d, 0x99, 0xad, 0xe4, 0xb2, 0x48,
	0x0f, 0x32, 0x38, 0xb9, 0xee, 0xcc, 0x2c, 0x7b, 0x09, 0x7e, 0x4a, 0x29, 0x19, 0x1e, 0x8c, 0x3b,
	0x61, 0x30, 0x3d, 0x8f, 0xfe, 0x0e, 0x36, 0x9a, 0xff, 0x49, 0x32, 0x3e, 0xb0, 0x93, 0x9f, 0x2d,
	0x38, 0x25, 0x21, 0x46, 0x53, 0xa8, 0xdc, 0x20, 0x7b, 0x0e, 0x1e, 0xd2, 0x73, 0x50, 0xb0, 0xc1,
	0xf4, 0x61, 0xa3, 0x4f, 0x5c, 0x43, 0xec, 0x19, 0xf4, 0x0a, 0x71, 0x85, 0x9a, 0x02, 0x6f, 0xa0,
	0x3f, 0x54, 0x62, 0xec, 0x98, 0x0a, 0x96, 0x16, 0x33, 0xc3, 0x3b, 0x34, 0xe2, 0x3f, 0xac, 0x1d,
	0x53, 0xc1, 0xa8, 0xb5, 0xd2, 0xb4, 0x9a, 0x06, 0xf8, 0x6d, 0x25, 0xc6, 0x8e, 0x61, 0x21, 0x74,
	0x65, 0xbe, 0x56, 0xb4, 0xad, 0x60, 0xfa, 0xe0, 0x26, 0x7b, 0x99, 0xaf, 0x55, 0x4c, 0xc4, 0xf4,
	0x7b, 0x17, 0x4e, 0xe8, 0x9c, 0x25, 0xea, 0x9d, 0x4c, 0x90, 0xbd, 0x06, 0x6f, 0x4e, 0x29, 0xb3,
	0xe6, 0x79, 0x46, 0x17, 0xcd, 0x63, 0xd6, 0x81, 0x4d, 0xee, 0x55, 0x0e, 0x9f, 0x68, 0x11, 0xc7,
	0x38, 0x2c, 0x70, 0x8b, 0x47, 0x38, 0xcc, 0xc0, 0x9f, 0xab, 0x7c, 0x2d, 0x75, 0x76, 0x8c, 0xc5,
	0xac, 0x28, 0xb4, 0xda, 0xdd, 0x7d, 0x8a, 0x57, 0xd0, 0x79, 0x87, 0xf6, 0xce, 0xb7, 0x2f, 0xc0,
	0x5b, 0xa2, 0xd0, 0xc9, 0x86, 0x9d, 0xdd, 0x44, 0xdf, 0x08, 0x83, 0x9f, 0x37, 0xa8, 0xf1, 0xff,
	0x2e, 0xef, 0xc1, 0x77, 0xaf, 0xb9, 0xb9, 0xcd, 0xe6, 0xc9, 0x6d, 0xdf, 0xc7, 0x6f, 0xb3, 0x2f,
	0x1e, 0xfd, 0x74, 0x5e, 0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x48, 0x19, 0x91, 0x7b, 0xb4, 0x04,
	0x00, 0x00,
}
