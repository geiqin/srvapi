// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stock.proto

package geiqin_srv_wms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Stock struct {
	Id                   int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StockSn              string         `protobuf:"bytes,2,opt,name=stock_sn,json=stockSn,proto3" json:"stock_sn,omitempty"`
	Type                 string         `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	SheetType            string         `protobuf:"bytes,4,opt,name=sheet_type,json=sheetType,proto3" json:"sheet_type,omitempty"`
	HandledAt            string         `protobuf:"bytes,5,opt,name=handled_at,json=handledAt,proto3" json:"handled_at,omitempty"`
	SourceNo             string         `protobuf:"bytes,6,opt,name=source_no,json=sourceNo,proto3" json:"source_no,omitempty"`
	UserId               int64          `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Autoed               bool           `protobuf:"varint,8,opt,name=autoed,proto3" json:"autoed,omitempty"`
	Memo                 string         `protobuf:"bytes,9,opt,name=memo,proto3" json:"memo,omitempty"`
	RowTotal             int32          `protobuf:"varint,10,opt,name=row_total,json=rowTotal,proto3" json:"row_total,omitempty"`
	QuantityTotal        int32          `protobuf:"varint,11,opt,name=quantity_total,json=quantityTotal,proto3" json:"quantity_total,omitempty"`
	Status               int32          `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Failure              string         `protobuf:"bytes,13,opt,name=failure,proto3" json:"failure,omitempty"`
	CreatedAt            string         `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string         `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Details              []*StockDetail `protobuf:"bytes,16,rep,name=details,proto3" json:"details,omitempty"`
	Ok                   bool           `protobuf:"varint,17,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Stock) Reset()         { *m = Stock{} }
func (m *Stock) String() string { return proto.CompactTextString(m) }
func (*Stock) ProtoMessage()    {}
func (*Stock) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{0}
}

func (m *Stock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stock.Unmarshal(m, b)
}
func (m *Stock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stock.Marshal(b, m, deterministic)
}
func (m *Stock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stock.Merge(m, src)
}
func (m *Stock) XXX_Size() int {
	return xxx_messageInfo_Stock.Size(m)
}
func (m *Stock) XXX_DiscardUnknown() {
	xxx_messageInfo_Stock.DiscardUnknown(m)
}

var xxx_messageInfo_Stock proto.InternalMessageInfo

func (m *Stock) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Stock) GetStockSn() string {
	if m != nil {
		return m.StockSn
	}
	return ""
}

func (m *Stock) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Stock) GetSheetType() string {
	if m != nil {
		return m.SheetType
	}
	return ""
}

func (m *Stock) GetHandledAt() string {
	if m != nil {
		return m.HandledAt
	}
	return ""
}

func (m *Stock) GetSourceNo() string {
	if m != nil {
		return m.SourceNo
	}
	return ""
}

func (m *Stock) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Stock) GetAutoed() bool {
	if m != nil {
		return m.Autoed
	}
	return false
}

func (m *Stock) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Stock) GetRowTotal() int32 {
	if m != nil {
		return m.RowTotal
	}
	return 0
}

func (m *Stock) GetQuantityTotal() int32 {
	if m != nil {
		return m.QuantityTotal
	}
	return 0
}

func (m *Stock) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Stock) GetFailure() string {
	if m != nil {
		return m.Failure
	}
	return ""
}

func (m *Stock) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Stock) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Stock) GetDetails() []*StockDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *Stock) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type StockResponse struct {
	Entity               *Stock   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Stock `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StockResponse) Reset()         { *m = StockResponse{} }
func (m *StockResponse) String() string { return proto.CompactTextString(m) }
func (*StockResponse) ProtoMessage()    {}
func (*StockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{1}
}

func (m *StockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockResponse.Unmarshal(m, b)
}
func (m *StockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockResponse.Marshal(b, m, deterministic)
}
func (m *StockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockResponse.Merge(m, src)
}
func (m *StockResponse) XXX_Size() int {
	return xxx_messageInfo_StockResponse.Size(m)
}
func (m *StockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StockResponse proto.InternalMessageInfo

func (m *StockResponse) GetEntity() *Stock {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *StockResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *StockResponse) GetItems() []*Stock {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *StockResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *StockResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Stock)(nil), "geiqin.srv.wms.Stock")
	proto.RegisterType((*StockResponse)(nil), "geiqin.srv.wms.StockResponse")
}

func init() { proto.RegisterFile("stock.proto", fileDescriptor_c87a7814fbd674bd) }

var fileDescriptor_c87a7814fbd674bd = []byte{
	// 579 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x95, 0xdf, 0x6a, 0x13, 0x41,
	0x14, 0xc6, 0xcd, 0xbf, 0xdd, 0xe4, 0xa4, 0x4d, 0xed, 0xa0, 0x75, 0xda, 0x52, 0x08, 0x15, 0x21,
	0x20, 0xe6, 0x22, 0xe2, 0xa5, 0x60, 0x6c, 0x44, 0x8a, 0xa0, 0xb2, 0xa9, 0x78, 0x19, 0xc6, 0xdd,
	0x93, 0x66, 0x68, 0x76, 0x66, 0x3b, 0x33, 0xdb, 0xd2, 0x97, 0xd2, 0x67, 0xf2, 0x09, 0x7c, 0x05,
	0x99, 0x33, 0x5b, 0xc5, 0x12, 0x5b, 0x68, 0x6f, 0x7b, 0xb7, 0xe7, 0xfb, 0x7e, 0xf9, 0xf6, 0xcc,
	0x9c, 0x13, 0x16, 0xba, 0xd6, 0xe9, 0xf4, 0x64, 0x58, 0x18, 0xed, 0x34, 0xeb, 0x1d, 0xa3, 0x3c,
	0x95, 0x6a, 0x68, 0xcd, 0xd9, 0xf0, 0x3c, 0xb7, 0x3b, 0x6b, 0xa9, 0xce, 0x73, 0xad, 0x82, 0xbb,
	0xb3, 0x49, 0xe8, 0x04, 0x9d, 0x90, 0xcb, 0x20, 0xed, 0xff, 0x6c, 0x40, 0x6b, 0xea, 0x55, 0xd6,
	0x83, 0xba, 0xcc, 0x78, 0xad, 0x5f, 0x1b, 0x34, 0x92, 0xba, 0xcc, 0xd8, 0x36, 0xb4, 0x09, 0x9f,
	0x59, 0xc5, 0xeb, 0xfd, 0xda, 0xa0, 0x93, 0xc4, 0x54, 0x4f, 0x15, 0x63, 0xd0, 0x74, 0x17, 0x05,
	0xf2, 0x06, 0xc9, 0xf4, 0xcc, 0xf6, 0x00, 0xec, 0x02, 0xd1, 0xcd, 0xc8, 0x69, 0x92, 0xd3, 0x21,
	0xe5, 0xa8, 0xb2, 0x17, 0x42, 0x65, 0x4b, 0xcc, 0x66, 0xc2, 0xf1, 0x56, 0xb0, 0x2b, 0x65, 0xec,
	0xd8, 0x2e, 0x74, 0xac, 0x2e, 0x4d, 0x8a, 0x33, 0xa5, 0x79, 0x44, 0x6e, 0x3b, 0x08, 0x1f, 0x35,
	0x7b, 0x02, 0x71, 0x69, 0xd1, 0xcc, 0x64, 0xc6, 0x63, 0x6a, 0x2f, 0xf2, 0xe5, 0x61, 0xc6, 0xb6,
	0x20, 0x12, 0xa5, 0xd3, 0x98, 0xf1, 0x76, 0xbf, 0x36, 0x68, 0x27, 0x55, 0xe5, 0xfb, 0xcb, 0x31,
	0xd7, 0xbc, 0x13, 0xfa, 0xf3, 0xcf, 0xfe, 0x0d, 0x46, 0x9f, 0xcf, 0x9c, 0x76, 0x62, 0xc9, 0xa1,
	0x5f, 0x1b, 0xb4, 0x92, 0xb6, 0xd1, 0xe7, 0x47, 0xbe, 0x66, 0xcf, 0xa0, 0x77, 0x5a, 0x0a, 0xe5,
	0xa4, 0xbb, 0xa8, 0x88, 0x2e, 0x11, 0xeb, 0x97, 0x6a, 0xc0, 0xb6, 0x20, 0xb2, 0x4e, 0xb8, 0xd2,
	0xf2, 0x35, 0xb2, 0xab, 0x8a, 0x71, 0x88, 0xe7, 0x42, 0x2e, 0x4b, 0x83, 0x7c, 0x3d, 0xdc, 0x54,
	0x55, 0xfa, 0x63, 0xa7, 0x06, 0x85, 0x0b, 0xc7, 0xee, 0x85, 0x63, 0x57, 0xca, 0xd8, 0x79, 0xbb,
	0x2c, 0xb2, 0x4b, 0x7b, 0x23, 0xd8, 0x95, 0x32, 0x76, 0xec, 0x15, 0xc4, 0x19, 0x0d, 0xcb, 0xf2,
	0x87, 0xfd, 0xc6, 0xa0, 0x3b, 0xda, 0x1d, 0xfe, 0x3b, 0xdf, 0xe1, 0xf4, 0xef, 0x40, 0x93, 0x4b,
	0xd6, 0x4f, 0x52, 0x9f, 0xf0, 0x4d, 0xba, 0x92, 0xba, 0x3e, 0xd9, 0xff, 0x55, 0x83, 0x75, 0x02,
	0x13, 0xb4, 0x85, 0x56, 0x16, 0xd9, 0x0b, 0x88, 0x90, 0xce, 0x45, 0xf3, 0xee, 0x8e, 0x1e, 0xaf,
	0xcc, 0x4d, 0x2a, 0x88, 0x3d, 0x87, 0x56, 0x21, 0x8e, 0xd1, 0xd0, 0x1e, 0xac, 0xa0, 0x3f, 0x7b,
	0x33, 0x09, 0x8c, 0x87, 0xa5, 0xc3, 0xdc, 0xf2, 0x06, 0xb5, 0xfc, 0x9f, 0xe8, 0xc0, 0x78, 0x18,
	0x8d, 0xd1, 0x86, 0x16, 0x66, 0x05, 0xfc, 0xce, 0x9b, 0x49, 0x60, 0xd8, 0x00, 0x9a, 0x52, 0xcd,
	0x35, 0x6d, 0x4f, 0x77, 0xf4, 0xe8, 0x2a, 0x7b, 0xa8, 0xe6, 0x3a, 0x21, 0x62, 0xf4, 0xbd, 0x09,
	0x3d, 0x7a, 0xcf, 0xa1, 0x9a, 0xa2, 0x39, 0x93, 0x29, 0xb2, 0x37, 0x10, 0x1d, 0xd0, 0xbd, 0xb3,
	0xd5, 0x1d, 0xed, 0xec, 0xad, 0x6e, 0xb4, 0xba, 0xb2, 0xfd, 0x07, 0x3e, 0xe1, 0x0b, 0x8d, 0xe6,
	0x2e, 0x09, 0x13, 0x5c, 0xe2, 0x1d, 0x12, 0xc6, 0x10, 0x1f, 0x68, 0x35, 0x97, 0x26, 0xbf, 0x4b,
	0xc4, 0xb8, 0x28, 0x8c, 0x3e, 0xbb, 0x7d, 0x17, 0xaf, 0xa1, 0xf1, 0x1e, 0xdd, 0xad, 0x7f, 0x3e,
	0x81, 0x68, 0x8a, 0xc2, 0xa4, 0x0b, 0xb6, 0x7d, 0x15, 0x7d, 0x2b, 0x2c, 0x7e, 0x5d, 0xa0, 0xc1,
	0x9b, 0x53, 0x3e, 0x40, 0x3c, 0xa9, 0x16, 0xfe, 0x9a, 0x98, 0xa7, 0xd7, 0xfd, 0x63, 0xfe, 0x84,
	0x8d, 0x7e, 0x34, 0x61, 0x83, 0x9c, 0x4f, 0xa5, 0xbb, 0xdf, 0x98, 0xfb, 0x8d, 0xb9, 0x71, 0x63,
	0xbe, 0x45, 0xf4, 0xfd, 0x7c, 0xf9, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xde, 0x68, 0x3f, 0xb9, 0x7f,
	0x07, 0x00, 0x00,
}
