// Code generated by protoc-gen-go. DO NOT EDIT.
// source: supplier.proto

package geiqin_srv_wms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Supplier struct {
	Id                   int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                 string             `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Shortname            string             `protobuf:"bytes,4,opt,name=shortname,proto3" json:"shortname,omitempty"`
	RegistedCode         string             `protobuf:"bytes,5,opt,name=registed_code,json=registedCode,proto3" json:"registed_code,omitempty"`
	SupplyType           string             `protobuf:"bytes,6,opt,name=supply_type,json=supplyType,proto3" json:"supply_type,omitempty"`
	LogisticsType        int32              `protobuf:"varint,7,opt,name=logistics_type,json=logisticsType,proto3" json:"logistics_type,omitempty"`
	Website              string             `protobuf:"bytes,8,opt,name=website,proto3" json:"website,omitempty"`
	AreaId               int64              `protobuf:"varint,9,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	Address              string             `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	Memo                 string             `protobuf:"bytes,11,opt,name=memo,proto3" json:"memo,omitempty"`
	Verified             bool               `protobuf:"varint,12,opt,name=verified,proto3" json:"verified,omitempty"`
	Status               int32              `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            string             `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string             `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Contacts             []*SupplierContact `protobuf:"bytes,16,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Supplier) Reset()         { *m = Supplier{} }
func (m *Supplier) String() string { return proto.CompactTextString(m) }
func (*Supplier) ProtoMessage()    {}
func (*Supplier) Descriptor() ([]byte, []int) {
	return fileDescriptor_86038919225469b2, []int{0}
}

func (m *Supplier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Supplier.Unmarshal(m, b)
}
func (m *Supplier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Supplier.Marshal(b, m, deterministic)
}
func (m *Supplier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Supplier.Merge(m, src)
}
func (m *Supplier) XXX_Size() int {
	return xxx_messageInfo_Supplier.Size(m)
}
func (m *Supplier) XXX_DiscardUnknown() {
	xxx_messageInfo_Supplier.DiscardUnknown(m)
}

var xxx_messageInfo_Supplier proto.InternalMessageInfo

func (m *Supplier) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Supplier) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Supplier) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Supplier) GetShortname() string {
	if m != nil {
		return m.Shortname
	}
	return ""
}

func (m *Supplier) GetRegistedCode() string {
	if m != nil {
		return m.RegistedCode
	}
	return ""
}

func (m *Supplier) GetSupplyType() string {
	if m != nil {
		return m.SupplyType
	}
	return ""
}

func (m *Supplier) GetLogisticsType() int32 {
	if m != nil {
		return m.LogisticsType
	}
	return 0
}

func (m *Supplier) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Supplier) GetAreaId() int64 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *Supplier) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Supplier) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Supplier) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *Supplier) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Supplier) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Supplier) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Supplier) GetContacts() []*SupplierContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

type SupplierWhere struct {
	Paged                int32    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorting              string   `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
	Code                 string   `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Shortname            string   `protobuf:"bytes,6,opt,name=shortname,proto3" json:"shortname,omitempty"`
	RegistedCode         string   `protobuf:"bytes,7,opt,name=registed_code,json=registedCode,proto3" json:"registed_code,omitempty"`
	SupplyType           string   `protobuf:"bytes,8,opt,name=supply_type,json=supplyType,proto3" json:"supply_type,omitempty"`
	Id                   int64    `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Ids                  []int64  `protobuf:"varint,10,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Status               int32    `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupplierWhere) Reset()         { *m = SupplierWhere{} }
func (m *SupplierWhere) String() string { return proto.CompactTextString(m) }
func (*SupplierWhere) ProtoMessage()    {}
func (*SupplierWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_86038919225469b2, []int{1}
}

func (m *SupplierWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplierWhere.Unmarshal(m, b)
}
func (m *SupplierWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplierWhere.Marshal(b, m, deterministic)
}
func (m *SupplierWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplierWhere.Merge(m, src)
}
func (m *SupplierWhere) XXX_Size() int {
	return xxx_messageInfo_SupplierWhere.Size(m)
}
func (m *SupplierWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplierWhere.DiscardUnknown(m)
}

var xxx_messageInfo_SupplierWhere proto.InternalMessageInfo

func (m *SupplierWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *SupplierWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SupplierWhere) GetSorting() string {
	if m != nil {
		return m.Sorting
	}
	return ""
}

func (m *SupplierWhere) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SupplierWhere) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SupplierWhere) GetShortname() string {
	if m != nil {
		return m.Shortname
	}
	return ""
}

func (m *SupplierWhere) GetRegistedCode() string {
	if m != nil {
		return m.RegistedCode
	}
	return ""
}

func (m *SupplierWhere) GetSupplyType() string {
	if m != nil {
		return m.SupplyType
	}
	return ""
}

func (m *SupplierWhere) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SupplierWhere) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *SupplierWhere) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type SupplierResponse struct {
	Entity               *Supplier   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager      `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Supplier `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error      `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info       `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SupplierResponse) Reset()         { *m = SupplierResponse{} }
func (m *SupplierResponse) String() string { return proto.CompactTextString(m) }
func (*SupplierResponse) ProtoMessage()    {}
func (*SupplierResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86038919225469b2, []int{2}
}

func (m *SupplierResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupplierResponse.Unmarshal(m, b)
}
func (m *SupplierResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupplierResponse.Marshal(b, m, deterministic)
}
func (m *SupplierResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupplierResponse.Merge(m, src)
}
func (m *SupplierResponse) XXX_Size() int {
	return xxx_messageInfo_SupplierResponse.Size(m)
}
func (m *SupplierResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SupplierResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SupplierResponse proto.InternalMessageInfo

func (m *SupplierResponse) GetEntity() *Supplier {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *SupplierResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *SupplierResponse) GetItems() []*Supplier {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SupplierResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *SupplierResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Supplier)(nil), "geiqin.srv.wms.Supplier")
	proto.RegisterType((*SupplierWhere)(nil), "geiqin.srv.wms.SupplierWhere")
	proto.RegisterType((*SupplierResponse)(nil), "geiqin.srv.wms.SupplierResponse")
}

func init() {
	proto.RegisterFile("supplier.proto", fileDescriptor_86038919225469b2)
}

var fileDescriptor_86038919225469b2 = []byte{
	// 632 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xc1, 0x6a, 0xdb, 0x40,
	0x10, 0xad, 0x2d, 0x4b, 0x96, 0x47, 0xb1, 0x13, 0x96, 0xa4, 0x5d, 0xdc, 0x86, 0x18, 0x97, 0x82,
	0xa0, 0x60, 0x8a, 0x7b, 0xec, 0x29, 0x38, 0x69, 0x09, 0xc9, 0xa1, 0xc8, 0x2d, 0x3d, 0x1a, 0x45,
	0x9a, 0x38, 0x0b, 0x96, 0x56, 0xdd, 0xdd, 0x38, 0x38, 0x9f, 0xd3, 0xff, 0xea, 0xb5, 0xdf, 0xd0,
	0x63, 0xd9, 0x5d, 0xc9, 0x4d, 0xd2, 0x88, 0x14, 0xe2, 0xdb, 0xce, 0xcc, 0x9b, 0xe7, 0xd1, 0x7b,
	0x0f, 0x0c, 0x3d, 0x79, 0x55, 0x14, 0x0b, 0x86, 0x62, 0x54, 0x08, 0xae, 0x38, 0xe9, 0xcd, 0x91,
	0x7d, 0x67, 0xf9, 0x48, 0x8a, 0xe5, 0xe8, 0x3a, 0x93, 0xfd, 0xad, 0x84, 0x67, 0x19, 0xcf, 0xed,
	0xb4, 0xbf, 0x57, 0xa1, 0x27, 0x3c, 0x57, 0x71, 0xa2, 0x6c, 0x7b, 0xf8, 0xd3, 0x01, 0x7f, 0x5a,
	0x4e, 0x48, 0x0f, 0x9a, 0x2c, 0xa5, 0x8d, 0x41, 0x23, 0x74, 0xa2, 0x26, 0x4b, 0x09, 0x81, 0x56,
	0xc2, 0x53, 0xa4, 0xcd, 0x41, 0x23, 0xec, 0x44, 0xe6, 0xad, 0x7b, 0x79, 0x9c, 0x21, 0x75, 0x6c,
	0x4f, 0xbf, 0xc9, 0x2b, 0xe8, 0xc8, 0x4b, 0x2e, 0x94, 0x19, 0xb4, 0xcc, 0xe0, 0x6f, 0x83, 0xbc,
	0x86, 0xae, 0xc0, 0x39, 0x93, 0x0a, 0xd3, 0x99, 0xa1, 0x73, 0x0d, 0x62, 0xab, 0x6a, 0x4e, 0x34,
	0xed, 0x01, 0x04, 0xe6, 0xc0, 0xd5, 0x4c, 0xad, 0x0a, 0xa4, 0x9e, 0x81, 0x80, 0x6d, 0x7d, 0x59,
	0x15, 0x48, 0xde, 0x40, 0x6f, 0xc1, 0xf5, 0x02, 0x4b, 0xa4, 0xc5, 0xb4, 0x07, 0x8d, 0xd0, 0x8d,
	0xba, 0xeb, 0xae, 0x81, 0x51, 0x68, 0x5f, 0xe3, 0xb9, 0x64, 0x0a, 0xa9, 0x6f, 0x38, 0xaa, 0x92,
	0xbc, 0x80, 0x76, 0x2c, 0x30, 0x9e, 0xb1, 0x94, 0x76, 0xcc, 0x17, 0x7a, 0xba, 0x3c, 0x49, 0xf5,
	0x4a, 0x9c, 0xa6, 0x02, 0xa5, 0xa4, 0x60, 0x57, 0xca, 0x52, 0x7f, 0x6b, 0x86, 0x19, 0xa7, 0x81,
	0xfd, 0x56, 0xfd, 0x26, 0x7d, 0xf0, 0x97, 0x28, 0xd8, 0x05, 0xc3, 0x94, 0x6e, 0x0d, 0x1a, 0xa1,
	0x1f, 0xad, 0x6b, 0xf2, 0x1c, 0x3c, 0xa9, 0x62, 0x75, 0x25, 0x69, 0xd7, 0xdc, 0x56, 0x56, 0x64,
	0x1f, 0x20, 0x11, 0x18, 0x6b, 0x01, 0x62, 0x45, 0x7b, 0x56, 0xa0, 0xb2, 0x73, 0xa8, 0xf4, 0xf8,
	0xaa, 0x48, 0xab, 0xf1, 0xb6, 0x1d, 0x97, 0x9d, 0x43, 0x45, 0x3e, 0x80, 0x9f, 0x58, 0xcf, 0x24,
	0xdd, 0x19, 0x38, 0x61, 0x30, 0x3e, 0x18, 0xdd, 0xb5, 0x7a, 0x34, 0xbd, 0xeb, 0x6d, 0xb4, 0x5e,
	0x18, 0xfe, 0x68, 0x42, 0xb7, 0x9a, 0x7e, 0xbb, 0x44, 0x81, 0x64, 0x17, 0xdc, 0x22, 0x9e, 0xa3,
	0xf5, 0xd9, 0x8d, 0x6c, 0x41, 0x5e, 0x42, 0x47, 0x3f, 0x66, 0x92, 0xdd, 0x58, 0xbf, 0xdd, 0xc8,
	0xd7, 0x8d, 0x29, 0xbb, 0x31, 0xa2, 0x4a, 0x2e, 0x14, 0xcb, 0xe7, 0xa5, 0xed, 0x55, 0xb9, 0x4e,
	0x48, 0xeb, 0x81, 0x84, 0xb8, 0x75, 0x09, 0xf1, 0x1e, 0x4d, 0x48, 0xfb, 0xf1, 0x84, 0xf8, 0xff,
	0x24, 0xc4, 0xa6, 0xb7, 0xb3, 0x4e, 0xef, 0x0e, 0x38, 0x2c, 0xd5, 0x9e, 0x3a, 0xa1, 0x13, 0xe9,
	0xe7, 0x2d, 0x7f, 0x82, 0xdb, 0xfe, 0x0c, 0x7f, 0x37, 0x60, 0xa7, 0x12, 0x29, 0x42, 0x59, 0xf0,
	0x5c, 0x22, 0x79, 0x07, 0x1e, 0xe6, 0x8a, 0xa9, 0x95, 0x11, 0x2a, 0x18, 0xd3, 0x3a, 0xd1, 0xa3,
	0x12, 0x47, 0xde, 0x5a, 0x65, 0x85, 0xd1, 0x2f, 0x18, 0xef, 0xdd, 0x5f, 0xf8, 0xac, 0x87, 0x56,
	0x70, 0x41, 0x46, 0xe0, 0x32, 0x85, 0x99, 0xa4, 0x8e, 0xb1, 0xb4, 0x9e, 0xdd, 0xc2, 0x34, 0x39,
	0x0a, 0xc1, 0x85, 0x91, 0xfa, 0x01, 0xf2, 0x63, 0x3d, 0x8c, 0x2c, 0x86, 0x84, 0xd0, 0x62, 0xf9,
	0x05, 0x37, 0x16, 0x04, 0xe3, 0xdd, 0xfb, 0xd8, 0x93, 0xfc, 0x82, 0x47, 0x06, 0x31, 0xfe, 0xd5,
	0x82, 0xed, 0xea, 0xa7, 0xa6, 0x28, 0x96, 0x2c, 0x41, 0xf2, 0x11, 0xbc, 0x89, 0x09, 0x27, 0xa9,
	0xbd, 0xaa, 0x3f, 0xa8, 0xbd, 0xb7, 0xd4, 0x6f, 0xf8, 0x4c, 0xf3, 0x7c, 0x35, 0x29, 0x7e, 0x22,
	0xcf, 0x29, 0x78, 0x47, 0xb8, 0x40, 0x85, 0x64, 0xbf, 0x0e, 0x6d, 0xa2, 0xfd, 0x5f, 0x64, 0x13,
	0x70, 0x3e, 0xa1, 0x7a, 0xfa, 0x45, 0x53, 0x8c, 0x45, 0x72, 0xb9, 0x89, 0x8b, 0x4e, 0xa0, 0x75,
	0xc6, 0xa4, 0xda, 0x04, 0xd5, 0x19, 0xb4, 0x8f, 0x98, 0x8c, 0xcf, 0x17, 0x1b, 0x91, 0xea, 0x14,
	0xbc, 0xe3, 0x7c, 0x43, 0x64, 0xe7, 0x9e, 0xf9, 0xbf, 0x79, 0xff, 0x27, 0x00, 0x00, 0xff, 0xff,
	0xea, 0x81, 0x87, 0xf8, 0xb6, 0x06, 0x00, 0x00,
}
