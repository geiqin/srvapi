// Code generated by protoc-gen-go. DO NOT EDIT.
// source: article.proto

package geiqin_srv_cms_content

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//文章信息
type Article struct {
	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Title          string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Content        string `protobuf:"bytes,4,opt,name=content,proto3" json:"content"`
	Excerpt        string `protobuf:"bytes,5,opt,name=excerpt,proto3" json:"excerpt"`
	Type           string `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	MimeType       string `protobuf:"bytes,7,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"`
	Keywords       string `protobuf:"bytes,8,opt,name=keywords,proto3" json:"keywords"`
	ThumbId        int64  `protobuf:"varint,9,opt,name=thumb_id,json=thumbId,proto3" json:"thumb_id"`
	ThumbUrl       string `protobuf:"bytes,10,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url"`
	ParentId       int64  `protobuf:"varint,11,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	Drafted        bool   `protobuf:"varint,12,opt,name=drafted,proto3" json:"drafted"`
	Status         string `protobuf:"bytes,13,opt,name=status,proto3" json:"status"`
	CommentEnabled bool   `protobuf:"varint,14,opt,name=comment_enabled,json=commentEnabled,proto3" json:"comment_enabled"`
	CommentCount   int32  `protobuf:"varint,15,opt,name=comment_count,json=commentCount,proto3" json:"comment_count"`
	ViewCount      int32  `protobuf:"varint,16,opt,name=view_count,json=viewCount,proto3" json:"view_count"`
	System         bool   `protobuf:"varint,17,opt,name=system,proto3" json:"system"`
	Sorting        int32  `protobuf:"varint,18,opt,name=sorting,proto3" json:"sorting"`
	UserId         int64  `protobuf:"varint,19,opt,name=user_id,json=userId,proto3" json:"user_id"`
	//google.protobuf.Timestamp published_at =20;
	PublishedAt          string   `protobuf:"bytes,20,opt,name=published_at,json=publishedAt,proto3" json:"published_at"`
	CreatedAt            string   `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Cats                 []*Cat   `protobuf:"bytes,23,rep,name=cats,proto3" json:"cats,omitempty" gorm:"many2many:article_cats;"`
	Tags                 []*Tag   `protobuf:"bytes,24,rep,name=tags,proto3" json:"tags,omitempty" gorm:"many2many:article_tags;"`
	Ids                  []int32  `protobuf:"varint,25,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Article) Reset()         { *m = Article{} }
func (m *Article) String() string { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()    {}
func (*Article) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{0}
}

func (m *Article) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Article.Unmarshal(m, b)
}
func (m *Article) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Article.Marshal(b, m, deterministic)
}
func (m *Article) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Article.Merge(m, src)
}
func (m *Article) XXX_Size() int {
	return xxx_messageInfo_Article.Size(m)
}
func (m *Article) XXX_DiscardUnknown() {
	xxx_messageInfo_Article.DiscardUnknown(m)
}

var xxx_messageInfo_Article proto.InternalMessageInfo

func (m *Article) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Article) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Article) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Article) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Article) GetExcerpt() string {
	if m != nil {
		return m.Excerpt
	}
	return ""
}

func (m *Article) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Article) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *Article) GetKeywords() string {
	if m != nil {
		return m.Keywords
	}
	return ""
}

func (m *Article) GetThumbId() int64 {
	if m != nil {
		return m.ThumbId
	}
	return 0
}

func (m *Article) GetThumbUrl() string {
	if m != nil {
		return m.ThumbUrl
	}
	return ""
}

func (m *Article) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *Article) GetDrafted() bool {
	if m != nil {
		return m.Drafted
	}
	return false
}

func (m *Article) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Article) GetCommentEnabled() bool {
	if m != nil {
		return m.CommentEnabled
	}
	return false
}

func (m *Article) GetCommentCount() int32 {
	if m != nil {
		return m.CommentCount
	}
	return 0
}

func (m *Article) GetViewCount() int32 {
	if m != nil {
		return m.ViewCount
	}
	return 0
}

func (m *Article) GetSystem() bool {
	if m != nil {
		return m.System
	}
	return false
}

func (m *Article) GetSorting() int32 {
	if m != nil {
		return m.Sorting
	}
	return 0
}

func (m *Article) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Article) GetPublishedAt() string {
	if m != nil {
		return m.PublishedAt
	}
	return ""
}

func (m *Article) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Article) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Article) GetCats() []*Cat {
	if m != nil {
		return m.Cats
	}
	return nil
}

func (m *Article) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Article) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

//文章查询参数
type ArticleWhere struct {
	Paged                int32    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Top                  int32    `protobuf:"varint,3,opt,name=top,proto3" json:"top,omitempty"`
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	CatId                int32    `protobuf:"varint,5,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`
	CatSlug              string   `protobuf:"bytes,6,opt,name=cat_slug,json=catSlug,proto3" json:"cat_slug,omitempty"`
	Type                 string   `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleWhere) Reset()         { *m = ArticleWhere{} }
func (m *ArticleWhere) String() string { return proto.CompactTextString(m) }
func (*ArticleWhere) ProtoMessage()    {}
func (*ArticleWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{1}
}

func (m *ArticleWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleWhere.Unmarshal(m, b)
}
func (m *ArticleWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleWhere.Marshal(b, m, deterministic)
}
func (m *ArticleWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleWhere.Merge(m, src)
}
func (m *ArticleWhere) XXX_Size() int {
	return xxx_messageInfo_ArticleWhere.Size(m)
}
func (m *ArticleWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleWhere.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleWhere proto.InternalMessageInfo

func (m *ArticleWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *ArticleWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ArticleWhere) GetTop() int32 {
	if m != nil {
		return m.Top
	}
	return 0
}

func (m *ArticleWhere) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ArticleWhere) GetCatId() int32 {
	if m != nil {
		return m.CatId
	}
	return 0
}

func (m *ArticleWhere) GetCatSlug() string {
	if m != nil {
		return m.CatSlug
	}
	return ""
}

func (m *ArticleWhere) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

//
type ArticleResponse struct {
	Entity               *Article   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager     `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Article `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error     `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info      `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ArticleResponse) Reset()         { *m = ArticleResponse{} }
func (m *ArticleResponse) String() string { return proto.CompactTextString(m) }
func (*ArticleResponse) ProtoMessage()    {}
func (*ArticleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c593d380f9840a2, []int{2}
}

func (m *ArticleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleResponse.Unmarshal(m, b)
}
func (m *ArticleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleResponse.Marshal(b, m, deterministic)
}
func (m *ArticleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleResponse.Merge(m, src)
}
func (m *ArticleResponse) XXX_Size() int {
	return xxx_messageInfo_ArticleResponse.Size(m)
}
func (m *ArticleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleResponse proto.InternalMessageInfo

func (m *ArticleResponse) GetEntity() *Article {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *ArticleResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *ArticleResponse) GetItems() []*Article {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ArticleResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ArticleResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Article)(nil), "geiqin.srv.cms.content.Article")
	proto.RegisterType((*ArticleWhere)(nil), "geiqin.srv.cms.content.ArticleWhere")
	proto.RegisterType((*ArticleResponse)(nil), "geiqin.srv.cms.content.ArticleResponse")
}

func init() {
	proto.RegisterFile("article.proto", fileDescriptor_5c593d380f9840a2)
}

var fileDescriptor_5c593d380f9840a2 = []byte{
	// 731 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0xfe, 0x73, 0xb1, 0x93, 0x4c, 0xd2, 0xb4, 0xff, 0xd0, 0xcb, 0x34, 0xa5, 0x22, 0x04, 0xa4,
	0x66, 0x15, 0x50, 0x2a, 0xc4, 0xba, 0x2a, 0x15, 0x8a, 0xc4, 0x02, 0x9c, 0x56, 0x15, 0xab, 0x68,
	0x62, 0x9f, 0x3a, 0x23, 0x7c, 0x63, 0x66, 0xdc, 0x92, 0xbe, 0x09, 0x0b, 0x9e, 0x81, 0xd7, 0xe1,
	0x71, 0xd0, 0x9c, 0xb1, 0x5b, 0x16, 0xb4, 0x11, 0x52, 0x76, 0x73, 0xbe, 0xf3, 0x9d, 0xef, 0x5c,
	0xf4, 0x59, 0x26, 0x1b, 0x5c, 0x6a, 0xe1, 0x47, 0x30, 0xca, 0x64, 0xaa, 0x53, 0xba, 0x1b, 0x82,
	0xf8, 0x2a, 0x92, 0x91, 0x92, 0xd7, 0x23, 0x3f, 0x56, 0x23, 0x3f, 0x4d, 0x34, 0x24, 0xba, 0xd7,
	0xf1, 0xd3, 0x38, 0x4e, 0x13, 0xcb, 0xea, 0xb5, 0x7c, 0xae, 0xcb, 0xa7, 0xe6, 0xa1, 0x7d, 0x0e,
	0x7e, 0x39, 0xa4, 0x71, 0x62, 0xd5, 0x68, 0x97, 0x54, 0x45, 0xc0, 0x2a, 0xfd, 0xca, 0xb0, 0xe6,
	0x55, 0x45, 0x40, 0xb7, 0x89, 0xa3, 0x85, 0x8e, 0x80, 0x55, 0xfb, 0x95, 0x61, 0xcb, 0xb3, 0x01,
	0xa5, 0xa4, 0x9e, 0xf0, 0x18, 0x58, 0x0d, 0x41, 0x7c, 0x53, 0x46, 0x1a, 0x45, 0x53, 0x56, 0x47,
	0xb8, 0x0c, 0x4d, 0x06, 0xbe, 0xf9, 0x20, 0x33, 0xcd, 0x1c, 0x9b, 0x29, 0x42, 0xa3, 0xa3, 0x97,
	0x19, 0x30, 0xd7, 0xea, 0x98, 0x37, 0x3d, 0x20, 0xad, 0x58, 0xc4, 0x30, 0xc3, 0x44, 0x03, 0x13,
	0x4d, 0x03, 0x9c, 0x9b, 0x64, 0x8f, 0x34, 0xbf, 0xc0, 0xf2, 0x26, 0x95, 0x81, 0x62, 0x4d, 0x9b,
	0x2b, 0x63, 0xba, 0x4f, 0x9a, 0x7a, 0x91, 0xc7, 0xf3, 0x99, 0x08, 0x58, 0x0b, 0x17, 0x68, 0x60,
	0x3c, 0x09, 0x8c, 0xa6, 0x4d, 0xe5, 0x32, 0x62, 0xc4, 0xd6, 0x21, 0x70, 0x21, 0x23, 0x93, 0xcc,
	0xb8, 0x84, 0x44, 0x9b, 0xc2, 0x36, 0x16, 0x36, 0x2d, 0x30, 0x09, 0xcc, 0xec, 0x81, 0xe4, 0x57,
	0x1a, 0x02, 0xd6, 0xe9, 0x57, 0x86, 0x4d, 0xaf, 0x0c, 0xe9, 0x2e, 0x71, 0x95, 0xe6, 0x3a, 0x57,
	0x6c, 0x03, 0x05, 0x8b, 0x88, 0x1e, 0x91, 0x4d, 0x73, 0x73, 0xa3, 0x07, 0x09, 0x9f, 0x47, 0x10,
	0xb0, 0x2e, 0x56, 0x76, 0x0b, 0xf8, 0xcc, 0xa2, 0xf4, 0x05, 0xd9, 0x28, 0x89, 0x7e, 0x9a, 0x27,
	0x9a, 0x6d, 0xf6, 0x2b, 0x43, 0xc7, 0xeb, 0x14, 0xe0, 0xa9, 0xc1, 0xe8, 0x21, 0x21, 0xd7, 0x02,
	0x6e, 0x0a, 0xc6, 0x16, 0x32, 0x5a, 0x06, 0xb1, 0x69, 0x33, 0xc4, 0x52, 0x69, 0x88, 0xd9, 0xff,
	0xd8, 0xa3, 0x88, 0xcc, 0xd8, 0x2a, 0x95, 0x5a, 0x24, 0x21, 0xa3, 0x58, 0x53, 0x86, 0x74, 0x8f,
	0x34, 0x72, 0x05, 0xd2, 0xec, 0xfa, 0x04, 0x77, 0x75, 0x4d, 0x38, 0x09, 0xe8, 0x73, 0xd2, 0xc9,
	0xf2, 0x79, 0x24, 0xd4, 0x02, 0x82, 0x19, 0xd7, 0x6c, 0x1b, 0xb7, 0x6a, 0xdf, 0x61, 0x27, 0x38,
	0x8c, 0x2f, 0x81, 0x6b, 0x4b, 0xd8, 0x41, 0x42, 0xab, 0x40, 0x6c, 0x3a, 0xcf, 0x82, 0x32, 0xbd,
	0x6b, 0xd3, 0x05, 0x72, 0xa2, 0xe9, 0x2b, 0x52, 0xf7, 0xb9, 0x56, 0x6c, 0xaf, 0x5f, 0x1b, 0xb6,
	0xc7, 0x07, 0xa3, 0xbf, 0x3b, 0x76, 0x74, 0xca, 0xb5, 0x87, 0x44, 0x53, 0xa0, 0x79, 0xa8, 0x18,
	0x7b, 0xbc, 0xe0, 0x9c, 0x87, 0x1e, 0x12, 0xe9, 0x16, 0xa9, 0x89, 0x40, 0xb1, 0xfd, 0x7e, 0x6d,
	0xe8, 0x78, 0xe6, 0x39, 0xf8, 0x59, 0x21, 0x9d, 0xc2, 0xda, 0x97, 0x0b, 0x90, 0x60, 0xfc, 0x9c,
	0xf1, 0x10, 0xac, 0xc5, 0x1d, 0xcf, 0x06, 0xd6, 0x02, 0x21, 0xcc, 0x94, 0xb8, 0xb5, 0x4e, 0x77,
	0x8c, 0x05, 0x42, 0x98, 0x8a, 0x5b, 0x30, 0xaa, 0x3a, 0xcd, 0xd0, 0xeb, 0x8e, 0x67, 0x9e, 0xf7,
	0x1f, 0x45, 0xfd, 0xcf, 0x8f, 0x62, 0x87, 0xb8, 0x3e, 0x47, 0x13, 0x39, 0x56, 0xdb, 0xe7, 0xc6,
	0x41, 0xfb, 0xa4, 0x69, 0x60, 0x15, 0xe5, 0x61, 0xe1, 0xf3, 0x86, 0xcf, 0xf5, 0x34, 0xca, 0xc3,
	0x3b, 0xfb, 0x37, 0xee, 0xed, 0x3f, 0xf8, 0x51, 0x25, 0x9b, 0xc5, 0xc4, 0x1e, 0xa8, 0x2c, 0x4d,
	0x14, 0xd0, 0xb7, 0xc4, 0x85, 0x44, 0x0b, 0xbd, 0xc4, 0xa9, 0xdb, 0xe3, 0x67, 0x0f, 0x9d, 0xa2,
	0x2c, 0x2c, 0xe8, 0xf4, 0xd8, 0x6e, 0x2b, 0x71, 0xa7, 0xf6, 0xf8, 0xf0, 0xa1, 0xba, 0x8f, 0x86,
	0x64, 0x8f, 0x21, 0xe9, 0x1b, 0xe2, 0x08, 0x0d, 0xb1, 0x62, 0x35, 0xbc, 0xfb, 0xca, 0x66, 0x96,
	0x6d, 0x7a, 0x81, 0x94, 0xa9, 0xc4, 0xa3, 0x3c, 0xd2, 0xeb, 0xcc, 0x90, 0x3c, 0xcb, 0xa5, 0xaf,
	0x49, 0x5d, 0x24, 0x57, 0x29, 0x5e, 0xac, 0x3d, 0x7e, 0xfa, 0x50, 0xcd, 0x24, 0xb9, 0x4a, 0x3d,
	0x64, 0x8e, 0xbf, 0xd7, 0x49, 0xb7, 0xe8, 0x3c, 0x05, 0x79, 0x2d, 0x7c, 0xa0, 0xe7, 0xc4, 0x3d,
	0x45, 0x13, 0xd2, 0x55, 0xb3, 0xf6, 0x8e, 0x56, 0x2d, 0x53, 0x9c, 0x7c, 0xf0, 0x9f, 0x51, 0xbd,
	0x40, 0xef, 0xae, 0x5b, 0xf5, 0x1d, 0x44, 0xb0, 0x66, 0xd5, 0x4f, 0xa4, 0xf6, 0x1e, 0xf4, 0x5a,
	0x25, 0x3f, 0x13, 0x77, 0x0a, 0x5c, 0xfa, 0x0b, 0xfa, 0x72, 0x45, 0x11, 0x7e, 0x58, 0xff, 0x22,
	0x7d, 0x49, 0xea, 0x1f, 0x84, 0xd2, 0x6b, 0x17, 0x9e, 0xbb, 0xf8, 0x3f, 0x3b, 0xfe, 0x1d, 0x00,
	0x00, 0xff, 0xff, 0x97, 0x0d, 0xc6, 0xa9, 0x1c, 0x07, 0x00, 0x00,
}
