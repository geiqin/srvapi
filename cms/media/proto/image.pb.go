// Code generated by protoc-gen-go. DO NOT EDIT.
// source: image.proto

package geiqin_srv_cms_media

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 图片信息
type Image struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	CatId                int32    `protobuf:"varint,4,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`
	FileName             string   `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	RawName              string   `protobuf:"bytes,6,opt,name=raw_name,json=rawName,proto3" json:"raw_name,omitempty"`
	Hash                 string   `protobuf:"bytes,7,opt,name=hash,proto3" json:"hash,omitempty"`
	Path                 string   `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	Url                  string   `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	MimeType             string   `protobuf:"bytes,10,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Size                 float32  `protobuf:"fixed32,11,opt,name=size,proto3" json:"size,omitempty"`
	Width                int32    `protobuf:"varint,12,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,13,opt,name=height,proto3" json:"height,omitempty"`
	Memo                 string   `protobuf:"bytes,14,opt,name=memo,proto3" json:"memo,omitempty"`
	Taxonomy             string   `protobuf:"bytes,15,opt,name=taxonomy,proto3" json:"taxonomy,omitempty"`
	App                  string   `protobuf:"bytes,16,opt,name=app,proto3" json:"app,omitempty"`
	AppFlag              string   `protobuf:"bytes,17,opt,name=app_flag,json=appFlag,proto3" json:"app_flag,omitempty"`
	CustomerId           int64    `protobuf:"varint,18,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	UserId               int64    `protobuf:"varint,19,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Cat                  *Cat     `protobuf:"bytes,20,opt,name=cat,proto3" json:"cat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_9624c68e2b547544, []int{0}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Image) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Image) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Image) GetCatId() int32 {
	if m != nil {
		return m.CatId
	}
	return 0
}

func (m *Image) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *Image) GetRawName() string {
	if m != nil {
		return m.RawName
	}
	return ""
}

func (m *Image) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Image) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Image) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Image) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *Image) GetSize() float32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Image) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Image) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Image) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Image) GetTaxonomy() string {
	if m != nil {
		return m.Taxonomy
	}
	return ""
}

func (m *Image) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *Image) GetAppFlag() string {
	if m != nil {
		return m.AppFlag
	}
	return ""
}

func (m *Image) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Image) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Image) GetCat() *Cat {
	if m != nil {
		return m.Cat
	}
	return nil
}

// 修改图片信息
type UpdateImage struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	CatId                int32    `protobuf:"varint,4,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`
	Memo                 string   `protobuf:"bytes,14,opt,name=memo,proto3" json:"memo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateImage) Reset()         { *m = UpdateImage{} }
func (m *UpdateImage) String() string { return proto.CompactTextString(m) }
func (*UpdateImage) ProtoMessage()    {}
func (*UpdateImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9624c68e2b547544, []int{1}
}

func (m *UpdateImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateImage.Unmarshal(m, b)
}
func (m *UpdateImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateImage.Marshal(b, m, deterministic)
}
func (m *UpdateImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateImage.Merge(m, src)
}
func (m *UpdateImage) XXX_Size() int {
	return xxx_messageInfo_UpdateImage.Size(m)
}
func (m *UpdateImage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateImage.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateImage proto.InternalMessageInfo

func (m *UpdateImage) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateImage) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateImage) GetCatId() int32 {
	if m != nil {
		return m.CatId
	}
	return 0
}

func (m *UpdateImage) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

//
type ImageResponse struct {
	Entity               *Image   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Image `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageResponse) Reset()         { *m = ImageResponse{} }
func (m *ImageResponse) String() string { return proto.CompactTextString(m) }
func (*ImageResponse) ProtoMessage()    {}
func (*ImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9624c68e2b547544, []int{2}
}

func (m *ImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageResponse.Unmarshal(m, b)
}
func (m *ImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageResponse.Marshal(b, m, deterministic)
}
func (m *ImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageResponse.Merge(m, src)
}
func (m *ImageResponse) XXX_Size() int {
	return xxx_messageInfo_ImageResponse.Size(m)
}
func (m *ImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageResponse proto.InternalMessageInfo

func (m *ImageResponse) GetEntity() *Image {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *ImageResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *ImageResponse) GetItems() []*Image {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ImageResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*Image)(nil), "geiqin.srv.cms.media.Image")
	proto.RegisterType((*UpdateImage)(nil), "geiqin.srv.cms.media.UpdateImage")
	proto.RegisterType((*ImageResponse)(nil), "geiqin.srv.cms.media.ImageResponse")
}

func init() { proto.RegisterFile("image.proto", fileDescriptor_9624c68e2b547544) }

var fileDescriptor_9624c68e2b547544 = []byte{
	// 547 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x5d, 0x6e, 0xd4, 0x30,
	0x10, 0x26, 0x9b, 0x4d, 0xba, 0x3b, 0x69, 0x4b, 0x19, 0x0a, 0xb8, 0xdb, 0x07, 0xc2, 0xf2, 0xb2,
	0x12, 0x52, 0x24, 0xda, 0x23, 0xf0, 0xa7, 0xa0, 0x0a, 0xa1, 0x14, 0x5e, 0x59, 0x99, 0x64, 0x9a,
	0x58, 0x8a, 0x13, 0xe3, 0xb8, 0x2d, 0xe5, 0x18, 0xdc, 0x8f, 0x23, 0x70, 0x07, 0x64, 0x7b, 0x2b,
	0xf1, 0xb0, 0x5b, 0x8a, 0xd4, 0xb7, 0x99, 0x6f, 0xbe, 0x6f, 0xe6, 0x9b, 0xb1, 0x64, 0x48, 0x84,
	0xe4, 0x35, 0x65, 0x4a, 0xf7, 0xa6, 0xc7, 0xfd, 0x9a, 0xc4, 0x37, 0xd1, 0x65, 0x83, 0xbe, 0xc8,
	0x4a, 0x39, 0x64, 0x92, 0x2a, 0xc1, 0x67, 0xdb, 0x65, 0x2f, 0x65, 0xdf, 0x79, 0xce, 0x6c, 0x5a,
	0x72, 0xe3, 0xc3, 0xf9, 0xef, 0x10, 0xa2, 0xdc, 0xca, 0x71, 0x17, 0x46, 0xa2, 0x62, 0x41, 0x1a,
	0x2c, 0xc2, 0x62, 0x24, 0x2a, 0xdc, 0x87, 0xc8, 0x08, 0xd3, 0x12, 0x1b, 0xa5, 0xc1, 0x62, 0x5a,
	0xf8, 0x04, 0x11, 0xc6, 0xe6, 0x4a, 0x11, 0x0b, 0x1d, 0xe8, 0x62, 0x7c, 0x04, 0x71, 0xc9, 0xcd,
	0x52, 0x54, 0x6c, 0x9c, 0x06, 0x8b, 0xa8, 0x88, 0x4a, 0x6e, 0xf2, 0x0a, 0x0f, 0x61, 0x7a, 0x26,
	0x5a, 0x5a, 0x76, 0x5c, 0x12, 0x8b, 0x1c, 0x7f, 0x62, 0x81, 0x0f, 0x5c, 0x12, 0x1e, 0xc0, 0x44,
	0xf3, 0x4b, 0x5f, 0x8b, 0x5d, 0x6d, 0x4b, 0xf3, 0x4b, 0x57, 0x42, 0x18, 0x37, 0x7c, 0x68, 0xd8,
	0x96, 0x1f, 0x61, 0x63, 0x8b, 0x29, 0x6e, 0x1a, 0x36, 0xf1, 0x98, 0x8d, 0x71, 0x0f, 0xc2, 0x73,
	0xdd, 0xb2, 0xa9, 0x83, 0x6c, 0x68, 0x27, 0x4a, 0x21, 0x69, 0xe9, 0x1c, 0x82, 0x9f, 0x68, 0x81,
	0x4f, 0xd6, 0x25, 0xc2, 0x78, 0x10, 0x3f, 0x88, 0x25, 0x69, 0xb0, 0x18, 0x15, 0x2e, 0xb6, 0x3b,
	0x5e, 0x8a, 0xca, 0x34, 0x6c, 0xdb, 0x1b, 0x77, 0x09, 0x3e, 0x86, 0xb8, 0x21, 0x51, 0x37, 0x86,
	0xed, 0x38, 0x78, 0x95, 0xd9, 0x0e, 0x92, 0x64, 0xcf, 0x76, 0xbd, 0x09, 0x1b, 0xe3, 0x0c, 0x26,
	0x86, 0x7f, 0xef, 0xbb, 0x5e, 0x5e, 0xb1, 0xfb, 0x7e, 0xe2, 0x75, 0x6e, 0x0d, 0x72, 0xa5, 0xd8,
	0x9e, 0x37, 0xc8, 0x95, 0xb2, 0x5b, 0x73, 0xa5, 0x96, 0x67, 0x2d, 0xaf, 0xd9, 0x03, 0xbf, 0x35,
	0x57, 0xea, 0x6d, 0xcb, 0x6b, 0x7c, 0x0a, 0x49, 0x79, 0x3e, 0x98, 0x5e, 0x92, 0xb6, 0x97, 0x44,
	0xf7, 0x0e, 0x70, 0x0d, 0xe5, 0x15, 0x3e, 0x81, 0xad, 0xf3, 0xc1, 0x17, 0x1f, 0xba, 0x62, 0x6c,
	0xd3, 0xbc, 0xc2, 0x17, 0x10, 0x96, 0xdc, 0xb0, 0xfd, 0x34, 0x58, 0x24, 0x47, 0x07, 0xd9, 0xba,
	0xf7, 0xcf, 0x5e, 0x71, 0x53, 0x58, 0xd6, 0xfc, 0x0b, 0x24, 0x9f, 0x55, 0xc5, 0x0d, 0xfd, 0xcf,
	0xa3, 0x6f, 0x78, 0xe0, 0x35, 0xf7, 0x98, 0xff, 0x0a, 0x60, 0xc7, 0xb5, 0x2e, 0x68, 0x50, 0x7d,
	0x37, 0x10, 0x1e, 0x43, 0x4c, 0x9d, 0x11, 0xe6, 0xca, 0x8d, 0x49, 0x8e, 0x0e, 0xd7, 0x3b, 0xf4,
	0xa2, 0x15, 0x15, 0x5f, 0x42, 0xa4, 0x78, 0x4d, 0xda, 0xf9, 0xd8, 0xa8, 0xf9, 0x68, 0x29, 0x85,
	0x67, 0x5a, 0x89, 0x30, 0x24, 0x07, 0x16, 0xa6, 0xe1, 0xbf, 0xc6, 0x78, 0xa6, 0x95, 0x90, 0xd6,
	0xbd, 0x76, 0x6b, 0x6d, 0x94, 0xbc, 0xb1, 0x94, 0xc2, 0x33, 0x8f, 0x7e, 0x86, 0xb0, 0xed, 0x7a,
	0x9c, 0x92, 0xbe, 0x10, 0x25, 0x61, 0x01, 0xb1, 0x3f, 0x28, 0x3e, 0x5b, 0x2f, 0xff, 0xeb, 0xdc,
	0xb3, 0xe7, 0x37, 0x99, 0x5a, 0x1d, 0x6c, 0x7e, 0x0f, 0x73, 0x08, 0xdf, 0x91, 0xc1, 0x9b, 0x56,
	0xb8, 0x6d, 0xab, 0x13, 0x88, 0x4f, 0x89, 0xeb, 0xb2, 0xb9, 0x93, 0x6e, 0x39, 0xc4, 0xaf, 0xa9,
	0x25, 0x43, 0xc8, 0x36, 0x08, 0xaa, 0xdb, 0xb6, 0x7a, 0x0f, 0xe3, 0x13, 0x31, 0xdc, 0xc9, 0x92,
	0x5f, 0x63, 0xf7, 0x97, 0x1d, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xba, 0xd6, 0xd6, 0x8a, 0x09,
	0x05, 0x00, 0x00,
}
