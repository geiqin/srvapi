// Code generated by protoc-gen-go. DO NOT EDIT.
// source: charge.proto

package geiqin_srv_pay

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//支付凭证
type Charge struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChargeSn             string   `protobuf:"bytes,2,opt,name=charge_sn,json=chargeSn,proto3" json:"charge_sn,omitempty"`
	Lived                bool     `protobuf:"varint,3,opt,name=lived,proto3" json:"lived,omitempty"`
	Paid                 bool     `protobuf:"varint,4,opt,name=paid,proto3" json:"paid,omitempty"`
	Refunded             bool     `protobuf:"varint,5,opt,name=refunded,proto3" json:"refunded,omitempty"`
	Reversed             bool     `protobuf:"varint,6,opt,name=reversed,proto3" json:"reversed,omitempty"`
	PaygateId            int64    `protobuf:"varint,7,opt,name=paygate_id,json=paygateId,proto3" json:"paygate_id,omitempty"`
	OpenId               string   `protobuf:"bytes,8,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	TargetUserType       string   `protobuf:"bytes,10,opt,name=target_user_type,json=targetUserType,proto3" json:"target_user_type,omitempty"`
	TargetUserId         int64    `protobuf:"varint,11,opt,name=target_user_id,json=targetUserId,proto3" json:"target_user_id,omitempty"`
	OrderId              int64    `protobuf:"varint,13,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	OrderSn              string   `protobuf:"bytes,14,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`
	Amount               float32  `protobuf:"fixed32,15,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string   `protobuf:"bytes,16,opt,name=currency,proto3" json:"currency,omitempty"`
	Subject              string   `protobuf:"bytes,17,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                 string   `protobuf:"bytes,18,opt,name=body,proto3" json:"body,omitempty"`
	Extra                string   `protobuf:"bytes,19,opt,name=extra,proto3" json:"extra,omitempty"`
	Channel              string   `protobuf:"bytes,22,opt,name=channel,proto3" json:"channel,omitempty"`
	TradeType            string   `protobuf:"bytes,23,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	TransactionNo        string   `protobuf:"bytes,24,opt,name=transaction_no,json=transactionNo,proto3" json:"transaction_no,omitempty"`
	RefundedAmount       float32  `protobuf:"fixed32,25,opt,name=refunded_amount,json=refundedAmount,proto3" json:"refunded_amount,omitempty"`
	FailureCode          string   `protobuf:"bytes,26,opt,name=failure_code,json=failureCode,proto3" json:"failure_code,omitempty"`
	FailureMsg           string   `protobuf:"bytes,27,opt,name=failure_msg,json=failureMsg,proto3" json:"failure_msg,omitempty"`
	Credential           string   `protobuf:"bytes,28,opt,name=credential,proto3" json:"credential,omitempty"`
	ClientIp             string   `protobuf:"bytes,29,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	Memo                 string   `protobuf:"bytes,30,opt,name=memo,proto3" json:"memo,omitempty"`
	Metadata             string   `protobuf:"bytes,31,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status               string   `protobuf:"bytes,32,opt,name=status,proto3" json:"status,omitempty"`
	PaidAt               string   `protobuf:"bytes,20,opt,name=paid_at,json=paidAt,proto3" json:"paid_at,omitempty"`
	ExpiredAt            string   `protobuf:"bytes,21,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`
	CreatedAt            string   `protobuf:"bytes,33,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,34,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Charge) Reset()         { *m = Charge{} }
func (m *Charge) String() string { return proto.CompactTextString(m) }
func (*Charge) ProtoMessage()    {}
func (*Charge) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{0}
}

func (m *Charge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Charge.Unmarshal(m, b)
}
func (m *Charge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Charge.Marshal(b, m, deterministic)
}
func (m *Charge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Charge.Merge(m, src)
}
func (m *Charge) XXX_Size() int {
	return xxx_messageInfo_Charge.Size(m)
}
func (m *Charge) XXX_DiscardUnknown() {
	xxx_messageInfo_Charge.DiscardUnknown(m)
}

var xxx_messageInfo_Charge proto.InternalMessageInfo

func (m *Charge) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Charge) GetChargeSn() string {
	if m != nil {
		return m.ChargeSn
	}
	return ""
}

func (m *Charge) GetLived() bool {
	if m != nil {
		return m.Lived
	}
	return false
}

func (m *Charge) GetPaid() bool {
	if m != nil {
		return m.Paid
	}
	return false
}

func (m *Charge) GetRefunded() bool {
	if m != nil {
		return m.Refunded
	}
	return false
}

func (m *Charge) GetReversed() bool {
	if m != nil {
		return m.Reversed
	}
	return false
}

func (m *Charge) GetPaygateId() int64 {
	if m != nil {
		return m.PaygateId
	}
	return 0
}

func (m *Charge) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *Charge) GetTargetUserType() string {
	if m != nil {
		return m.TargetUserType
	}
	return ""
}

func (m *Charge) GetTargetUserId() int64 {
	if m != nil {
		return m.TargetUserId
	}
	return 0
}

func (m *Charge) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *Charge) GetOrderSn() string {
	if m != nil {
		return m.OrderSn
	}
	return ""
}

func (m *Charge) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Charge) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Charge) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Charge) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Charge) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *Charge) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *Charge) GetTradeType() string {
	if m != nil {
		return m.TradeType
	}
	return ""
}

func (m *Charge) GetTransactionNo() string {
	if m != nil {
		return m.TransactionNo
	}
	return ""
}

func (m *Charge) GetRefundedAmount() float32 {
	if m != nil {
		return m.RefundedAmount
	}
	return 0
}

func (m *Charge) GetFailureCode() string {
	if m != nil {
		return m.FailureCode
	}
	return ""
}

func (m *Charge) GetFailureMsg() string {
	if m != nil {
		return m.FailureMsg
	}
	return ""
}

func (m *Charge) GetCredential() string {
	if m != nil {
		return m.Credential
	}
	return ""
}

func (m *Charge) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *Charge) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Charge) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *Charge) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Charge) GetPaidAt() string {
	if m != nil {
		return m.PaidAt
	}
	return ""
}

func (m *Charge) GetExpiredAt() string {
	if m != nil {
		return m.ExpiredAt
	}
	return ""
}

func (m *Charge) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Charge) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

//
type ChargeResponse struct {
	Entity               *Charge   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager    `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Charge `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info     `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ChargeResponse) Reset()         { *m = ChargeResponse{} }
func (m *ChargeResponse) String() string { return proto.CompactTextString(m) }
func (*ChargeResponse) ProtoMessage()    {}
func (*ChargeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0de23af59a36de, []int{1}
}

func (m *ChargeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargeResponse.Unmarshal(m, b)
}
func (m *ChargeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargeResponse.Marshal(b, m, deterministic)
}
func (m *ChargeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargeResponse.Merge(m, src)
}
func (m *ChargeResponse) XXX_Size() int {
	return xxx_messageInfo_ChargeResponse.Size(m)
}
func (m *ChargeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChargeResponse proto.InternalMessageInfo

func (m *ChargeResponse) GetEntity() *Charge {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *ChargeResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *ChargeResponse) GetItems() []*Charge {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ChargeResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ChargeResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Charge)(nil), "geiqin.srv.pay.Charge")
	proto.RegisterType((*ChargeResponse)(nil), "geiqin.srv.pay.ChargeResponse")
}

func init() {
	proto.RegisterFile("charge.proto", fileDescriptor_5d0de23af59a36de)
}

var fileDescriptor_5d0de23af59a36de = []byte{
	// 716 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdd, 0x6e, 0x23, 0x35,
	0x14, 0x26, 0x49, 0x3b, 0x49, 0x4f, 0xda, 0xd9, 0xc5, 0x74, 0xbb, 0x6e, 0x96, 0xed, 0x66, 0x23,
	0x10, 0x91, 0x40, 0xb9, 0x08, 0x0f, 0x80, 0xba, 0x65, 0x85, 0x72, 0x01, 0x42, 0x13, 0x56, 0x5c,
	0x8e, 0xdc, 0xf1, 0x49, 0x62, 0x94, 0xb1, 0x07, 0xdb, 0x13, 0x6d, 0x1e, 0x84, 0x27, 0xe4, 0x0d,
	0x78, 0x02, 0xe4, 0x63, 0x87, 0x2d, 0x15, 0x45, 0x2b, 0xf5, 0x6e, 0xbe, 0x1f, 0x7d, 0xb6, 0x3f,
	0xfb, 0x0c, 0x9c, 0x56, 0x1b, 0x61, 0xd7, 0x38, 0x6b, 0xac, 0xf1, 0x86, 0xe5, 0x6b, 0x54, 0xbf,
	0x2b, 0x3d, 0x73, 0x76, 0x37, 0x6b, 0xc4, 0x7e, 0x74, 0x5a, 0x99, 0xba, 0x36, 0x3a, 0xaa, 0x93,
	0x3f, 0xfa, 0x90, 0xdd, 0x90, 0x9d, 0xe5, 0xd0, 0x55, 0x92, 0x77, 0xc6, 0x9d, 0x69, 0xaf, 0xe8,
	0x2a, 0xc9, 0x5e, 0xc0, 0x49, 0x0c, 0x2a, 0x9d, 0xe6, 0xdd, 0x71, 0x67, 0x7a, 0x52, 0x0c, 0x22,
	0xb1, 0xd4, 0xec, 0x1c, 0x8e, 0xb7, 0x6a, 0x87, 0x92, 0xf7, 0xc6, 0x9d, 0xe9, 0xa0, 0x88, 0x80,
	0x31, 0x38, 0x6a, 0x84, 0x92, 0xfc, 0x88, 0x48, 0xfa, 0x66, 0x23, 0x18, 0x58, 0x5c, 0xb5, 0x5a,
	0xa2, 0xe4, 0xc7, 0xc4, 0xff, 0x83, 0xa3, 0xb6, 0x43, 0xeb, 0x50, 0xf2, 0xec, 0xa0, 0x45, 0xcc,
	0x5e, 0x02, 0x34, 0x62, 0xbf, 0x16, 0x1e, 0x4b, 0x25, 0x79, 0x9f, 0xb6, 0x75, 0x92, 0x98, 0x85,
	0x64, 0xcf, 0xa1, 0x6f, 0x1a, 0xd4, 0x41, 0x1b, 0xd0, 0xde, 0xb2, 0x00, 0x17, 0x92, 0x4d, 0xe1,
	0xa9, 0x0f, 0x9b, 0xf4, 0x65, 0xeb, 0xd0, 0x96, 0x7e, 0xdf, 0x20, 0x07, 0x72, 0xe4, 0x91, 0x7f,
	0xe7, 0xd0, 0xfe, 0xb2, 0x6f, 0x90, 0x7d, 0x01, 0xf9, 0x5d, 0xa7, 0x92, 0x7c, 0x48, 0xab, 0x9c,
	0x7e, 0xf0, 0x2d, 0x24, 0xbb, 0x84, 0x81, 0xb1, 0x32, 0xea, 0x67, 0xa4, 0xf7, 0x09, 0xdf, 0x95,
	0x9c, 0xe6, 0x39, 0x2d, 0x11, 0xa5, 0xa5, 0x66, 0x17, 0x90, 0x89, 0xda, 0xb4, 0xda, 0xf3, 0x27,
	0xe3, 0xce, 0xb4, 0x5b, 0x24, 0x14, 0x4e, 0x5c, 0xb5, 0xd6, 0xa2, 0xae, 0xf6, 0xfc, 0x69, 0xea,
	0x34, 0x61, 0xc6, 0xa1, 0xef, 0xda, 0xdb, 0xdf, 0xb0, 0xf2, 0xfc, 0xd3, 0x98, 0x96, 0x60, 0xe8,
	0xf5, 0xd6, 0xc8, 0x3d, 0x67, 0x44, 0xd3, 0x77, 0xb8, 0x01, 0x7c, 0xef, 0xad, 0xe0, 0x9f, 0x11,
	0x19, 0x41, 0xc8, 0xa8, 0x36, 0x42, 0x6b, 0xdc, 0xf2, 0x8b, 0x98, 0x91, 0x60, 0xe8, 0xd3, 0x5b,
	0x21, 0x31, 0x36, 0xf2, 0x9c, 0xc4, 0x13, 0x62, 0xa8, 0x8c, 0x2f, 0x21, 0xf7, 0x56, 0x68, 0x27,
	0x2a, 0xaf, 0x8c, 0x2e, 0xb5, 0xe1, 0x9c, 0x2c, 0x67, 0x77, 0xd8, 0x9f, 0x0c, 0xfb, 0x0a, 0x9e,
	0x1c, 0x6e, 0xaf, 0x4c, 0x07, 0xbc, 0xa4, 0x03, 0xe6, 0x07, 0xfa, 0x3a, 0x1e, 0xf4, 0x35, 0x9c,
	0xae, 0x84, 0xda, 0xb6, 0x16, 0xcb, 0xca, 0x48, 0xe4, 0x23, 0x4a, 0x1b, 0x26, 0xee, 0xc6, 0x48,
	0x64, 0xaf, 0xe0, 0x00, 0xcb, 0xda, 0xad, 0xf9, 0x0b, 0x72, 0x40, 0xa2, 0x7e, 0x74, 0x6b, 0x76,
	0x05, 0x50, 0x59, 0x94, 0xa8, 0xbd, 0x12, 0x5b, 0xfe, 0x79, 0xd4, 0x3f, 0x30, 0xf4, 0x42, 0xb7,
	0x0a, 0xb5, 0x2f, 0x55, 0xc3, 0x5f, 0xa6, 0x36, 0x89, 0x58, 0x34, 0xa1, 0xb3, 0x1a, 0x6b, 0xc3,
	0xaf, 0x62, 0x67, 0xe1, 0x3b, 0xb4, 0x5f, 0xa3, 0x17, 0x52, 0x78, 0xc1, 0x5f, 0x45, 0xff, 0x01,
	0x87, 0x1b, 0x73, 0x5e, 0xf8, 0xd6, 0xf1, 0x71, 0x7c, 0x4f, 0x11, 0x85, 0x87, 0x16, 0xde, 0x71,
	0x29, 0x3c, 0x3f, 0x8f, 0x42, 0x80, 0xd7, 0x3e, 0x14, 0x8a, 0xef, 0x1b, 0x65, 0x91, 0xb4, 0x67,
	0xb1, 0xd0, 0xc4, 0x44, 0xb9, 0xb2, 0x28, 0x7c, 0x94, 0x5f, 0x47, 0x39, 0x31, 0x51, 0x6e, 0x1b,
	0x79, 0x90, 0x27, 0x51, 0x4e, 0xcc, 0xb5, 0x9f, 0xfc, 0xd5, 0x81, 0x3c, 0xce, 0x65, 0x81, 0xae,
	0x31, 0xda, 0x21, 0x9b, 0x41, 0x16, 0xce, 0xed, 0xf7, 0x34, 0xa3, 0xc3, 0xf9, 0xc5, 0xec, 0xdf,
	0x93, 0x3d, 0x4b, 0xfe, 0xe4, 0x62, 0x5f, 0xc3, 0x71, 0x23, 0xd6, 0x68, 0x69, 0x76, 0x87, 0xf3,
	0x67, 0xf7, 0xed, 0x3f, 0x07, 0xb1, 0x88, 0x1e, 0xf6, 0x0d, 0x1c, 0x2b, 0x8f, 0xb5, 0xe3, 0xbd,
	0x71, 0xef, 0x7f, 0xb2, 0xa3, 0x29, 0x44, 0xa3, 0xb5, 0xc6, 0xd2, 0xa0, 0xff, 0x47, 0xf4, 0xdb,
	0x20, 0x16, 0xd1, 0xc3, 0xa6, 0x70, 0xa4, 0xf4, 0xca, 0xd0, 0xf0, 0x0f, 0xe7, 0xe7, 0xf7, 0xbd,
	0x0b, 0xbd, 0x32, 0x05, 0x39, 0xe6, 0x7f, 0x76, 0xe1, 0x2c, 0x2e, 0xb4, 0x44, 0xbb, 0x53, 0x15,
	0xb2, 0x37, 0x90, 0xdd, 0x50, 0x65, 0xec, 0x81, 0x1d, 0x8d, 0xae, 0x1e, 0xd8, 0x69, 0x6a, 0x6d,
	0xf2, 0x49, 0xc8, 0x78, 0x47, 0xbd, 0x3e, 0x2e, 0xe3, 0x7b, 0xdc, 0xe2, 0xa3, 0x32, 0xbe, 0x83,
	0xde, 0x0f, 0xe8, 0x1f, 0x11, 0xf0, 0x16, 0xb2, 0x25, 0x0a, 0x5b, 0x6d, 0xd8, 0xe5, 0x7d, 0xef,
	0x1b, 0xe1, 0xf0, 0xd7, 0x0d, 0xda, 0x8f, 0x88, 0xb9, 0xcd, 0xe8, 0xcf, 0xff, 0xed, 0xdf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x10, 0x69, 0xb2, 0xff, 0x27, 0x06, 0x00, 0x00,
}
