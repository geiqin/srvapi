// Code generated by protoc-gen-go. DO NOT EDIT.
// source: leaderStatement.proto

package geiqin_srv_dms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LeaderStatement struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SourceId             int64    `protobuf:"varint,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	LeaderId             int64    `protobuf:"varint,3,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	Money                float32  `protobuf:"fixed32,4,opt,name=money,proto3" json:"money,omitempty"`
	Source               string   `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt            string   `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaderStatement) Reset()         { *m = LeaderStatement{} }
func (m *LeaderStatement) String() string { return proto.CompactTextString(m) }
func (*LeaderStatement) ProtoMessage()    {}
func (*LeaderStatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_da4c0899599e8373, []int{0}
}

func (m *LeaderStatement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaderStatement.Unmarshal(m, b)
}
func (m *LeaderStatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaderStatement.Marshal(b, m, deterministic)
}
func (m *LeaderStatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaderStatement.Merge(m, src)
}
func (m *LeaderStatement) XXX_Size() int {
	return xxx_messageInfo_LeaderStatement.Size(m)
}
func (m *LeaderStatement) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaderStatement.DiscardUnknown(m)
}

var xxx_messageInfo_LeaderStatement proto.InternalMessageInfo

func (m *LeaderStatement) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LeaderStatement) GetSourceId() int64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *LeaderStatement) GetLeaderId() int64 {
	if m != nil {
		return m.LeaderId
	}
	return 0
}

func (m *LeaderStatement) GetMoney() float32 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *LeaderStatement) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *LeaderStatement) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LeaderStatement) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *LeaderStatement) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type LeaderStatementWhere struct {
	Paged    int32 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Top      int32 `protobuf:"varint,3,opt,name=top,proto3" json:"top,omitempty"`
	//base params
	Id                   int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Ids                  []int64  `protobuf:"varint,5,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	LeaderId             int64    `protobuf:"varint,7,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaderStatementWhere) Reset()         { *m = LeaderStatementWhere{} }
func (m *LeaderStatementWhere) String() string { return proto.CompactTextString(m) }
func (*LeaderStatementWhere) ProtoMessage()    {}
func (*LeaderStatementWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_da4c0899599e8373, []int{1}
}

func (m *LeaderStatementWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaderStatementWhere.Unmarshal(m, b)
}
func (m *LeaderStatementWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaderStatementWhere.Marshal(b, m, deterministic)
}
func (m *LeaderStatementWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaderStatementWhere.Merge(m, src)
}
func (m *LeaderStatementWhere) XXX_Size() int {
	return xxx_messageInfo_LeaderStatementWhere.Size(m)
}
func (m *LeaderStatementWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaderStatementWhere.DiscardUnknown(m)
}

var xxx_messageInfo_LeaderStatementWhere proto.InternalMessageInfo

func (m *LeaderStatementWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *LeaderStatementWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *LeaderStatementWhere) GetTop() int32 {
	if m != nil {
		return m.Top
	}
	return 0
}

func (m *LeaderStatementWhere) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LeaderStatementWhere) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *LeaderStatementWhere) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LeaderStatementWhere) GetLeaderId() int64 {
	if m != nil {
		return m.LeaderId
	}
	return 0
}

func init() {
	proto.RegisterType((*LeaderStatement)(nil), "geiqin.srv.dms.LeaderStatement")
	proto.RegisterType((*LeaderStatementWhere)(nil), "geiqin.srv.dms.LeaderStatementWhere")
}

func init() {
	proto.RegisterFile("leaderStatement.proto", fileDescriptor_da4c0899599e8373)
}

var fileDescriptor_da4c0899599e8373 = []byte{
	// 352 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x92, 0xc1, 0x8e, 0xda, 0x30,
	0x10, 0x86, 0xeb, 0x84, 0x04, 0x98, 0x03, 0x20, 0x8b, 0x22, 0x97, 0xaa, 0x55, 0xca, 0x29, 0xa7,
	0x1c, 0xe8, 0x13, 0x70, 0xa8, 0x2a, 0xa4, 0x72, 0x71, 0x0e, 0x3d, 0xa2, 0x34, 0x1e, 0x81, 0xa5,
	0x92, 0xa4, 0xb6, 0x41, 0x82, 0x87, 0x42, 0x7d, 0x9f, 0x7d, 0x99, 0x95, 0xed, 0x2c, 0x52, 0xd0,
	0x22, 0xed, 0x75, 0x6f, 0x33, 0xff, 0x37, 0x93, 0xcc, 0xff, 0x27, 0xf0, 0xf1, 0x2f, 0x16, 0x02,
	0x55, 0x6e, 0x0a, 0x83, 0x07, 0xac, 0x4c, 0xd6, 0xa8, 0xda, 0xd4, 0x74, 0xb4, 0x43, 0xf9, 0x4f,
	0x56, 0x99, 0x56, 0xa7, 0x4c, 0x1c, 0xf4, 0x7c, 0xac, 0xbb, 0x03, 0x8b, 0x27, 0x02, 0xe3, 0x5f,
	0xdd, 0x55, 0x3a, 0x82, 0x40, 0x0a, 0x46, 0x12, 0x92, 0x86, 0x3c, 0x90, 0x82, 0x7e, 0x86, 0xa1,
	0xae, 0x8f, 0xaa, 0xc4, 0xad, 0x14, 0x2c, 0x70, 0xf2, 0xc0, 0x0b, 0x6b, 0x07, 0xfd, 0xab, 0x2d,
	0x0c, 0x3d, 0xf4, 0xc2, 0x5a, 0xd0, 0x29, 0x44, 0x87, 0xba, 0xc2, 0x33, 0xeb, 0x25, 0x24, 0x0d,
	0xb8, 0x6f, 0xe8, 0x0c, 0x62, 0xbf, 0xce, 0xa2, 0x84, 0xa4, 0x43, 0xde, 0x76, 0x94, 0x42, 0xcf,
	0x9c, 0x1b, 0x64, 0xb1, 0x53, 0x5d, 0x4d, 0xbf, 0x00, 0x94, 0x0a, 0x0b, 0x83, 0x62, 0x5b, 0x18,
	0xd6, 0x77, 0x64, 0xd8, 0x2a, 0x2b, 0x63, 0xf1, 0xb1, 0x11, 0x2f, 0x78, 0xe0, 0x71, 0xab, 0xac,
	0xcc, 0xe2, 0x4a, 0x60, 0x7a, 0xe7, 0xee, 0xf7, 0x1e, 0x15, 0xda, 0xc3, 0x9a, 0x62, 0x87, 0xde,
	0x65, 0xc4, 0x7d, 0x63, 0xbd, 0xd8, 0x62, 0xab, 0xe5, 0x05, 0x9d, 0xd1, 0x88, 0x0f, 0xac, 0x90,
	0xcb, 0x0b, 0xd2, 0x09, 0x84, 0xa6, 0x6e, 0x9c, 0xc5, 0x88, 0xdb, 0xb2, 0xcd, 0xa9, 0x77, 0xcb,
	0x69, 0x02, 0xa1, 0x14, 0x9a, 0x45, 0x49, 0x98, 0x86, 0xdc, 0x96, 0xaf, 0x3a, 0xea, 0x04, 0xd6,
	0xef, 0x06, 0xb6, 0xfc, 0x4f, 0x80, 0x6d, 0xce, 0x77, 0x27, 0xe7, 0xa8, 0x4e, 0xb2, 0x44, 0xfa,
	0x03, 0xc2, 0x9f, 0x68, 0xe8, 0xa7, 0xac, 0xfb, 0x51, 0xb3, 0xdb, 0xe0, 0xfc, 0xdb, 0x43, 0xc4,
	0x51, 0x37, 0x75, 0xa5, 0x71, 0xf1, 0x81, 0x6e, 0x20, 0xce, 0xb1, 0x50, 0xe5, 0x9e, 0x7e, 0x7d,
	0x38, 0xee, 0x52, 0x7a, 0xd3, 0xe3, 0x96, 0x57, 0x02, 0xb3, 0xf7, 0x74, 0xf0, 0x9f, 0xd8, 0xfd,
	0xf9, 0xdf, 0x9f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x1b, 0x96, 0x6a, 0x33, 0x03, 0x00, 0x00,
}
