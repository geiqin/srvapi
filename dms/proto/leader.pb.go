// Code generated by protoc-gen-go. DO NOT EDIT.
// source: leader.proto

package geiqin_srv_dms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Leader struct {
	Id                   int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DistributorId        int64        `protobuf:"varint,2,opt,name=distributor_id,json=distributorId,proto3" json:"distributor_id,omitempty"`
	RankId               int64        `protobuf:"varint,3,opt,name=rank_id,json=rankId,proto3" json:"rank_id,omitempty"`
	CustomerId           int64        `protobuf:"varint,25,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	TeamCount            int32        `protobuf:"varint,4,opt,name=team_count,json=teamCount,proto3" json:"team_count,omitempty"`
	Bonus                float32      `protobuf:"fixed32,5,opt,name=bonus,proto3" json:"bonus,omitempty"`
	TotalBonus           float32      `protobuf:"fixed32,6,opt,name=total_bonus,json=totalBonus,proto3" json:"total_bonus,omitempty"`
	ApplyBonus           float32      `protobuf:"fixed32,7,opt,name=apply_bonus,json=applyBonus,proto3" json:"apply_bonus,omitempty"`
	WaitSettleBonus      float32      `protobuf:"fixed32,8,opt,name=wait_settle_bonus,json=waitSettleBonus,proto3" json:"wait_settle_bonus,omitempty"`
	WaitGrantBonus       float32      `protobuf:"fixed32,9,opt,name=wait_grant_bonus,json=waitGrantBonus,proto3" json:"wait_grant_bonus,omitempty"`
	FrozenBonus          float32      `protobuf:"fixed32,10,opt,name=frozen_bonus,json=frozenBonus,proto3" json:"frozen_bonus,omitempty"`
	WithdrewBonus        float32      `protobuf:"fixed32,11,opt,name=withdrew_bonus,json=withdrewBonus,proto3" json:"withdrew_bonus,omitempty"`
	WithdrewNum          int32        `protobuf:"varint,12,opt,name=withdrew_num,json=withdrewNum,proto3" json:"withdrew_num,omitempty"`
	CreatedAt            string       `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string       `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Ids                  []int64      `protobuf:"varint,15,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Rank                 *Rank        `protobuf:"bytes,16,opt,name=rank,proto3" json:"rank,omitempty"`
	Distributor          *Distributor `protobuf:"bytes,17,opt,name=distributor,proto3" json:"distributor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Leader) Reset()         { *m = Leader{} }
func (m *Leader) String() string { return proto.CompactTextString(m) }
func (*Leader) ProtoMessage()    {}
func (*Leader) Descriptor() ([]byte, []int) {
	return fileDescriptor_16c0f17a0047848a, []int{0}
}

func (m *Leader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Leader.Unmarshal(m, b)
}
func (m *Leader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Leader.Marshal(b, m, deterministic)
}
func (m *Leader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Leader.Merge(m, src)
}
func (m *Leader) XXX_Size() int {
	return xxx_messageInfo_Leader.Size(m)
}
func (m *Leader) XXX_DiscardUnknown() {
	xxx_messageInfo_Leader.DiscardUnknown(m)
}

var xxx_messageInfo_Leader proto.InternalMessageInfo

func (m *Leader) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Leader) GetDistributorId() int64 {
	if m != nil {
		return m.DistributorId
	}
	return 0
}

func (m *Leader) GetRankId() int64 {
	if m != nil {
		return m.RankId
	}
	return 0
}

func (m *Leader) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Leader) GetTeamCount() int32 {
	if m != nil {
		return m.TeamCount
	}
	return 0
}

func (m *Leader) GetBonus() float32 {
	if m != nil {
		return m.Bonus
	}
	return 0
}

func (m *Leader) GetTotalBonus() float32 {
	if m != nil {
		return m.TotalBonus
	}
	return 0
}

func (m *Leader) GetApplyBonus() float32 {
	if m != nil {
		return m.ApplyBonus
	}
	return 0
}

func (m *Leader) GetWaitSettleBonus() float32 {
	if m != nil {
		return m.WaitSettleBonus
	}
	return 0
}

func (m *Leader) GetWaitGrantBonus() float32 {
	if m != nil {
		return m.WaitGrantBonus
	}
	return 0
}

func (m *Leader) GetFrozenBonus() float32 {
	if m != nil {
		return m.FrozenBonus
	}
	return 0
}

func (m *Leader) GetWithdrewBonus() float32 {
	if m != nil {
		return m.WithdrewBonus
	}
	return 0
}

func (m *Leader) GetWithdrewNum() int32 {
	if m != nil {
		return m.WithdrewNum
	}
	return 0
}

func (m *Leader) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Leader) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Leader) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *Leader) GetRank() *Rank {
	if m != nil {
		return m.Rank
	}
	return nil
}

func (m *Leader) GetDistributor() *Distributor {
	if m != nil {
		return m.Distributor
	}
	return nil
}

type LeaderWhere struct {
	Paged                int32    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorting              string   `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
	Mobile               string   `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	RankId               int32    `protobuf:"varint,5,opt,name=rank_id,json=rankId,proto3" json:"rank_id,omitempty"`
	Keywords             string   `protobuf:"bytes,6,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Id                   int64    `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	Ids                  []int64  `protobuf:"varint,8,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	DistributorId        int64    `protobuf:"varint,9,opt,name=distributor_id,json=distributorId,proto3" json:"distributor_id,omitempty"`
	CustomerId           int64    `protobuf:"varint,10,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaderWhere) Reset()         { *m = LeaderWhere{} }
func (m *LeaderWhere) String() string { return proto.CompactTextString(m) }
func (*LeaderWhere) ProtoMessage()    {}
func (*LeaderWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_16c0f17a0047848a, []int{1}
}

func (m *LeaderWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaderWhere.Unmarshal(m, b)
}
func (m *LeaderWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaderWhere.Marshal(b, m, deterministic)
}
func (m *LeaderWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaderWhere.Merge(m, src)
}
func (m *LeaderWhere) XXX_Size() int {
	return xxx_messageInfo_LeaderWhere.Size(m)
}
func (m *LeaderWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaderWhere.DiscardUnknown(m)
}

var xxx_messageInfo_LeaderWhere proto.InternalMessageInfo

func (m *LeaderWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *LeaderWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *LeaderWhere) GetSorting() string {
	if m != nil {
		return m.Sorting
	}
	return ""
}

func (m *LeaderWhere) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *LeaderWhere) GetRankId() int32 {
	if m != nil {
		return m.RankId
	}
	return 0
}

func (m *LeaderWhere) GetKeywords() string {
	if m != nil {
		return m.Keywords
	}
	return ""
}

func (m *LeaderWhere) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LeaderWhere) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *LeaderWhere) GetDistributorId() int64 {
	if m != nil {
		return m.DistributorId
	}
	return 0
}

func (m *LeaderWhere) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

type LeaderResponse struct {
	Entity               *Leader   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager    `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Leader `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info     `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LeaderResponse) Reset()         { *m = LeaderResponse{} }
func (m *LeaderResponse) String() string { return proto.CompactTextString(m) }
func (*LeaderResponse) ProtoMessage()    {}
func (*LeaderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_16c0f17a0047848a, []int{2}
}

func (m *LeaderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaderResponse.Unmarshal(m, b)
}
func (m *LeaderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaderResponse.Marshal(b, m, deterministic)
}
func (m *LeaderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaderResponse.Merge(m, src)
}
func (m *LeaderResponse) XXX_Size() int {
	return xxx_messageInfo_LeaderResponse.Size(m)
}
func (m *LeaderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LeaderResponse proto.InternalMessageInfo

func (m *LeaderResponse) GetEntity() *Leader {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *LeaderResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *LeaderResponse) GetItems() []*Leader {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *LeaderResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *LeaderResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Leader)(nil), "geiqin.srv.dms.Leader")
	proto.RegisterType((*LeaderWhere)(nil), "geiqin.srv.dms.LeaderWhere")
	proto.RegisterType((*LeaderResponse)(nil), "geiqin.srv.dms.LeaderResponse")
}

func init() {
	proto.RegisterFile("leader.proto", fileDescriptor_16c0f17a0047848a)
}

var fileDescriptor_16c0f17a0047848a = []byte{
	// 674 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x49, 0xb3, 0xfe, 0xc9, 0x9b, 0xb6, 0xdb, 0xac, 0x31, 0x42, 0x27, 0xa0, 0x54, 0x9a,
	0x14, 0x01, 0xea, 0xa1, 0x9c, 0x11, 0x1a, 0x30, 0x4d, 0x95, 0x00, 0x21, 0xf7, 0xc0, 0xb1, 0x4a,
	0x1b, 0xaf, 0xb3, 0xd6, 0xc4, 0xc5, 0x76, 0x57, 0xba, 0x6f, 0xc1, 0x11, 0xf1, 0x15, 0x39, 0xf1,
	0x09, 0x90, 0x5f, 0x3b, 0x5d, 0x29, 0x1d, 0x1c, 0xe0, 0x16, 0x3f, 0xcf, 0xcf, 0x6f, 0xad, 0xc7,
	0x8f, 0x0b, 0xf5, 0x29, 0x4b, 0x52, 0x26, 0xbb, 0x33, 0x29, 0xb4, 0x20, 0xcd, 0x09, 0xe3, 0x9f,
	0x78, 0xde, 0x55, 0xf2, 0xaa, 0x9b, 0x66, 0xaa, 0x55, 0x1f, 0x8b, 0x2c, 0x13, 0xb9, 0x75, 0x5b,
	0xfb, 0x29, 0x57, 0x5a, 0xf2, 0xd1, 0x5c, 0x0b, 0xb7, 0xa1, 0x05, 0x32, 0xc9, 0x2f, 0xed, 0x77,
	0xe7, 0xfb, 0x0e, 0x54, 0xde, 0xe2, 0x34, 0xd2, 0x84, 0x12, 0x4f, 0x23, 0xaf, 0xed, 0xc5, 0x3e,
	0x2d, 0xf1, 0x94, 0x1c, 0x43, 0x73, 0x6d, 0xef, 0x90, 0xa7, 0x51, 0x09, 0xbd, 0xc6, 0x9a, 0xda,
	0x4f, 0xc9, 0x3d, 0xa8, 0x9a, 0x79, 0xc6, 0xf7, 0xd1, 0xaf, 0x98, 0x65, 0x3f, 0x25, 0x8f, 0x20,
	0x1c, 0xcf, 0x95, 0x16, 0x19, 0xc3, 0xcd, 0xf7, 0xd1, 0x84, 0x42, 0xea, 0xa7, 0xe4, 0x01, 0x80,
	0x66, 0x49, 0x36, 0x1c, 0x8b, 0x79, 0xae, 0xa3, 0x9d, 0xb6, 0x17, 0x97, 0x69, 0x60, 0x94, 0xd7,
	0x46, 0x20, 0x07, 0x50, 0x1e, 0x89, 0x7c, 0xae, 0xa2, 0x72, 0xdb, 0x8b, 0x4b, 0xd4, 0x2e, 0xcc,
	0x54, 0x2d, 0x74, 0x32, 0x1d, 0x5a, 0xaf, 0x82, 0x1e, 0xa0, 0xf4, 0xaa, 0x00, 0x92, 0xd9, 0x6c,
	0xba, 0x74, 0x40, 0xd5, 0x02, 0x28, 0x59, 0xe0, 0x09, 0xec, 0x2f, 0x12, 0xae, 0x87, 0x8a, 0x69,
	0x3d, 0x65, 0x0e, 0xab, 0x21, 0xb6, 0x6b, 0x8c, 0x01, 0xea, 0x96, 0x8d, 0x61, 0x0f, 0xd9, 0x89,
	0x4c, 0x72, 0xed, 0xd0, 0x00, 0xd1, 0xa6, 0xd1, 0xcf, 0x8c, 0x6c, 0xc9, 0xc7, 0x50, 0x3f, 0x97,
	0xe2, 0x9a, 0xe5, 0x8e, 0x02, 0xa4, 0x42, 0xab, 0x59, 0xe4, 0x18, 0x9a, 0x0b, 0xae, 0x2f, 0x52,
	0xc9, 0x16, 0x0e, 0x0a, 0x11, 0x6a, 0x14, 0xea, 0x6a, 0xd2, 0x0a, 0xcb, 0xe7, 0x59, 0x54, 0xc7,
	0x60, 0xc2, 0x42, 0x7b, 0x3f, 0xcf, 0x4c, 0x72, 0x63, 0xc9, 0x12, 0xcd, 0xd2, 0x61, 0xa2, 0xa3,
	0x46, 0xdb, 0x8b, 0x03, 0x1a, 0x38, 0xe5, 0x44, 0x1b, 0x7b, 0x3e, 0x4b, 0x0b, 0xbb, 0x69, 0x6d,
	0xa7, 0x9c, 0x68, 0xb2, 0x07, 0x3e, 0x4f, 0x55, 0xb4, 0xdb, 0xf6, 0x63, 0x9f, 0x9a, 0x4f, 0x12,
	0xc3, 0x8e, 0xb9, 0xb4, 0x68, 0xaf, 0xed, 0xc5, 0x61, 0xef, 0xa0, 0xfb, 0x6b, 0xa3, 0xba, 0x34,
	0xc9, 0x2f, 0x29, 0x12, 0xe4, 0x05, 0x84, 0x6b, 0xd7, 0x1f, 0xed, 0xe3, 0x86, 0xa3, 0xcd, 0x0d,
	0x6f, 0x6e, 0x10, 0xba, 0xce, 0x77, 0xbe, 0x94, 0x20, 0xb4, 0x75, 0xfb, 0x78, 0xc1, 0x24, 0x33,
	0x77, 0x3c, 0x4b, 0x26, 0xcc, 0xd6, 0xae, 0x4c, 0xed, 0x82, 0x1c, 0x41, 0x60, 0x3e, 0x86, 0x8a,
	0x5f, 0x33, 0x2c, 0x5d, 0x99, 0xd6, 0x8c, 0x30, 0xe0, 0xd7, 0x8c, 0x44, 0x50, 0x55, 0x42, 0x6a,
	0x9e, 0x4f, 0xb0, 0x6f, 0x01, 0x2d, 0x96, 0xe4, 0x10, 0x2a, 0x99, 0x18, 0xf1, 0x29, 0xc3, 0x2e,
	0x05, 0xd4, 0xad, 0xd6, 0x1b, 0x5a, 0xc6, 0x61, 0x45, 0x43, 0x5b, 0x50, 0xbb, 0x64, 0xcb, 0x85,
	0x90, 0xa9, 0x2d, 0x52, 0x40, 0x57, 0x6b, 0xf7, 0x1a, 0xaa, 0xab, 0xd7, 0xe0, 0x42, 0xab, 0xdd,
	0x84, 0xf6, 0xfb, 0xfb, 0x08, 0xb6, 0xbd, 0x8f, 0x8d, 0x67, 0x00, 0x9b, 0xcf, 0xa0, 0xf3, 0xc3,
	0x83, 0xa6, 0xcd, 0x84, 0x32, 0x35, 0x13, 0xb9, 0x62, 0xa4, 0x0b, 0x15, 0x96, 0x6b, 0xae, 0x97,
	0x98, 0x4b, 0xd8, 0x3b, 0xdc, 0x0c, 0xd8, 0xf1, 0x8e, 0x22, 0x4f, 0x6d, 0x8c, 0x12, 0xc3, 0x0a,
	0x7b, 0x77, 0x37, 0xf1, 0x0f, 0xc6, 0xb4, 0xe9, 0x4a, 0xf2, 0x0c, 0xca, 0x5c, 0xb3, 0x4c, 0x45,
	0x7e, 0xdb, 0xff, 0xc3, 0x6c, 0x0b, 0x99, 0xd1, 0x4c, 0x4a, 0x21, 0x31, 0xd3, 0x2d, 0xa3, 0x4f,
	0x8d, 0x49, 0x2d, 0x63, 0x7a, 0xc4, 0xf3, 0x73, 0x81, 0x31, 0x6f, 0xe9, 0x51, 0x3f, 0x3f, 0x17,
	0x14, 0x89, 0xde, 0x37, 0x0f, 0x76, 0xdf, 0x2d, 0xed, 0x4f, 0x0d, 0x98, 0xbc, 0xe2, 0x63, 0x46,
	0x5e, 0x82, 0x7f, 0xc6, 0x34, 0xb9, 0xe5, 0x40, 0xad, 0x87, 0xb7, 0x1c, 0xd4, 0x85, 0xd6, 0xb9,
	0x43, 0xce, 0xa0, 0x72, 0xfa, 0x99, 0x2b, 0xad, 0xc8, 0xd1, 0x76, 0x16, 0x4b, 0xf7, 0xf7, 0x41,
	0xbd, 0xaf, 0x1e, 0x34, 0xfe, 0xff, 0xd9, 0x06, 0x2c, 0x91, 0xe3, 0x8b, 0x7f, 0x3c, 0xdb, 0xa8,
	0x82, 0x7f, 0xdc, 0xcf, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x32, 0x1c, 0x8f, 0x05, 0x06,
	0x00, 0x00,
}
