// Code generated by protoc-gen-go. DO NOT EDIT.
// source: goodsInfo.proto

package geiqin_srv_dms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GoodsInfo struct {
	Id                      int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemSn                  string             `protobuf:"bytes,2,opt,name=item_sn,json=itemSn,proto3" json:"item_sn,omitempty"`
	ModelType               string             `protobuf:"bytes,3,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
	Name                    string             `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Unit                    string             `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
	BrandId                 int32              `protobuf:"varint,6,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	TaxonomyId              int64              `protobuf:"varint,7,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id,omitempty"`
	Quantity                int32              `protobuf:"varint,8,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ThumbId                 int64              `protobuf:"varint,9,opt,name=thumb_id,json=thumbId,proto3" json:"thumb_id,omitempty"`
	ThumbUrl                string             `protobuf:"bytes,10,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url,omitempty"`
	Barcode                 string             `protobuf:"bytes,11,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Price                   float32            `protobuf:"fixed32,12,opt,name=price,proto3" json:"price,omitempty"`
	OriginPrice             float32            `protobuf:"fixed32,13,opt,name=origin_price,json=originPrice,proto3" json:"origin_price,omitempty"`
	CostPrice               float32            `protobuf:"fixed32,14,opt,name=cost_price,json=costPrice,proto3" json:"cost_price,omitempty"`
	Weight                  float32            `protobuf:"fixed32,15,opt,name=weight,proto3" json:"weight,omitempty"`
	SkuId                   int64              `protobuf:"varint,16,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	SkuSn                   string             `protobuf:"bytes,17,opt,name=sku_sn,json=skuSn,proto3" json:"sku_sn,omitempty"`
	SkuName                 string             `protobuf:"bytes,18,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	SoldNum                 int32              `protobuf:"varint,19,opt,name=sold_num,json=soldNum,proto3" json:"sold_num,omitempty"`
	BuyCount                int32              `protobuf:"varint,20,opt,name=buy_count,json=buyCount,proto3" json:"buy_count,omitempty"`
	MinPrice                float32            `protobuf:"fixed32,21,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice                float32            `protobuf:"fixed32,22,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	Disabled                bool               `protobuf:"varint,23,opt,name=disabled,proto3" json:"disabled,omitempty"`
	UpdatedAt               string             `protobuf:"bytes,24,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsCommissionDisplay     bool               `protobuf:"varint,25,opt,name=is_commission_display,json=isCommissionDisplay,proto3" json:"is_commission_display,omitempty"`
	IsCommissionRateDisplay bool               `protobuf:"varint,26,opt,name=is_commission_rate_display,json=isCommissionRateDisplay,proto3" json:"is_commission_rate_display,omitempty"`
	MinPrimaryRate          float32            `protobuf:"fixed32,27,opt,name=min_primary_rate,json=minPrimaryRate,proto3" json:"min_primary_rate,omitempty"`
	MaxPrimaryRate          float32            `protobuf:"fixed32,28,opt,name=max_primary_rate,json=maxPrimaryRate,proto3" json:"max_primary_rate,omitempty"`
	MinSecondRate           float32            `protobuf:"fixed32,29,opt,name=min_second_rate,json=minSecondRate,proto3" json:"min_second_rate,omitempty"`
	MaxSecondRate           float32            `protobuf:"fixed32,30,opt,name=max_second_rate,json=maxSecondRate,proto3" json:"max_second_rate,omitempty"`
	MinPrimary              float32            `protobuf:"fixed32,31,opt,name=min_primary,json=minPrimary,proto3" json:"min_primary,omitempty"`
	MaxPrimary              float32            `protobuf:"fixed32,32,opt,name=max_primary,json=maxPrimary,proto3" json:"max_primary,omitempty"`
	MinSecond               float32            `protobuf:"fixed32,33,opt,name=min_second,json=minSecond,proto3" json:"min_second,omitempty"`
	MaxSecond               float32            `protobuf:"fixed32,34,opt,name=max_second,json=maxSecond,proto3" json:"max_second,omitempty"`
	GoodsCommission         []*GoodsCommission `protobuf:"bytes,35,rep,name=goods_commission,json=goodsCommission,proto3" json:"goods_commission,omitempty"`
	Default                 bool               `protobuf:"varint,36,opt,name=default,proto3" json:"default,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}           `json:"-"`
	XXX_unrecognized        []byte             `json:"-"`
	XXX_sizecache           int32              `json:"-"`
}

func (m *GoodsInfo) Reset()         { *m = GoodsInfo{} }
func (m *GoodsInfo) String() string { return proto.CompactTextString(m) }
func (*GoodsInfo) ProtoMessage()    {}
func (*GoodsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b7d92f8597b270c, []int{0}
}

func (m *GoodsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsInfo.Unmarshal(m, b)
}
func (m *GoodsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsInfo.Marshal(b, m, deterministic)
}
func (m *GoodsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsInfo.Merge(m, src)
}
func (m *GoodsInfo) XXX_Size() int {
	return xxx_messageInfo_GoodsInfo.Size(m)
}
func (m *GoodsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsInfo proto.InternalMessageInfo

func (m *GoodsInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GoodsInfo) GetItemSn() string {
	if m != nil {
		return m.ItemSn
	}
	return ""
}

func (m *GoodsInfo) GetModelType() string {
	if m != nil {
		return m.ModelType
	}
	return ""
}

func (m *GoodsInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GoodsInfo) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *GoodsInfo) GetBrandId() int32 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func (m *GoodsInfo) GetTaxonomyId() int64 {
	if m != nil {
		return m.TaxonomyId
	}
	return 0
}

func (m *GoodsInfo) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *GoodsInfo) GetThumbId() int64 {
	if m != nil {
		return m.ThumbId
	}
	return 0
}

func (m *GoodsInfo) GetThumbUrl() string {
	if m != nil {
		return m.ThumbUrl
	}
	return ""
}

func (m *GoodsInfo) GetBarcode() string {
	if m != nil {
		return m.Barcode
	}
	return ""
}

func (m *GoodsInfo) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *GoodsInfo) GetOriginPrice() float32 {
	if m != nil {
		return m.OriginPrice
	}
	return 0
}

func (m *GoodsInfo) GetCostPrice() float32 {
	if m != nil {
		return m.CostPrice
	}
	return 0
}

func (m *GoodsInfo) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *GoodsInfo) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *GoodsInfo) GetSkuSn() string {
	if m != nil {
		return m.SkuSn
	}
	return ""
}

func (m *GoodsInfo) GetSkuName() string {
	if m != nil {
		return m.SkuName
	}
	return ""
}

func (m *GoodsInfo) GetSoldNum() int32 {
	if m != nil {
		return m.SoldNum
	}
	return 0
}

func (m *GoodsInfo) GetBuyCount() int32 {
	if m != nil {
		return m.BuyCount
	}
	return 0
}

func (m *GoodsInfo) GetMinPrice() float32 {
	if m != nil {
		return m.MinPrice
	}
	return 0
}

func (m *GoodsInfo) GetMaxPrice() float32 {
	if m != nil {
		return m.MaxPrice
	}
	return 0
}

func (m *GoodsInfo) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *GoodsInfo) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *GoodsInfo) GetIsCommissionDisplay() bool {
	if m != nil {
		return m.IsCommissionDisplay
	}
	return false
}

func (m *GoodsInfo) GetIsCommissionRateDisplay() bool {
	if m != nil {
		return m.IsCommissionRateDisplay
	}
	return false
}

func (m *GoodsInfo) GetMinPrimaryRate() float32 {
	if m != nil {
		return m.MinPrimaryRate
	}
	return 0
}

func (m *GoodsInfo) GetMaxPrimaryRate() float32 {
	if m != nil {
		return m.MaxPrimaryRate
	}
	return 0
}

func (m *GoodsInfo) GetMinSecondRate() float32 {
	if m != nil {
		return m.MinSecondRate
	}
	return 0
}

func (m *GoodsInfo) GetMaxSecondRate() float32 {
	if m != nil {
		return m.MaxSecondRate
	}
	return 0
}

func (m *GoodsInfo) GetMinPrimary() float32 {
	if m != nil {
		return m.MinPrimary
	}
	return 0
}

func (m *GoodsInfo) GetMaxPrimary() float32 {
	if m != nil {
		return m.MaxPrimary
	}
	return 0
}

func (m *GoodsInfo) GetMinSecond() float32 {
	if m != nil {
		return m.MinSecond
	}
	return 0
}

func (m *GoodsInfo) GetMaxSecond() float32 {
	if m != nil {
		return m.MaxSecond
	}
	return 0
}

func (m *GoodsInfo) GetGoodsCommission() []*GoodsCommission {
	if m != nil {
		return m.GoodsCommission
	}
	return nil
}

func (m *GoodsInfo) GetDefault() bool {
	if m != nil {
		return m.Default
	}
	return false
}

type GoodsInfoResponse struct {
	Entity               *GoodsInfo   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager       `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*GoodsInfo `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error       `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info        `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GoodsInfoResponse) Reset()         { *m = GoodsInfoResponse{} }
func (m *GoodsInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GoodsInfoResponse) ProtoMessage()    {}
func (*GoodsInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b7d92f8597b270c, []int{1}
}

func (m *GoodsInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsInfoResponse.Unmarshal(m, b)
}
func (m *GoodsInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsInfoResponse.Marshal(b, m, deterministic)
}
func (m *GoodsInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsInfoResponse.Merge(m, src)
}
func (m *GoodsInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GoodsInfoResponse.Size(m)
}
func (m *GoodsInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsInfoResponse proto.InternalMessageInfo

func (m *GoodsInfoResponse) GetEntity() *GoodsInfo {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *GoodsInfoResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *GoodsInfoResponse) GetItems() []*GoodsInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *GoodsInfoResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GoodsInfoResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*GoodsInfo)(nil), "geiqin.srv.dms.GoodsInfo")
	proto.RegisterType((*GoodsInfoResponse)(nil), "geiqin.srv.dms.GoodsInfoResponse")
}

func init() {
	proto.RegisterFile("goodsInfo.proto", fileDescriptor_0b7d92f8597b270c)
}

var fileDescriptor_0b7d92f8597b270c = []byte{
	// 735 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcd, 0x6e, 0xe3, 0x36,
	0x10, 0x86, 0xed, 0xf8, 0x6f, 0x94, 0xb5, 0xb3, 0xdc, 0x78, 0xc3, 0x78, 0x9b, 0xda, 0x9b, 0x16,
	0x85, 0x80, 0x02, 0x2e, 0xea, 0x1e, 0x7b, 0x2a, 0xb6, 0x45, 0xe0, 0x1e, 0x82, 0x40, 0x69, 0xcf,
	0x02, 0x6d, 0x32, 0x0e, 0x11, 0x93, 0x54, 0x44, 0xaa, 0xb5, 0x5e, 0xa0, 0x2f, 0xdd, 0x4b, 0xc1,
	0xa1, 0xa4, 0xd8, 0x41, 0xd0, 0x9b, 0xe7, 0xfb, 0x99, 0x7c, 0x33, 0xa1, 0x06, 0xc6, 0x5b, 0x63,
	0xb8, 0x5d, 0xe9, 0x07, 0xb3, 0xc8, 0x72, 0xe3, 0x0c, 0x19, 0x6d, 0x85, 0x7c, 0x96, 0x7a, 0x61,
	0xf3, 0xbf, 0x16, 0x5c, 0xd9, 0xe9, 0xe9, 0xc6, 0x28, 0x65, 0x74, 0x60, 0xa7, 0x13, 0x94, 0x7f,
	0x31, 0x4a, 0x49, 0x6b, 0x65, 0x0d, 0x5f, 0xff, 0x33, 0x84, 0xe1, 0x4d, 0xdd, 0x88, 0x8c, 0xa0,
	0x2d, 0x39, 0x6d, 0xcd, 0x5b, 0x71, 0x27, 0x69, 0x4b, 0x4e, 0x2e, 0xa0, 0x2f, 0x9d, 0x50, 0xa9,
	0xd5, 0xb4, 0x3d, 0x6f, 0xc5, 0xc3, 0xa4, 0xe7, 0xcb, 0x7b, 0x4d, 0xae, 0x00, 0x94, 0xe1, 0x62,
	0x97, 0xba, 0x32, 0x13, 0xb4, 0x83, 0xdc, 0x10, 0x91, 0x3f, 0xca, 0x4c, 0x10, 0x02, 0x27, 0x9a,
	0x29, 0x41, 0x4f, 0x90, 0xc0, 0xdf, 0x1e, 0x2b, 0xb4, 0x74, 0xb4, 0x1b, 0x30, 0xff, 0x9b, 0x5c,
	0xc2, 0x60, 0x9d, 0x33, 0xcd, 0x53, 0xc9, 0x69, 0x6f, 0xde, 0x8a, 0xbb, 0x49, 0x1f, 0xeb, 0x15,
	0x27, 0x33, 0x88, 0x1c, 0xdb, 0x1b, 0x6d, 0x54, 0xe9, 0xd9, 0x3e, 0x66, 0x82, 0x1a, 0x5a, 0x71,
	0x32, 0x85, 0xc1, 0x73, 0xc1, 0xb4, 0x93, 0xae, 0xa4, 0x03, 0xf4, 0x36, 0xb5, 0xef, 0xeb, 0x1e,
	0x0b, 0xb5, 0xf6, 0xce, 0x21, 0x3a, 0xfb, 0x58, 0xaf, 0x38, 0xf9, 0x04, 0xc3, 0x40, 0x15, 0xf9,
	0x8e, 0x02, 0x66, 0x09, 0xda, 0x3f, 0xf3, 0x1d, 0xa1, 0xd0, 0x5f, 0xb3, 0x7c, 0x63, 0xb8, 0xa0,
	0x11, 0x52, 0x75, 0x49, 0xce, 0xa1, 0x9b, 0xe5, 0x72, 0x23, 0xe8, 0xe9, 0xbc, 0x15, 0xb7, 0x93,
	0x50, 0x90, 0xcf, 0x70, 0x6a, 0x72, 0xb9, 0x95, 0x3a, 0x0d, 0xe4, 0x3b, 0x24, 0xa3, 0x80, 0xdd,
	0xa1, 0xe4, 0x0a, 0x60, 0x63, 0xac, 0xab, 0x04, 0x23, 0x14, 0x0c, 0x3d, 0x12, 0xe8, 0x8f, 0xd0,
	0xfb, 0x5b, 0xc8, 0xed, 0xa3, 0xa3, 0x63, 0xa4, 0xaa, 0x8a, 0x4c, 0xa0, 0x67, 0x9f, 0x0a, 0x9f,
	0xff, 0x0c, 0xf3, 0x77, 0xed, 0x53, 0xb1, 0xe2, 0x35, 0x6c, 0x35, 0x7d, 0x8f, 0xf9, 0x3c, 0x7c,
	0xaf, 0xfd, 0xbc, 0x1e, 0xc6, 0x9d, 0x93, 0x10, 0xdc, 0x3e, 0x15, 0xb7, 0x7e, 0xed, 0x9e, 0x32,
	0x3b, 0x9e, 0xea, 0x42, 0xd1, 0x0f, 0x61, 0xc5, 0xbe, 0xbe, 0x2d, 0x94, 0x5f, 0xc5, 0xba, 0x28,
	0xd3, 0x8d, 0x29, 0xb4, 0xa3, 0xe7, 0x61, 0x85, 0xeb, 0xa2, 0xfc, 0xe2, 0x6b, 0x4f, 0xaa, 0x66,
	0xae, 0x09, 0x66, 0x1b, 0xa8, 0x7a, 0x28, 0x4f, 0xb2, 0x7d, 0x45, 0x7e, 0xac, 0x48, 0xb6, 0x0f,
	0xe4, 0x14, 0x06, 0x5c, 0x5a, 0xb6, 0xde, 0x09, 0x4e, 0x2f, 0xe6, 0xad, 0x78, 0x90, 0x34, 0xb5,
	0xdf, 0x46, 0x91, 0x71, 0xe6, 0x04, 0x4f, 0x99, 0xa3, 0x34, 0xbc, 0x9b, 0x0a, 0xf9, 0xc5, 0x91,
	0x25, 0x4c, 0xa4, 0x4d, 0x37, 0xcd, 0x23, 0x4d, 0xb9, 0xb4, 0xd9, 0x8e, 0x95, 0xf4, 0x12, 0xfb,
	0x7c, 0x90, 0x07, 0x0f, 0xf8, 0xd7, 0x40, 0x91, 0x9f, 0x61, 0x7a, 0xec, 0xc9, 0x99, 0x13, 0x8d,
	0x71, 0x8a, 0xc6, 0x8b, 0x43, 0x63, 0xc2, 0x9c, 0xa8, 0xcd, 0x31, 0x9c, 0x55, 0x53, 0x2a, 0x96,
	0x97, 0x68, 0xa5, 0x9f, 0x70, 0x9e, 0x51, 0x18, 0xd6, 0xc3, 0xde, 0x80, 0xca, 0x30, 0xf2, 0x8b,
	0xf2, 0xab, 0x4a, 0x89, 0x93, 0x37, 0xca, 0xef, 0x60, 0xec, 0x7b, 0x5a, 0xb1, 0x31, 0x9a, 0x07,
	0xe1, 0x15, 0x0a, 0xdf, 0x29, 0xa9, 0xef, 0x11, 0x6d, 0x74, 0x6c, 0x7f, 0xa4, 0xfb, 0xba, 0xd2,
	0xb1, 0xfd, 0x81, 0x6e, 0x06, 0xd1, 0x41, 0x46, 0x3a, 0x43, 0x0d, 0xbc, 0xc4, 0x43, 0xc1, 0x4b,
	0x34, 0x3a, 0xaf, 0x04, 0x4d, 0x2a, 0xfc, 0x5a, 0x9b, 0x44, 0xf4, 0x73, 0x78, 0x83, 0x4d, 0x18,
	0xa4, 0x9b, 0x20, 0xf4, 0xba, 0xa2, 0xeb, 0x0c, 0xe4, 0x77, 0x38, 0xc3, 0xdb, 0x71, 0xb0, 0x63,
	0xfa, 0xcd, 0xbc, 0x13, 0x47, 0xcb, 0xd9, 0xe2, 0xf8, 0xe4, 0x2c, 0x6e, 0x8e, 0x6f, 0x4c, 0x32,
	0x7e, 0x75, 0x74, 0xfc, 0x07, 0xc6, 0xc5, 0x03, 0x2b, 0x76, 0x8e, 0x7e, 0x8b, 0xff, 0x99, 0xba,
	0xbc, 0xfe, 0xb7, 0x05, 0xef, 0x9b, 0x43, 0x94, 0x08, 0x9b, 0x19, 0x6d, 0x05, 0xf9, 0x11, 0x7a,
	0x22, 0x7c, 0xe2, 0xfe, 0x28, 0x45, 0xcb, 0xcb, 0x37, 0xff, 0x22, 0x5a, 0x2a, 0x21, 0xf9, 0x1e,
	0xba, 0x19, 0xdb, 0x8a, 0x1c, 0x2f, 0x56, 0xb4, 0x9c, 0xbc, 0x76, 0xdc, 0x79, 0x32, 0x09, 0x1a,
	0xf2, 0x03, 0x74, 0xfd, 0x45, 0xb3, 0xb4, 0x83, 0x03, 0xfd, 0x4f, 0xfb, 0xa0, 0xf3, 0xdd, 0x45,
	0x9e, 0x9b, 0x1c, 0x4f, 0xdb, 0x1b, 0xdd, 0x7f, 0xf3, 0x64, 0x12, 0x34, 0x24, 0x86, 0x13, 0xa9,
	0x1f, 0x0c, 0x9e, 0xbc, 0x68, 0x79, 0xfe, 0x5a, 0x8b, 0x7d, 0x51, 0xb1, 0xee, 0xe1, 0x35, 0xfe,
	0xe9, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x47, 0x4e, 0x3b, 0xd5, 0x05, 0x00, 0x00,
}
