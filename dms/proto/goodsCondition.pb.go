// Code generated by protoc-gen-go. DO NOT EDIT.
// source: goodsCondition.proto

package geiqin_srv_dms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GoodsCondition struct {
	Id                   int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RankId               int32      `protobuf:"varint,2,opt,name=rank_id,json=rankId,proto3" json:"rank_id,omitempty"`
	ItemId               int64      `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	SkuId                int64      `protobuf:"varint,4,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num                  int32      `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	CreatedAt            string     `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string     `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Detail               *ItemWhere `protobuf:"bytes,8,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GoodsCondition) Reset()         { *m = GoodsCondition{} }
func (m *GoodsCondition) String() string { return proto.CompactTextString(m) }
func (*GoodsCondition) ProtoMessage()    {}
func (*GoodsCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c59e60cdc1b27a4, []int{0}
}

func (m *GoodsCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsCondition.Unmarshal(m, b)
}
func (m *GoodsCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsCondition.Marshal(b, m, deterministic)
}
func (m *GoodsCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsCondition.Merge(m, src)
}
func (m *GoodsCondition) XXX_Size() int {
	return xxx_messageInfo_GoodsCondition.Size(m)
}
func (m *GoodsCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsCondition.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsCondition proto.InternalMessageInfo

func (m *GoodsCondition) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GoodsCondition) GetRankId() int32 {
	if m != nil {
		return m.RankId
	}
	return 0
}

func (m *GoodsCondition) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *GoodsCondition) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *GoodsCondition) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *GoodsCondition) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *GoodsCondition) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *GoodsCondition) GetDetail() *ItemWhere {
	if m != nil {
		return m.Detail
	}
	return nil
}

type GoodsConditionResponse struct {
	Entity               *GoodsCondition   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager            `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*GoodsCondition `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error            `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info             `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GoodsConditionResponse) Reset()         { *m = GoodsConditionResponse{} }
func (m *GoodsConditionResponse) String() string { return proto.CompactTextString(m) }
func (*GoodsConditionResponse) ProtoMessage()    {}
func (*GoodsConditionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c59e60cdc1b27a4, []int{1}
}

func (m *GoodsConditionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsConditionResponse.Unmarshal(m, b)
}
func (m *GoodsConditionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsConditionResponse.Marshal(b, m, deterministic)
}
func (m *GoodsConditionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsConditionResponse.Merge(m, src)
}
func (m *GoodsConditionResponse) XXX_Size() int {
	return xxx_messageInfo_GoodsConditionResponse.Size(m)
}
func (m *GoodsConditionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsConditionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsConditionResponse proto.InternalMessageInfo

func (m *GoodsConditionResponse) GetEntity() *GoodsCondition {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *GoodsConditionResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *GoodsConditionResponse) GetItems() []*GoodsCondition {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *GoodsConditionResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GoodsConditionResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

type ItemWhere struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price                float32  `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	ThumbUrl             string   `protobuf:"bytes,4,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemWhere) Reset()         { *m = ItemWhere{} }
func (m *ItemWhere) String() string { return proto.CompactTextString(m) }
func (*ItemWhere) ProtoMessage()    {}
func (*ItemWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c59e60cdc1b27a4, []int{2}
}

func (m *ItemWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemWhere.Unmarshal(m, b)
}
func (m *ItemWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemWhere.Marshal(b, m, deterministic)
}
func (m *ItemWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemWhere.Merge(m, src)
}
func (m *ItemWhere) XXX_Size() int {
	return xxx_messageInfo_ItemWhere.Size(m)
}
func (m *ItemWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemWhere.DiscardUnknown(m)
}

var xxx_messageInfo_ItemWhere proto.InternalMessageInfo

func (m *ItemWhere) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ItemWhere) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ItemWhere) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ItemWhere) GetThumbUrl() string {
	if m != nil {
		return m.ThumbUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*GoodsCondition)(nil), "geiqin.srv.dms.GoodsCondition")
	proto.RegisterType((*GoodsConditionResponse)(nil), "geiqin.srv.dms.GoodsConditionResponse")
	proto.RegisterType((*ItemWhere)(nil), "geiqin.srv.dms.ItemWhere")
}

func init() { proto.RegisterFile("goodsCondition.proto", fileDescriptor_8c59e60cdc1b27a4) }

var fileDescriptor_8c59e60cdc1b27a4 = []byte{
	// 411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xd1, 0x8a, 0xd4, 0x30,
	0x14, 0xb5, 0xed, 0xb4, 0xbb, 0xbd, 0x95, 0x41, 0xc2, 0x8c, 0xd6, 0x15, 0xa5, 0xf4, 0x41, 0x0a,
	0x42, 0xc1, 0x2a, 0xbe, 0x2f, 0x22, 0x52, 0xf0, 0x61, 0x89, 0x88, 0x8f, 0x43, 0x67, 0x72, 0x77,
	0x36, 0xcc, 0x24, 0xa9, 0x49, 0xba, 0xe0, 0x2f, 0xf8, 0xad, 0x7e, 0x84, 0x24, 0xed, 0x0a, 0x9d,
	0x15, 0xd6, 0xb7, 0xdc, 0x73, 0xce, 0xbd, 0xb7, 0xe7, 0xdc, 0xc2, 0x6a, 0xaf, 0x14, 0x33, 0x1f,
	0x95, 0x64, 0xdc, 0x72, 0x25, 0xeb, 0x5e, 0x2b, 0xab, 0xc8, 0x72, 0x8f, 0xfc, 0x07, 0x97, 0xb5,
	0xd1, 0xb7, 0x35, 0x13, 0xe6, 0xe2, 0xf1, 0x4e, 0x09, 0x71, 0xc7, 0x96, 0xbf, 0x03, 0x58, 0x7e,
	0x9e, 0xb5, 0x91, 0x25, 0x84, 0x9c, 0xe5, 0x41, 0x11, 0x54, 0x11, 0x0d, 0x39, 0x23, 0xcf, 0xe0,
	0x4c, 0x77, 0xf2, 0xb0, 0xe1, 0x2c, 0x0f, 0x8b, 0xa0, 0x8a, 0x69, 0xe2, 0xca, 0xd6, 0x13, 0xdc,
	0xa2, 0x70, 0x44, 0xe4, 0xd5, 0x89, 0x2b, 0x5b, 0x46, 0xd6, 0x90, 0x98, 0xc3, 0xe0, 0xf0, 0x85,
	0xc7, 0x63, 0x73, 0x18, 0x5a, 0x46, 0x9e, 0x40, 0x24, 0x07, 0x91, 0xc7, 0x7e, 0x88, 0x7b, 0x92,
	0x97, 0x00, 0x3b, 0x8d, 0x9d, 0x45, 0xb6, 0xe9, 0x6c, 0x9e, 0x14, 0x41, 0x95, 0xd2, 0x74, 0x42,
	0x2e, 0xad, 0xa3, 0x87, 0x9e, 0xdd, 0xd1, 0x67, 0x23, 0x3d, 0x21, 0x97, 0x96, 0xbc, 0x85, 0x84,
	0xa1, 0xed, 0xf8, 0x31, 0x3f, 0x2f, 0x82, 0x2a, 0x6b, 0x9e, 0xd7, 0x73, 0xab, 0x75, 0x6b, 0x51,
	0x7c, 0xbf, 0x41, 0x8d, 0x74, 0x12, 0x96, 0xbf, 0x42, 0x78, 0x3a, 0xb7, 0x4b, 0xd1, 0xf4, 0x4a,
	0x1a, 0x24, 0x1f, 0x20, 0x41, 0x69, 0xb9, 0xfd, 0xe9, 0xad, 0x67, 0xcd, 0xab, 0xd3, 0x69, 0x27,
	0x7d, 0x93, 0x9a, 0xbc, 0x81, 0xb8, 0xef, 0xf6, 0xa8, 0x7d, 0x38, 0x59, 0xb3, 0x3e, 0x6d, 0xbb,
	0x72, 0x24, 0x1d, 0x35, 0xe4, 0x3d, 0xc4, 0x2e, 0x23, 0x93, 0x47, 0x45, 0xf4, 0x1f, 0x3b, 0x46,
	0xb1, 0x5b, 0x81, 0x5a, 0x2b, 0xed, 0xe3, 0xfc, 0xc7, 0x8a, 0x4f, 0x8e, 0xa4, 0xa3, 0x86, 0x54,
	0xb0, 0xe0, 0xf2, 0x5a, 0xf9, 0x98, 0xb3, 0x66, 0x75, 0x2f, 0x13, 0x79, 0xad, 0xa8, 0x57, 0x94,
	0x5b, 0x48, 0xff, 0x26, 0x74, 0xef, 0xea, 0x04, 0x16, 0xb2, 0x13, 0xe8, 0x5d, 0xa5, 0xd4, 0xbf,
	0xc9, 0x0a, 0xe2, 0x5e, 0xf3, 0x1d, 0xfa, 0x73, 0x87, 0x74, 0x2c, 0xc8, 0x0b, 0x48, 0xed, 0xcd,
	0x20, 0xb6, 0x9b, 0x41, 0x1f, 0xfd, 0x17, 0xa6, 0xf4, 0xdc, 0x03, 0xdf, 0xf4, 0xb1, 0xe1, 0xb0,
	0x9e, 0x7b, 0xfa, 0x8a, 0xfa, 0xd6, 0x75, 0x5d, 0xc1, 0xe2, 0x0b, 0x37, 0x96, 0x3c, 0x10, 0xc1,
	0xc5, 0xeb, 0x07, 0x22, 0x9a, 0xce, 0x57, 0x3e, 0xda, 0x26, 0xfe, 0x8f, 0x7e, 0xf7, 0x27, 0x00,
	0x00, 0xff, 0xff, 0x8a, 0xbe, 0x4e, 0xa1, 0x07, 0x03, 0x00, 0x00,
}
