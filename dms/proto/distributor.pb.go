// Code generated by protoc-gen-go. DO NOT EDIT.
// source: distributor.proto

package geiqin_srv_dms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Distributor struct {
	Id                   int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Code                 string         `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	CustomerId           int64          `protobuf:"varint,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id"`
	InviterId            int64          `protobuf:"varint,4,opt,name=inviter_id,json=inviterId,proto3" json:"inviter_id"`
	DisplayName          string         `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name"`
	RankId               int32          `protobuf:"varint,6,opt,name=rank_id,json=rankId,proto3" json:"rank_id"`
	Deposit              float32        `protobuf:"fixed32,7,opt,name=deposit,proto3" json:"deposit"`
	Commission           float32        `protobuf:"fixed32,8,opt,name=commission,proto3" json:"commission"`
	ApplyCommission      float32        `protobuf:"fixed32,9,opt,name=apply_commission,json=applyCommission,proto3" json:"apply_commission"`
	WaitSettleCommission float32        `protobuf:"fixed32,10,opt,name=wait_settle_commission,json=waitSettleCommission,proto3" json:"wait_settle_commission"`
	WaitGrantCommission  float32        `protobuf:"fixed32,11,opt,name=wait_grant_commission,json=waitGrantCommission,proto3" json:"wait_grant_commission"`
	CommissionTotal      float32        `protobuf:"fixed32,12,opt,name=commission_total,json=commissionTotal,proto3" json:"commission_total"`
	CommissionFrozen     float32        `protobuf:"fixed32,13,opt,name=commission_frozen,json=commissionFrozen,proto3" json:"commission_frozen"`
	CommissionWithdrew   float32        `protobuf:"fixed32,14,opt,name=commission_withdrew,json=commissionWithdrew,proto3" json:"commission_withdrew"`
	RecommendAmount      float32        `protobuf:"fixed32,15,opt,name=recommend_amount,json=recommendAmount,proto3" json:"recommend_amount"`
	RecommendNum         int32          `protobuf:"varint,16,opt,name=recommend_num,json=recommendNum,proto3" json:"recommend_num"`
	CustomerNum          int32          `protobuf:"varint,17,opt,name=customer_num,json=customerNum,proto3" json:"customer_num"`
	PromotionAmount      float32        `protobuf:"fixed32,18,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount"`
	PromotionNum         int32          `protobuf:"varint,19,opt,name=promotion_num,json=promotionNum,proto3" json:"promotion_num"`
	WithdrewNum          int32          `protobuf:"varint,20,opt,name=withdrew_num,json=withdrewNum,proto3" json:"withdrew_num"`
	Status               int32          `protobuf:"varint,21,opt,name=status,proto3" json:"status"`
	Mobile               string         `protobuf:"bytes,28,opt,name=mobile,proto3" json:"mobile"`
	CreatedAt            string         `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string         `protobuf:"bytes,23,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Rank                 *Rank          `protobuf:"bytes,24,opt,name=rank,proto3" json:"rank,omitempty"`
	Inviter              *Distributor   `protobuf:"bytes,25,opt,name=inviter,proto3" json:"inviter,omitempty"`
	Children             []*Distributor `protobuf:"bytes,26,rep,name=children,proto3" json:"children,omitempty"`
	Ids                  []int64        `protobuf:"varint,27,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Distributor) Reset()         { *m = Distributor{} }
func (m *Distributor) String() string { return proto.CompactTextString(m) }
func (*Distributor) ProtoMessage()    {}
func (*Distributor) Descriptor() ([]byte, []int) {
	return fileDescriptor_c518e33639ca565d, []int{0}
}

func (m *Distributor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Distributor.Unmarshal(m, b)
}
func (m *Distributor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Distributor.Marshal(b, m, deterministic)
}
func (m *Distributor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Distributor.Merge(m, src)
}
func (m *Distributor) XXX_Size() int {
	return xxx_messageInfo_Distributor.Size(m)
}
func (m *Distributor) XXX_DiscardUnknown() {
	xxx_messageInfo_Distributor.DiscardUnknown(m)
}

var xxx_messageInfo_Distributor proto.InternalMessageInfo

func (m *Distributor) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Distributor) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Distributor) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Distributor) GetInviterId() int64 {
	if m != nil {
		return m.InviterId
	}
	return 0
}

func (m *Distributor) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Distributor) GetRankId() int32 {
	if m != nil {
		return m.RankId
	}
	return 0
}

func (m *Distributor) GetDeposit() float32 {
	if m != nil {
		return m.Deposit
	}
	return 0
}

func (m *Distributor) GetCommission() float32 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *Distributor) GetApplyCommission() float32 {
	if m != nil {
		return m.ApplyCommission
	}
	return 0
}

func (m *Distributor) GetWaitSettleCommission() float32 {
	if m != nil {
		return m.WaitSettleCommission
	}
	return 0
}

func (m *Distributor) GetWaitGrantCommission() float32 {
	if m != nil {
		return m.WaitGrantCommission
	}
	return 0
}

func (m *Distributor) GetCommissionTotal() float32 {
	if m != nil {
		return m.CommissionTotal
	}
	return 0
}

func (m *Distributor) GetCommissionFrozen() float32 {
	if m != nil {
		return m.CommissionFrozen
	}
	return 0
}

func (m *Distributor) GetCommissionWithdrew() float32 {
	if m != nil {
		return m.CommissionWithdrew
	}
	return 0
}

func (m *Distributor) GetRecommendAmount() float32 {
	if m != nil {
		return m.RecommendAmount
	}
	return 0
}

func (m *Distributor) GetRecommendNum() int32 {
	if m != nil {
		return m.RecommendNum
	}
	return 0
}

func (m *Distributor) GetCustomerNum() int32 {
	if m != nil {
		return m.CustomerNum
	}
	return 0
}

func (m *Distributor) GetPromotionAmount() float32 {
	if m != nil {
		return m.PromotionAmount
	}
	return 0
}

func (m *Distributor) GetPromotionNum() int32 {
	if m != nil {
		return m.PromotionNum
	}
	return 0
}

func (m *Distributor) GetWithdrewNum() int32 {
	if m != nil {
		return m.WithdrewNum
	}
	return 0
}

func (m *Distributor) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Distributor) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *Distributor) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Distributor) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Distributor) GetRank() *Rank {
	if m != nil {
		return m.Rank
	}
	return nil
}

func (m *Distributor) GetInviter() *Distributor {
	if m != nil {
		return m.Inviter
	}
	return nil
}

func (m *Distributor) GetChildren() []*Distributor {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *Distributor) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type DistributorWhere struct {
	Paged                int32    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorting              string   `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
	Mobile               string   `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	RankId               int32    `protobuf:"varint,5,opt,name=rank_id,json=rankId,proto3" json:"rank_id,omitempty"`
	Keywords             string   `protobuf:"bytes,6,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Id                   int64    `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	Ids                  []int64  `protobuf:"varint,8,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistributorWhere) Reset()         { *m = DistributorWhere{} }
func (m *DistributorWhere) String() string { return proto.CompactTextString(m) }
func (*DistributorWhere) ProtoMessage()    {}
func (*DistributorWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_c518e33639ca565d, []int{1}
}

func (m *DistributorWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistributorWhere.Unmarshal(m, b)
}
func (m *DistributorWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistributorWhere.Marshal(b, m, deterministic)
}
func (m *DistributorWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributorWhere.Merge(m, src)
}
func (m *DistributorWhere) XXX_Size() int {
	return xxx_messageInfo_DistributorWhere.Size(m)
}
func (m *DistributorWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributorWhere.DiscardUnknown(m)
}

var xxx_messageInfo_DistributorWhere proto.InternalMessageInfo

func (m *DistributorWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *DistributorWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *DistributorWhere) GetSorting() string {
	if m != nil {
		return m.Sorting
	}
	return ""
}

func (m *DistributorWhere) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *DistributorWhere) GetRankId() int32 {
	if m != nil {
		return m.RankId
	}
	return 0
}

func (m *DistributorWhere) GetKeywords() string {
	if m != nil {
		return m.Keywords
	}
	return ""
}

func (m *DistributorWhere) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DistributorWhere) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type DistributorResponse struct {
	Entity               *Distributor   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager         `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Distributor `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error         `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info          `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DistributorResponse) Reset()         { *m = DistributorResponse{} }
func (m *DistributorResponse) String() string { return proto.CompactTextString(m) }
func (*DistributorResponse) ProtoMessage()    {}
func (*DistributorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c518e33639ca565d, []int{2}
}

func (m *DistributorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistributorResponse.Unmarshal(m, b)
}
func (m *DistributorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistributorResponse.Marshal(b, m, deterministic)
}
func (m *DistributorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributorResponse.Merge(m, src)
}
func (m *DistributorResponse) XXX_Size() int {
	return xxx_messageInfo_DistributorResponse.Size(m)
}
func (m *DistributorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DistributorResponse proto.InternalMessageInfo

func (m *DistributorResponse) GetEntity() *Distributor {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *DistributorResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *DistributorResponse) GetItems() []*Distributor {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *DistributorResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *DistributorResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Distributor)(nil), "geiqin.srv.dms.Distributor")
	proto.RegisterType((*DistributorWhere)(nil), "geiqin.srv.dms.DistributorWhere")
	proto.RegisterType((*DistributorResponse)(nil), "geiqin.srv.dms.DistributorResponse")
}

func init() { proto.RegisterFile("distributor.proto", fileDescriptor_c518e33639ca565d) }

var fileDescriptor_c518e33639ca565d = []byte{
	// 856 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0x9e, 0xad, 0x58, 0xb6, 0x8f, 0x9d, 0xd4, 0x61, 0x9c, 0x94, 0x73, 0xf6, 0xe3, 0xa5, 0x37,
	0x2e, 0x0a, 0x78, 0x98, 0xbb, 0x61, 0xd7, 0x41, 0xd7, 0x15, 0x06, 0xd6, 0xa2, 0x91, 0x37, 0x64,
	0x77, 0x86, 0x22, 0x9e, 0x24, 0x44, 0x2c, 0x52, 0x23, 0xe9, 0x64, 0xce, 0xdd, 0x2e, 0xf6, 0x22,
	0x7b, 0xa0, 0xbd, 0xc6, 0x5e, 0x63, 0x20, 0x29, 0x4b, 0x4a, 0x10, 0x24, 0xbd, 0xf0, 0x9d, 0xf8,
	0x7d, 0xdf, 0xf9, 0xe5, 0xe1, 0x81, 0x60, 0x97, 0x71, 0x6d, 0x14, 0x3f, 0x5b, 0x1a, 0xa9, 0xc6,
	0x99, 0x92, 0x46, 0x92, 0x9d, 0x0b, 0xe4, 0x7f, 0x70, 0x31, 0xd6, 0xea, 0x7a, 0xcc, 0x52, 0x3d,
	0xe8, 0x26, 0x32, 0x4d, 0xa5, 0xf0, 0xec, 0x00, 0x54, 0x2c, 0xae, 0xfc, 0xf7, 0xd1, 0xdf, 0x2d,
	0xe8, 0xfc, 0x54, 0xda, 0x93, 0x1d, 0xa8, 0x73, 0x46, 0x6b, 0xc3, 0xda, 0x28, 0x88, 0xea, 0x9c,
	0x11, 0x02, 0x5b, 0x89, 0x64, 0x48, 0xeb, 0xc3, 0xda, 0xa8, 0x1d, 0xb9, 0x6f, 0xf2, 0x35, 0x74,
	0x92, 0xa5, 0x36, 0x32, 0x45, 0x35, 0xe7, 0x8c, 0x06, 0x4e, 0x0c, 0x6b, 0x68, 0xca, 0xc8, 0x97,
	0x00, 0x5c, 0x5c, 0x73, 0xe3, 0xf9, 0x2d, 0xc7, 0xb7, 0x73, 0x64, 0xca, 0xc8, 0x37, 0xd0, 0x65,
	0x5c, 0x67, 0x8b, 0x78, 0x35, 0x17, 0x71, 0x8a, 0xb4, 0xe1, 0x7c, 0x77, 0x72, 0xec, 0x43, 0x9c,
	0x22, 0x79, 0x0e, 0x4d, 0x9b, 0xa4, 0x35, 0x0f, 0x87, 0xb5, 0x51, 0x23, 0x0a, 0xed, 0x71, 0xca,
	0x08, 0x85, 0x26, 0xc3, 0x4c, 0x6a, 0x6e, 0x68, 0x73, 0x58, 0x1b, 0xd5, 0xa3, 0xf5, 0x91, 0x7c,
	0x05, 0x60, 0xab, 0xe4, 0x5a, 0x73, 0x29, 0x68, 0xcb, 0x91, 0x15, 0x84, 0xbc, 0x84, 0x5e, 0x9c,
	0x65, 0x8b, 0xd5, 0xbc, 0xa2, 0x6a, 0x3b, 0xd5, 0x33, 0x87, 0xbf, 0x29, 0xa5, 0xdf, 0xc3, 0xc1,
	0x4d, 0xcc, 0xcd, 0x5c, 0xa3, 0x31, 0x0b, 0xac, 0x1a, 0x80, 0x33, 0xe8, 0x5b, 0x76, 0xe6, 0xc8,
	0x8a, 0xd5, 0x04, 0xf6, 0x9d, 0xd5, 0x85, 0x8a, 0x85, 0xa9, 0x1a, 0x75, 0x9c, 0xd1, 0x9e, 0x25,
	0xdf, 0x59, 0xee, 0xcd, 0x9d, 0xa4, 0x4a, 0xe1, 0xdc, 0x48, 0x13, 0x2f, 0x68, 0xd7, 0x27, 0x55,
	0xe2, 0xbf, 0x5a, 0x98, 0xbc, 0x82, 0xdd, 0x8a, 0xf4, 0x5c, 0xc9, 0x5b, 0x14, 0x74, 0xdb, 0x69,
	0x2b, 0x3e, 0x7e, 0x76, 0x38, 0xf9, 0x16, 0xf6, 0x2a, 0xe2, 0x1b, 0x6e, 0x2e, 0x99, 0xc2, 0x1b,
	0xba, 0xe3, 0xe4, 0xa4, 0xa4, 0x4e, 0x73, 0xc6, 0x26, 0xa2, 0xd0, 0xe2, 0x28, 0xd8, 0x3c, 0x4e,
	0xe5, 0x52, 0x18, 0xfa, 0xcc, 0x27, 0x52, 0xe0, 0xc7, 0x0e, 0x26, 0x2f, 0x60, 0xbb, 0x94, 0x8a,
	0x65, 0x4a, 0x7b, 0xee, 0x86, 0xba, 0x05, 0xf8, 0x61, 0x99, 0xda, 0x3b, 0x2e, 0x66, 0xc4, 0x6a,
	0x76, 0x9d, 0xa6, 0x98, 0x1b, 0x2b, 0x79, 0x09, 0xbd, 0x4c, 0xc9, 0x54, 0x1a, 0x9b, 0x62, 0x1e,
	0x92, 0xf8, 0x90, 0x05, 0x5e, 0x86, 0x2c, 0xa5, 0xd6, 0xdd, 0x9e, 0x0f, 0x59, 0x80, 0x79, 0xc8,
	0x75, 0xa1, 0x4e, 0xd3, 0xf7, 0x21, 0xd7, 0x98, 0x95, 0x1c, 0x40, 0xa8, 0x4d, 0x6c, 0x96, 0x9a,
	0xee, 0xfb, 0xa9, 0xf2, 0x27, 0x8b, 0xa7, 0xf2, 0x8c, 0x2f, 0x90, 0x7e, 0xe1, 0x66, 0x31, 0x3f,
	0xd9, 0x41, 0x4e, 0x14, 0xc6, 0x06, 0xd9, 0x3c, 0x36, 0xf4, 0xc0, 0x71, 0xed, 0x1c, 0x39, 0x36,
	0x96, 0x5e, 0x66, 0x6c, 0x4d, 0x3f, 0xf7, 0x74, 0x8e, 0x1c, 0x1b, 0x32, 0x82, 0x2d, 0x3b, 0xb5,
	0x94, 0x0e, 0x6b, 0xa3, 0xce, 0xa4, 0x3f, 0xbe, 0xfb, 0x28, 0xc7, 0x51, 0x2c, 0xae, 0x22, 0xa7,
	0x20, 0x3f, 0x40, 0x33, 0x7f, 0x1e, 0xf4, 0x73, 0x27, 0x3e, 0xbc, 0x2f, 0xae, 0xbc, 0xd1, 0x68,
	0xad, 0x25, 0x3f, 0x42, 0x2b, 0xb9, 0xe4, 0x0b, 0xa6, 0x50, 0xd0, 0xc1, 0x30, 0x78, 0xca, 0xae,
	0x10, 0x93, 0x1e, 0x04, 0x9c, 0x69, 0x7a, 0x38, 0x0c, 0x46, 0x41, 0x64, 0x3f, 0x8f, 0xfe, 0xad,
	0x41, 0xaf, 0xa2, 0x3d, 0xbd, 0x44, 0x85, 0xa4, 0x0f, 0x8d, 0x2c, 0xbe, 0x40, 0xbf, 0x0f, 0x1a,
	0x91, 0x3f, 0x90, 0x43, 0x68, 0xdb, 0x8f, 0xb9, 0xe6, 0xb7, 0x7e, 0x2f, 0x34, 0xa2, 0x96, 0x05,
	0x66, 0xfc, 0x16, 0xed, 0xfb, 0xd4, 0x52, 0x19, 0x2e, 0x2e, 0xdc, 0x5e, 0x68, 0x47, 0xeb, 0x63,
	0xa5, 0xc7, 0x5b, 0x77, 0x7a, 0x5c, 0x79, 0xea, 0x8d, 0x3b, 0x4f, 0x7d, 0x00, 0xad, 0x2b, 0x5c,
	0xdd, 0x48, 0xc5, 0xb4, 0x5b, 0x02, 0xed, 0xa8, 0x38, 0xe7, 0x6b, 0xaa, 0x59, 0xac, 0xa9, 0xbc,
	0xa0, 0x56, 0x59, 0xd0, 0x5f, 0x75, 0xd8, 0xab, 0x16, 0x8f, 0x3a, 0x93, 0x42, 0x23, 0x79, 0x0d,
	0x21, 0x0a, 0xc3, 0xcd, 0xca, 0x15, 0xf5, 0x44, 0xc7, 0x72, 0x29, 0x79, 0xe5, 0x1b, 0xa1, 0x5c,
	0xb9, 0x9d, 0xc9, 0xfe, 0x7d, 0x9b, 0x8f, 0x96, 0xf4, 0xfd, 0x51, 0xe4, 0x3b, 0x68, 0x70, 0x83,
	0xa9, 0xa6, 0xc1, 0xd3, 0x57, 0xe2, 0x95, 0xd6, 0x3f, 0x2a, 0x25, 0x95, 0x6b, 0xcd, 0x03, 0xfe,
	0xdf, 0x5a, 0x32, 0xf2, 0x1a, 0x3b, 0x56, 0x5c, 0x9c, 0x4b, 0xd7, 0xad, 0x07, 0xc6, 0x6a, 0x2a,
	0xce, 0x65, 0xe4, 0x14, 0x93, 0xff, 0xea, 0xd0, 0x7f, 0xbf, 0xaa, 0xc4, 0x9b, 0xa1, 0xba, 0xe6,
	0x09, 0x92, 0x29, 0x04, 0xef, 0xd0, 0x90, 0xc7, 0x52, 0x1b, 0xbc, 0x78, 0x2c, 0xef, 0xbc, 0x9b,
	0x47, 0x9f, 0x91, 0xdf, 0x61, 0xfb, 0xa3, 0xe2, 0x69, 0xac, 0x56, 0x33, 0x8c, 0x55, 0x72, 0x49,
	0x86, 0x8f, 0xd8, 0xb9, 0xb1, 0xfa, 0x54, 0xcf, 0xa7, 0xd0, 0x9d, 0x61, 0x22, 0x05, 0xdb, 0xb4,
	0xe3, 0x13, 0x08, 0xdf, 0xfe, 0xc9, 0xb5, 0xd1, 0x1b, 0x73, 0x39, 0xf9, 0x27, 0x00, 0xf2, 0x40,
	0x9f, 0x7f, 0x81, 0xf0, 0x37, 0xb7, 0x0e, 0x36, 0xd2, 0xea, 0xf7, 0xd0, 0x9c, 0xa1, 0xb1, 0x6b,
	0x63, 0x23, 0xee, 0x4e, 0x20, 0x8c, 0x30, 0x95, 0xd7, 0xb8, 0xb9, 0xce, 0x6e, 0x70, 0xae, 0x4e,
	0x20, 0xdc, 0xf0, 0xbd, 0x9f, 0x85, 0xee, 0x97, 0xe7, 0xf5, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x69, 0x13, 0x3e, 0x17, 0x31, 0x09, 0x00, 0x00,
}
