// Code generated by protoc-gen-go. DO NOT EDIT.
// source: applier.proto

package geiqin_srv_dms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Applier struct {
	Id                   int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	DistributorId        int64                 `protobuf:"varint,2,opt,name=distributor_id,json=distributorId,proto3" json:"distributor_id"`
	RankId               int32                 `protobuf:"varint,3,opt,name=rank_id,json=rankId,proto3" json:"rank_id"`
	DisplayName          string                `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name"`
	Autoed               bool                  `protobuf:"varint,5,opt,name=autoed,proto3" json:"autoed"`
	CustomerId           int64                 `protobuf:"varint,6,opt,name=customer_id,json=customerId,proto3" json:"customer_id"`
	Status               string                `protobuf:"bytes,7,opt,name=status,proto3" json:"status"`
	Reason               string                `protobuf:"bytes,8,opt,name=reason,proto3" json:"reason"`
	Remarks              string                `protobuf:"bytes,9,opt,name=remarks,proto3" json:"remarks"`
	Addons               string                `protobuf:"bytes,10,opt,name=addons,proto3" json:"addons"`
	CreatedAt            string                `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt            string                `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Distributor          *Distributor          `protobuf:"bytes,13,opt,name=distributor,proto3" json:"distributor"`
	Rank                 *Rank                 `protobuf:"bytes,14,opt,name=rank,proto3" json:"rank"`
	InviteSn             string                `protobuf:"bytes,15,opt,name=invite_sn,json=inviteSn,proto3" json:"invite_sn"`
	Condition            *ApplierCondition     `protobuf:"bytes,16,opt,name=condition,proto3" json:"condition"`
	MeetCondition        *ApplierMeetCondition `protobuf:"bytes,17,opt,name=meet_condition,json=meetCondition,proto3" json:"meet_condition"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Applier) Reset()         { *m = Applier{} }
func (m *Applier) String() string { return proto.CompactTextString(m) }
func (*Applier) ProtoMessage()    {}
func (*Applier) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e53247d573818c, []int{0}
}

func (m *Applier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Applier.Unmarshal(m, b)
}
func (m *Applier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Applier.Marshal(b, m, deterministic)
}
func (m *Applier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Applier.Merge(m, src)
}
func (m *Applier) XXX_Size() int {
	return xxx_messageInfo_Applier.Size(m)
}
func (m *Applier) XXX_DiscardUnknown() {
	xxx_messageInfo_Applier.DiscardUnknown(m)
}

var xxx_messageInfo_Applier proto.InternalMessageInfo

func (m *Applier) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Applier) GetDistributorId() int64 {
	if m != nil {
		return m.DistributorId
	}
	return 0
}

func (m *Applier) GetRankId() int32 {
	if m != nil {
		return m.RankId
	}
	return 0
}

func (m *Applier) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Applier) GetAutoed() bool {
	if m != nil {
		return m.Autoed
	}
	return false
}

func (m *Applier) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Applier) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Applier) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Applier) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *Applier) GetAddons() string {
	if m != nil {
		return m.Addons
	}
	return ""
}

func (m *Applier) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Applier) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Applier) GetDistributor() *Distributor {
	if m != nil {
		return m.Distributor
	}
	return nil
}

func (m *Applier) GetRank() *Rank {
	if m != nil {
		return m.Rank
	}
	return nil
}

func (m *Applier) GetInviteSn() string {
	if m != nil {
		return m.InviteSn
	}
	return ""
}

func (m *Applier) GetCondition() *ApplierCondition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Applier) GetMeetCondition() *ApplierMeetCondition {
	if m != nil {
		return m.MeetCondition
	}
	return nil
}

type ApplierResponse struct {
	Entity               *Applier   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager                *Pager     `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items                []*Applier `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Error                *Error     `protobuf:"bytes,4,opt,name=error,proto3" json:"error"`
	Info                 *Info      `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ApplierResponse) Reset()         { *m = ApplierResponse{} }
func (m *ApplierResponse) String() string { return proto.CompactTextString(m) }
func (*ApplierResponse) ProtoMessage()    {}
func (*ApplierResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e53247d573818c, []int{1}
}

func (m *ApplierResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplierResponse.Unmarshal(m, b)
}
func (m *ApplierResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplierResponse.Marshal(b, m, deterministic)
}
func (m *ApplierResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplierResponse.Merge(m, src)
}
func (m *ApplierResponse) XXX_Size() int {
	return xxx_messageInfo_ApplierResponse.Size(m)
}
func (m *ApplierResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplierResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplierResponse proto.InternalMessageInfo

func (m *ApplierResponse) GetEntity() *Applier {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *ApplierResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *ApplierResponse) GetItems() []*Applier {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ApplierResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ApplierResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

type ApplyInfo struct {
	IsApply              bool                    `protobuf:"varint,1,opt,name=is_apply,json=isApply,proto3" json:"is_apply"`
	Applier              *Applier                `protobuf:"bytes,2,opt,name=applier,proto3" json:"applier"`
	Ranks                []*Rank                 `protobuf:"bytes,3,rep,name=ranks,proto3" json:"ranks"`
	Condition            []*ApplierCondition     `protobuf:"bytes,4,rep,name=condition,proto3" json:"condition"`
	MeetCondition        []*ApplierMeetCondition `protobuf:"bytes,5,rep,name=meet_condition,json=meetCondition,proto3" json:"meet_condition"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ApplyInfo) Reset()         { *m = ApplyInfo{} }
func (m *ApplyInfo) String() string { return proto.CompactTextString(m) }
func (*ApplyInfo) ProtoMessage()    {}
func (*ApplyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e53247d573818c, []int{2}
}

func (m *ApplyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyInfo.Unmarshal(m, b)
}
func (m *ApplyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyInfo.Marshal(b, m, deterministic)
}
func (m *ApplyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyInfo.Merge(m, src)
}
func (m *ApplyInfo) XXX_Size() int {
	return xxx_messageInfo_ApplyInfo.Size(m)
}
func (m *ApplyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyInfo proto.InternalMessageInfo

func (m *ApplyInfo) GetIsApply() bool {
	if m != nil {
		return m.IsApply
	}
	return false
}

func (m *ApplyInfo) GetApplier() *Applier {
	if m != nil {
		return m.Applier
	}
	return nil
}

func (m *ApplyInfo) GetRanks() []*Rank {
	if m != nil {
		return m.Ranks
	}
	return nil
}

func (m *ApplyInfo) GetCondition() []*ApplierCondition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *ApplyInfo) GetMeetCondition() []*ApplierMeetCondition {
	if m != nil {
		return m.MeetCondition
	}
	return nil
}

type ApplyInfoResponse struct {
	Entity               *ApplyInfo `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Error                *Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	Info                 *Info      `protobuf:"bytes,3,opt,name=info,proto3" json:"info"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ApplyInfoResponse) Reset()         { *m = ApplyInfoResponse{} }
func (m *ApplyInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyInfoResponse) ProtoMessage()    {}
func (*ApplyInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e53247d573818c, []int{3}
}

func (m *ApplyInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyInfoResponse.Unmarshal(m, b)
}
func (m *ApplyInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyInfoResponse.Marshal(b, m, deterministic)
}
func (m *ApplyInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyInfoResponse.Merge(m, src)
}
func (m *ApplyInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ApplyInfoResponse.Size(m)
}
func (m *ApplyInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyInfoResponse proto.InternalMessageInfo

func (m *ApplyInfoResponse) GetEntity() *ApplyInfo {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *ApplyInfoResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ApplyInfoResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

// 加入销售员的配置条件
type ApplierCondition struct {
	RankId               int32             `protobuf:"varint,1,opt,name=rank_id,json=rankId,proto3" json:"rank_id"`
	IsBought             bool              `protobuf:"varint,2,opt,name=is_bought,json=isBought,proto3" json:"is_bought"`
	ConsumptionAmount    float32           `protobuf:"fixed32,3,opt,name=consumption_amount,json=consumptionAmount,proto3" json:"consumption_amount"`
	ConsumptionNum       int32             `protobuf:"varint,4,opt,name=consumption_num,json=consumptionNum,proto3" json:"consumption_num"`
	IsBindIdcard         bool              `protobuf:"varint,5,opt,name=is_bind_idcard,json=isBindIdcard,proto3" json:"is_bind_idcard"`
	IsBindMobile         bool              `protobuf:"varint,6,opt,name=is_bind_mobile,json=isBindMobile,proto3" json:"is_bind_mobile"`
	IsInformation        bool              `protobuf:"varint,7,opt,name=is_information,json=isInformation,proto3" json:"is_information"`
	InformationFields    string            `protobuf:"bytes,8,opt,name=information_fields,json=informationFields,proto3" json:"information_fields"`
	Joined               bool              `protobuf:"varint,9,opt,name=joined,proto3" json:"joined"`
	JoinAmount           float32           `protobuf:"fixed32,10,opt,name=join_amount,json=joinAmount,proto3" json:"join_amount"`
	PromotionAmount      float32           `protobuf:"fixed32,11,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount"`
	PrimaryNum           int32             `protobuf:"varint,12,opt,name=primary_num,json=primaryNum,proto3" json:"primary_num"`
	SecondNum            int32             `protobuf:"varint,13,opt,name=second_num,json=secondNum,proto3" json:"second_num"`
	GoodsCondition       []*GoodsCondition `protobuf:"bytes,14,rep,name=goods_condition,json=goodsCondition,proto3" json:"goods_condition"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ApplierCondition) Reset()         { *m = ApplierCondition{} }
func (m *ApplierCondition) String() string { return proto.CompactTextString(m) }
func (*ApplierCondition) ProtoMessage()    {}
func (*ApplierCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e53247d573818c, []int{4}
}

func (m *ApplierCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplierCondition.Unmarshal(m, b)
}
func (m *ApplierCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplierCondition.Marshal(b, m, deterministic)
}
func (m *ApplierCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplierCondition.Merge(m, src)
}
func (m *ApplierCondition) XXX_Size() int {
	return xxx_messageInfo_ApplierCondition.Size(m)
}
func (m *ApplierCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplierCondition.DiscardUnknown(m)
}

var xxx_messageInfo_ApplierCondition proto.InternalMessageInfo

func (m *ApplierCondition) GetRankId() int32 {
	if m != nil {
		return m.RankId
	}
	return 0
}

func (m *ApplierCondition) GetIsBought() bool {
	if m != nil {
		return m.IsBought
	}
	return false
}

func (m *ApplierCondition) GetConsumptionAmount() float32 {
	if m != nil {
		return m.ConsumptionAmount
	}
	return 0
}

func (m *ApplierCondition) GetConsumptionNum() int32 {
	if m != nil {
		return m.ConsumptionNum
	}
	return 0
}

func (m *ApplierCondition) GetIsBindIdcard() bool {
	if m != nil {
		return m.IsBindIdcard
	}
	return false
}

func (m *ApplierCondition) GetIsBindMobile() bool {
	if m != nil {
		return m.IsBindMobile
	}
	return false
}

func (m *ApplierCondition) GetIsInformation() bool {
	if m != nil {
		return m.IsInformation
	}
	return false
}

func (m *ApplierCondition) GetInformationFields() string {
	if m != nil {
		return m.InformationFields
	}
	return ""
}

func (m *ApplierCondition) GetJoined() bool {
	if m != nil {
		return m.Joined
	}
	return false
}

func (m *ApplierCondition) GetJoinAmount() float32 {
	if m != nil {
		return m.JoinAmount
	}
	return 0
}

func (m *ApplierCondition) GetPromotionAmount() float32 {
	if m != nil {
		return m.PromotionAmount
	}
	return 0
}

func (m *ApplierCondition) GetPrimaryNum() int32 {
	if m != nil {
		return m.PrimaryNum
	}
	return 0
}

func (m *ApplierCondition) GetSecondNum() int32 {
	if m != nil {
		return m.SecondNum
	}
	return 0
}

func (m *ApplierCondition) GetGoodsCondition() []*GoodsCondition {
	if m != nil {
		return m.GoodsCondition
	}
	return nil
}

// 满足加入销售员配置条件项
type ApplierMeetCondition struct {
	RankId               int32    `protobuf:"varint,1,opt,name=rank_id,json=rankId,proto3" json:"rank_id"`
	HasBought            bool     `protobuf:"varint,2,opt,name=has_bought,json=hasBought,proto3" json:"has_bought"`
	HasConsumptionAmount bool     `protobuf:"varint,3,opt,name=has_consumption_amount,json=hasConsumptionAmount,proto3" json:"has_consumption_amount"`
	HasConsumptionNum    bool     `protobuf:"varint,4,opt,name=has_consumption_num,json=hasConsumptionNum,proto3" json:"has_consumption_num"`
	HasBindIdcard        bool     `protobuf:"varint,5,opt,name=has_bind_idcard,json=hasBindIdcard,proto3" json:"has_bind_idcard"`
	HasBindMobile        bool     `protobuf:"varint,6,opt,name=has_bind_mobile,json=hasBindMobile,proto3" json:"has_bind_mobile"`
	HasInformation       bool     `protobuf:"varint,7,opt,name=has_information,json=hasInformation,proto3" json:"has_information"`
	HasJoined            bool     `protobuf:"varint,8,opt,name=has_joined,json=hasJoined,proto3" json:"has_joined"`
	HasPromotionAmount   bool     `protobuf:"varint,9,opt,name=has_promotion_amount,json=hasPromotionAmount,proto3" json:"has_promotion_amount"`
	HasPrimaryNum        bool     `protobuf:"varint,10,opt,name=has_primary_num,json=hasPrimaryNum,proto3" json:"has_primary_num"`
	HasSecondNum         bool     `protobuf:"varint,11,opt,name=has_second_num,json=hasSecondNum,proto3" json:"has_second_num"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplierMeetCondition) Reset()         { *m = ApplierMeetCondition{} }
func (m *ApplierMeetCondition) String() string { return proto.CompactTextString(m) }
func (*ApplierMeetCondition) ProtoMessage()    {}
func (*ApplierMeetCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e53247d573818c, []int{5}
}

func (m *ApplierMeetCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplierMeetCondition.Unmarshal(m, b)
}
func (m *ApplierMeetCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplierMeetCondition.Marshal(b, m, deterministic)
}
func (m *ApplierMeetCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplierMeetCondition.Merge(m, src)
}
func (m *ApplierMeetCondition) XXX_Size() int {
	return xxx_messageInfo_ApplierMeetCondition.Size(m)
}
func (m *ApplierMeetCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplierMeetCondition.DiscardUnknown(m)
}

var xxx_messageInfo_ApplierMeetCondition proto.InternalMessageInfo

func (m *ApplierMeetCondition) GetRankId() int32 {
	if m != nil {
		return m.RankId
	}
	return 0
}

func (m *ApplierMeetCondition) GetHasBought() bool {
	if m != nil {
		return m.HasBought
	}
	return false
}

func (m *ApplierMeetCondition) GetHasConsumptionAmount() bool {
	if m != nil {
		return m.HasConsumptionAmount
	}
	return false
}

func (m *ApplierMeetCondition) GetHasConsumptionNum() bool {
	if m != nil {
		return m.HasConsumptionNum
	}
	return false
}

func (m *ApplierMeetCondition) GetHasBindIdcard() bool {
	if m != nil {
		return m.HasBindIdcard
	}
	return false
}

func (m *ApplierMeetCondition) GetHasBindMobile() bool {
	if m != nil {
		return m.HasBindMobile
	}
	return false
}

func (m *ApplierMeetCondition) GetHasInformation() bool {
	if m != nil {
		return m.HasInformation
	}
	return false
}

func (m *ApplierMeetCondition) GetHasJoined() bool {
	if m != nil {
		return m.HasJoined
	}
	return false
}

func (m *ApplierMeetCondition) GetHasPromotionAmount() bool {
	if m != nil {
		return m.HasPromotionAmount
	}
	return false
}

func (m *ApplierMeetCondition) GetHasPrimaryNum() bool {
	if m != nil {
		return m.HasPrimaryNum
	}
	return false
}

func (m *ApplierMeetCondition) GetHasSecondNum() bool {
	if m != nil {
		return m.HasSecondNum
	}
	return false
}

func init() {
	proto.RegisterType((*Applier)(nil), "geiqin.srv.dms.Applier")
	proto.RegisterType((*ApplierResponse)(nil), "geiqin.srv.dms.ApplierResponse")
	proto.RegisterType((*ApplyInfo)(nil), "geiqin.srv.dms.ApplyInfo")
	proto.RegisterType((*ApplyInfoResponse)(nil), "geiqin.srv.dms.ApplyInfoResponse")
	proto.RegisterType((*ApplierCondition)(nil), "geiqin.srv.dms.ApplierCondition")
	proto.RegisterType((*ApplierMeetCondition)(nil), "geiqin.srv.dms.ApplierMeetCondition")
}

func init() { proto.RegisterFile("applier.proto", fileDescriptor_83e53247d573818c) }

var fileDescriptor_83e53247d573818c = []byte{
	// 1068 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x96, 0xcd, 0x72, 0x23, 0x35,
	0x10, 0xc7, 0xb1, 0x1d, 0xdb, 0xe3, 0x76, 0x3c, 0x8e, 0x45, 0xd8, 0x9d, 0xcd, 0xd6, 0x12, 0x6f,
	0x2a, 0xb0, 0x06, 0x6a, 0x0d, 0x1b, 0xb8, 0x42, 0x55, 0x3e, 0x76, 0x53, 0x86, 0xca, 0x56, 0x6a,
	0x72, 0xe0, 0x38, 0xa5, 0x78, 0x94, 0x58, 0x24, 0x33, 0x1a, 0x24, 0x4d, 0x0a, 0xbf, 0x06, 0x77,
	0xae, 0x5c, 0x79, 0x11, 0x1e, 0x82, 0x23, 0x2f, 0xc0, 0x9d, 0x52, 0x4b, 0x63, 0x8f, 0xed, 0x98,
	0xaf, 0x1c, 0xb8, 0x59, 0xdd, 0x7f, 0xb5, 0xd4, 0xdd, 0xbf, 0x69, 0x19, 0x3a, 0x34, 0xcb, 0x6e,
	0x39, 0x93, 0xc3, 0x4c, 0x0a, 0x2d, 0x88, 0x7f, 0xcd, 0xf8, 0xf7, 0x3c, 0x1d, 0x2a, 0x79, 0x37,
	0x8c, 0x13, 0xb5, 0xb3, 0x39, 0x16, 0x49, 0x22, 0x52, 0xeb, 0xdd, 0xe9, 0xc5, 0x5c, 0x69, 0xc9,
	0x2f, 0x73, 0x2d, 0xdc, 0x86, 0x1d, 0x90, 0x34, 0xbd, 0x71, 0xbf, 0xb7, 0xaf, 0x85, 0x88, 0xd5,
	0xb1, 0x48, 0x63, 0xae, 0x79, 0xb1, 0x69, 0xef, 0xf7, 0x0d, 0x68, 0x1e, 0xda, 0x43, 0x88, 0x0f,
	0x55, 0x1e, 0x07, 0x95, 0x7e, 0x65, 0x50, 0x0b, 0xab, 0x3c, 0x26, 0x1f, 0x80, 0x5f, 0x0a, 0x19,
	0xf1, 0x38, 0xa8, 0xa2, 0xaf, 0x53, 0xb2, 0x8e, 0x62, 0xf2, 0x18, 0x9a, 0xe6, 0x18, 0xe3, 0xaf,
	0xf5, 0x2b, 0x83, 0x7a, 0xd8, 0x30, 0xcb, 0x51, 0x4c, 0x9e, 0xc3, 0x66, 0xcc, 0x55, 0x76, 0x4b,
	0xa7, 0x51, 0x4a, 0x13, 0x16, 0x6c, 0xf4, 0x2b, 0x83, 0x56, 0xd8, 0x76, 0xb6, 0xb7, 0x34, 0x61,
	0xe4, 0x11, 0x34, 0x68, 0xae, 0x05, 0x8b, 0x83, 0x7a, 0xbf, 0x32, 0xf0, 0x42, 0xb7, 0x22, 0xbb,
	0xd0, 0x1e, 0xe7, 0x4a, 0x8b, 0x84, 0xe1, 0xb9, 0x0d, 0x3c, 0x17, 0x0a, 0xd3, 0x28, 0x36, 0x1b,
	0x95, 0xa6, 0x3a, 0x57, 0x41, 0x13, 0xa3, 0xba, 0x95, 0xb1, 0x4b, 0x46, 0x95, 0x48, 0x03, 0xcf,
	0xda, 0xed, 0x8a, 0x04, 0xd0, 0x94, 0x2c, 0xa1, 0xf2, 0x46, 0x05, 0x2d, 0x74, 0x14, 0x4b, 0xbc,
	0x42, 0x1c, 0x8b, 0x54, 0x05, 0x60, 0x77, 0xd8, 0x15, 0x79, 0x06, 0x30, 0x96, 0x8c, 0x6a, 0x16,
	0x47, 0x54, 0x07, 0x6d, 0xf4, 0xb5, 0x9c, 0xe5, 0x50, 0x1b, 0x77, 0x9e, 0xc5, 0x85, 0x7b, 0xd3,
	0xba, 0x9d, 0xe5, 0x50, 0x93, 0x2f, 0xa1, 0x5d, 0xaa, 0x52, 0xd0, 0xe9, 0x57, 0x06, 0xed, 0x83,
	0xa7, 0xc3, 0xc5, 0x06, 0x0e, 0x4f, 0xe6, 0x92, 0xb0, 0xac, 0x27, 0x03, 0xd8, 0x30, 0x45, 0x0c,
	0x7c, 0xdc, 0xb7, 0xbd, 0xbc, 0x2f, 0xa4, 0xe9, 0x4d, 0x88, 0x0a, 0xf2, 0x14, 0x5a, 0x3c, 0xbd,
	0xe3, 0x9a, 0x45, 0x2a, 0x0d, 0xba, 0x78, 0x0d, 0xcf, 0x1a, 0x2e, 0x52, 0xf2, 0x15, 0xb4, 0xc6,
	0x45, 0xc3, 0x83, 0x2d, 0x8c, 0xd5, 0x5f, 0x8e, 0xe5, 0xba, 0x3f, 0x03, 0x23, 0x9c, 0x6f, 0x21,
	0xdf, 0x80, 0x9f, 0x30, 0xa6, 0xa3, 0x79, 0x90, 0x1e, 0x06, 0xd9, 0x5f, 0x13, 0xe4, 0x8c, 0x31,
	0x3d, 0x0f, 0xd4, 0x49, 0xca, 0xcb, 0xbd, 0x3f, 0x2a, 0xd0, 0x75, 0xba, 0x90, 0xa9, 0x4c, 0xa4,
	0x8a, 0x91, 0x4f, 0xa1, 0xc1, 0x52, 0xcd, 0xf5, 0x14, 0xb1, 0x6b, 0x1f, 0x3c, 0x5e, 0x13, 0x38,
	0x74, 0x32, 0xf2, 0x09, 0xd4, 0x33, 0x7a, 0xcd, 0x24, 0xa2, 0xd8, 0x3e, 0x78, 0x6f, 0x59, 0x7f,
	0x6e, 0x9c, 0xa1, 0xd5, 0x90, 0x97, 0x50, 0xe7, 0x9a, 0x25, 0x2a, 0xa8, 0xf5, 0x6b, 0x7f, 0x15,
	0xdc, 0xaa, 0x4c, 0x6c, 0x26, 0xa5, 0x90, 0x08, 0xea, 0x3d, 0xb1, 0x5f, 0x1b, 0x67, 0x68, 0x35,
	0xa6, 0x43, 0x3c, 0xbd, 0x12, 0xc8, 0xed, 0x3d, 0x1d, 0x1a, 0xa5, 0x57, 0x22, 0x44, 0xc5, 0xde,
	0x8f, 0x55, 0x68, 0x99, 0x93, 0xa6, 0xc6, 0x46, 0x9e, 0x80, 0xc7, 0x55, 0x64, 0xbe, 0x6b, 0x9b,
	0xb3, 0x17, 0x36, 0xb9, 0x42, 0x37, 0x79, 0x05, 0x4d, 0xf7, 0xbd, 0xbb, 0xec, 0xd6, 0x5e, 0xb8,
	0xd0, 0x91, 0x8f, 0xa1, 0x6e, 0x28, 0x28, 0x32, 0xbc, 0x1f, 0x14, 0x2b, 0x59, 0x84, 0x61, 0x03,
	0xf5, 0x0f, 0x84, 0xa1, 0x8e, 0x41, 0xfe, 0x13, 0x0c, 0x3f, 0x55, 0xa0, 0x37, 0x2b, 0xca, 0x0c,
	0x87, 0x57, 0x4b, 0x38, 0x3c, 0xb9, 0x2f, 0xb4, 0xdd, 0x52, 0x02, 0xc2, 0x36, 0xad, 0xfa, 0x2f,
	0x9a, 0x56, 0xfb, 0xdb, 0xa6, 0xfd, 0xb2, 0x01, 0x5b, 0xcb, 0xc5, 0x28, 0x4f, 0xba, 0xca, 0xc2,
	0xa4, 0x33, 0x1f, 0xa1, 0x8a, 0x2e, 0x45, 0x7e, 0x3d, 0xd1, 0x78, 0x11, 0x2f, 0xf4, 0xb8, 0x3a,
	0xc2, 0x35, 0x79, 0x09, 0x64, 0x2c, 0x52, 0x95, 0x27, 0x99, 0x09, 0x12, 0xd1, 0x44, 0xe4, 0xa9,
	0xc6, 0x2b, 0x54, 0xc3, 0x5e, 0xc9, 0x73, 0x88, 0x0e, 0xf2, 0x02, 0xba, 0x65, 0x79, 0x9a, 0x27,
	0xc8, 0x63, 0x3d, 0xf4, 0x4b, 0xe6, 0xb7, 0x79, 0x42, 0xf6, 0xc1, 0x37, 0x87, 0xf2, 0x34, 0x8e,
	0x78, 0x3c, 0xa6, 0xb2, 0x98, 0xa1, 0x9b, 0x5c, 0x1d, 0xf1, 0x34, 0x1e, 0xa1, 0xad, 0xac, 0x4a,
	0xc4, 0x25, 0xbf, 0x65, 0x38, 0x4c, 0x67, 0xaa, 0x33, 0xb4, 0x99, 0x51, 0xcf, 0x55, 0x64, 0x32,
	0x97, 0x09, 0xc5, 0xde, 0x36, 0x51, 0xd5, 0xe1, 0x6a, 0x34, 0x37, 0x9a, 0x54, 0x4a, 0x9a, 0xe8,
	0x8a, 0xb3, 0xdb, 0x58, 0xb9, 0x49, 0xdb, 0x2b, 0x79, 0xde, 0xa0, 0xc3, 0x8c, 0xd6, 0xef, 0x04,
	0x4f, 0x59, 0x8c, 0x33, 0xd7, 0x0b, 0xdd, 0xca, 0x4c, 0x77, 0xf3, 0xab, 0x28, 0x05, 0x60, 0x29,
	0xc0, 0x98, 0x5c, 0x0d, 0x3e, 0x82, 0xad, 0x4c, 0x8a, 0x44, 0x94, 0x0b, 0xd6, 0x46, 0x55, 0x77,
	0x66, 0x77, 0xd2, 0x5d, 0x68, 0x67, 0x92, 0x27, 0x54, 0x4e, 0xb1, 0x54, 0x9b, 0x58, 0x2a, 0x70,
	0x26, 0x53, 0xa6, 0x67, 0x00, 0x8a, 0x19, 0x66, 0xd1, 0xdf, 0x41, 0x7f, 0xcb, 0x5a, 0x8c, 0xfb,
	0x14, 0xba, 0xf8, 0x30, 0x96, 0xb0, 0xf6, 0x11, 0xeb, 0xf7, 0x97, 0xe9, 0x38, 0x5d, 0x78, 0x3f,
	0x43, 0x7f, 0xf1, 0x3d, 0xdd, 0xfb, 0xb5, 0x06, 0xdb, 0xf7, 0x91, 0xbf, 0x9e, 0x9a, 0x67, 0x00,
	0x13, 0xba, 0x84, 0x4d, 0x6b, 0x42, 0x0b, 0x6e, 0xbe, 0x80, 0x47, 0xc6, 0xbd, 0x86, 0x1d, 0x2f,
	0xdc, 0x9e, 0x50, 0x73, 0xfc, 0x12, 0x3e, 0x43, 0x78, 0x77, 0x79, 0x57, 0x81, 0x90, 0x17, 0xf6,
	0x16, 0xb7, 0x98, 0xfc, 0x3f, 0x84, 0x2e, 0x5e, 0x62, 0x05, 0xa3, 0x8e, 0xb9, 0xc9, 0x9c, 0xa3,
	0xb2, 0x6e, 0x01, 0xa4, 0x42, 0xe7, 0x48, 0x7a, 0x61, 0x75, 0xab, 0x28, 0xf9, 0x13, 0xba, 0xc0,
	0x92, 0xcb, 0xde, 0x01, 0xe2, 0xcd, 0xb2, 0xff, 0xda, 0x32, 0xf2, 0x19, 0x98, 0xfc, 0xa2, 0x15,
	0x0c, 0x2c, 0x49, 0x64, 0x42, 0xd5, 0xf9, 0x12, 0x09, 0xee, 0x86, 0x65, 0x1a, 0x60, 0x76, 0xc3,
	0xf3, 0x39, 0x10, 0xfb, 0x60, 0xae, 0x12, 0x95, 0xa0, 0x68, 0xdb, 0x2f, 0x62, 0x42, 0xd5, 0x45,
	0xc1, 0xc5, 0xc1, 0xcf, 0x55, 0xd8, 0x3a, 0x9b, 0xba, 0x86, 0x5e, 0x30, 0x79, 0xc7, 0xc7, 0x8c,
	0x1c, 0x43, 0xdd, 0x8e, 0xea, 0xd5, 0x31, 0x93, 0x64, 0x7a, 0xba, 0xf3, 0x7c, 0xfd, 0xbc, 0x72,
	0x23, 0x6e, 0xef, 0x1d, 0x72, 0x02, 0x8d, 0x8b, 0xfc, 0x32, 0xe1, 0x9a, 0xac, 0x9b, 0xef, 0x3b,
	0xbb, 0xeb, 0x06, 0xff, 0x3c, 0xca, 0x21, 0xd4, 0x4e, 0xd9, 0xc3, 0x42, 0x9c, 0x40, 0xe3, 0xf5,
	0x0f, 0x5c, 0x69, 0xf5, 0x90, 0x28, 0x07, 0xbf, 0x55, 0xc0, 0x5f, 0x2d, 0xd3, 0xf1, 0x84, 0x8d,
	0x6f, 0xfe, 0xef, 0x04, 0xdf, 0x40, 0xe3, 0x82, 0x51, 0x39, 0x9e, 0x90, 0x95, 0x87, 0xe4, 0x88,
	0x2a, 0xf6, 0xed, 0x84, 0x49, 0xf6, 0x0f, 0xe2, 0x5c, 0x36, 0xf0, 0xbf, 0xf2, 0xe7, 0x7f, 0x06,
	0x00, 0x00, 0xff, 0xff, 0x0f, 0xa7, 0x25, 0x5d, 0x8f, 0x0b, 0x00, 0x00,
}
