// Code generated by protoc-gen-go. DO NOT EDIT.
// source: goods.proto

package geiqin_srv_dms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Goods struct {
	Id                   int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId               int64              `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	SkuId                int64              `protobuf:"varint,3,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	Disabled             bool               `protobuf:"varint,6,opt,name=disabled,proto3" json:"disabled"`
	Default              bool               `protobuf:"varint,7,opt,name=default,proto3" json:"default"`
	CreatedAt            string             `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string             `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	GoodsCommission      []*GoodsCommission `protobuf:"bytes,10,rep,name=goods_commission,json=goodsCommission,proto3" json:"goods_commission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Goods) Reset()         { *m = Goods{} }
func (m *Goods) String() string { return proto.CompactTextString(m) }
func (*Goods) ProtoMessage()    {}
func (*Goods) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{0}
}

func (m *Goods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Goods.Unmarshal(m, b)
}
func (m *Goods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Goods.Marshal(b, m, deterministic)
}
func (m *Goods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Goods.Merge(m, src)
}
func (m *Goods) XXX_Size() int {
	return xxx_messageInfo_Goods.Size(m)
}
func (m *Goods) XXX_DiscardUnknown() {
	xxx_messageInfo_Goods.DiscardUnknown(m)
}

var xxx_messageInfo_Goods proto.InternalMessageInfo

func (m *Goods) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Goods) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *Goods) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *Goods) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *Goods) GetDefault() bool {
	if m != nil {
		return m.Default
	}
	return false
}

func (m *Goods) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Goods) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Goods) GetGoodsCommission() []*GoodsCommission {
	if m != nil {
		return m.GoodsCommission
	}
	return nil
}

type GoodsWhere struct {
	Paged                int32    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Top                  int32    `protobuf:"varint,3,opt,name=top,proto3" json:"top,omitempty"`
	Id                   int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Ids                  []int64  `protobuf:"varint,5,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Keywords             string   `protobuf:"bytes,6,opt,name=keywords,proto3" json:"keywords,omitempty"`
	CatId                int32    `protobuf:"varint,7,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`
	Type                 string   `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	Sorting              string   `protobuf:"bytes,9,opt,name=sorting,proto3" json:"sorting,omitempty"`
	ItemId               int64    `protobuf:"varint,10,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	SkuId                int64    `protobuf:"varint,11,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	ItemName             string   `protobuf:"bytes,12,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	ItemPrice            string   `protobuf:"bytes,13,opt,name=item_price,json=itemPrice,proto3" json:"item_price,omitempty"`
	ItemIds              []int64  `protobuf:"varint,14,rep,packed,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	CustomerId           int64    `protobuf:"varint,15,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Client               bool     `protobuf:"varint,16,opt,name=client,proto3" json:"client,omitempty"`
	Disabled             bool     `protobuf:"varint,17,opt,name=disabled,proto3" json:"disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsWhere) Reset()         { *m = GoodsWhere{} }
func (m *GoodsWhere) String() string { return proto.CompactTextString(m) }
func (*GoodsWhere) ProtoMessage()    {}
func (*GoodsWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{1}
}

func (m *GoodsWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsWhere.Unmarshal(m, b)
}
func (m *GoodsWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsWhere.Marshal(b, m, deterministic)
}
func (m *GoodsWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsWhere.Merge(m, src)
}
func (m *GoodsWhere) XXX_Size() int {
	return xxx_messageInfo_GoodsWhere.Size(m)
}
func (m *GoodsWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsWhere.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsWhere proto.InternalMessageInfo

func (m *GoodsWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *GoodsWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GoodsWhere) GetTop() int32 {
	if m != nil {
		return m.Top
	}
	return 0
}

func (m *GoodsWhere) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GoodsWhere) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GoodsWhere) GetKeywords() string {
	if m != nil {
		return m.Keywords
	}
	return ""
}

func (m *GoodsWhere) GetCatId() int32 {
	if m != nil {
		return m.CatId
	}
	return 0
}

func (m *GoodsWhere) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GoodsWhere) GetSorting() string {
	if m != nil {
		return m.Sorting
	}
	return ""
}

func (m *GoodsWhere) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *GoodsWhere) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *GoodsWhere) GetItemName() string {
	if m != nil {
		return m.ItemName
	}
	return ""
}

func (m *GoodsWhere) GetItemPrice() string {
	if m != nil {
		return m.ItemPrice
	}
	return ""
}

func (m *GoodsWhere) GetItemIds() []int64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

func (m *GoodsWhere) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *GoodsWhere) GetClient() bool {
	if m != nil {
		return m.Client
	}
	return false
}

func (m *GoodsWhere) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

type GoodsResponse struct {
	Entity               *Goods   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Goods `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsResponse) Reset()         { *m = GoodsResponse{} }
func (m *GoodsResponse) String() string { return proto.CompactTextString(m) }
func (*GoodsResponse) ProtoMessage()    {}
func (*GoodsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a30593c5487368b0, []int{2}
}

func (m *GoodsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsResponse.Unmarshal(m, b)
}
func (m *GoodsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsResponse.Marshal(b, m, deterministic)
}
func (m *GoodsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsResponse.Merge(m, src)
}
func (m *GoodsResponse) XXX_Size() int {
	return xxx_messageInfo_GoodsResponse.Size(m)
}
func (m *GoodsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsResponse proto.InternalMessageInfo

func (m *GoodsResponse) GetEntity() *Goods {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *GoodsResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *GoodsResponse) GetItems() []*Goods {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *GoodsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GoodsResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Goods)(nil), "geiqin.srv.dms.Goods")
	proto.RegisterType((*GoodsWhere)(nil), "geiqin.srv.dms.GoodsWhere")
	proto.RegisterType((*GoodsResponse)(nil), "geiqin.srv.dms.GoodsResponse")
}

func init() { proto.RegisterFile("goods.proto", fileDescriptor_a30593c5487368b0) }

var fileDescriptor_a30593c5487368b0 = []byte{
	// 630 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x25, 0x71, 0xed, 0x24, 0x93, 0x36, 0x0d, 0xab, 0x16, 0x96, 0x54, 0x55, 0x43, 0x4e, 0x91,
	0x10, 0x39, 0x84, 0x33, 0x87, 0xd2, 0xa2, 0x28, 0x48, 0xa0, 0xca, 0x39, 0x70, 0xe0, 0x10, 0xb9,
	0xde, 0x69, 0xba, 0x4a, 0xec, 0x35, 0xbb, 0x9b, 0xa2, 0xf4, 0x07, 0xf8, 0x1d, 0xfe, 0x8b, 0x03,
	0xbf, 0x80, 0x76, 0xec, 0x84, 0xa6, 0x72, 0xe1, 0x50, 0x71, 0xdb, 0x79, 0xef, 0x65, 0x76, 0xe7,
	0xbd, 0x89, 0xa1, 0x39, 0x53, 0x4a, 0x98, 0x41, 0xa6, 0x95, 0x55, 0xac, 0x35, 0x43, 0xf9, 0x55,
	0xa6, 0x03, 0xa3, 0x6f, 0x06, 0x22, 0x31, 0x9d, 0xdd, 0x58, 0x25, 0x89, 0x4a, 0x73, 0xb6, 0xb3,
	0x4f, 0xd2, 0x71, 0x7a, 0xa5, 0x0a, 0xe0, 0x90, 0x80, 0x33, 0x95, 0x24, 0xd2, 0x18, 0xb9, 0xd6,
	0xf5, 0xbe, 0x57, 0xc1, 0x1f, 0x39, 0x86, 0xb5, 0xa0, 0x2a, 0x05, 0xaf, 0x74, 0x2b, 0x7d, 0x2f,
	0xac, 0x4a, 0xc1, 0x9e, 0x43, 0x4d, 0x5a, 0x4c, 0xa6, 0x52, 0xf0, 0x2a, 0x81, 0x81, 0x2b, 0xc7,
	0x82, 0x1d, 0x42, 0x60, 0xe6, 0x4b, 0x87, 0x7b, 0x84, 0xfb, 0x66, 0xbe, 0x1c, 0x0b, 0xd6, 0x81,
	0xba, 0x90, 0x26, 0xba, 0x5c, 0xa0, 0xe0, 0x41, 0xb7, 0xd2, 0xaf, 0x87, 0x9b, 0x9a, 0x71, 0xa8,
	0x09, 0xbc, 0x8a, 0x96, 0x0b, 0xcb, 0x6b, 0x44, 0xad, 0x4b, 0x76, 0x0c, 0x10, 0x6b, 0x8c, 0x2c,
	0x8a, 0x69, 0x64, 0x79, 0xbd, 0x5b, 0xe9, 0x37, 0xc2, 0x46, 0x81, 0x9c, 0x12, 0xbd, 0xcc, 0xc4,
	0x9a, 0x6e, 0xe4, 0x74, 0x81, 0x9c, 0x5a, 0xf6, 0x01, 0xda, 0x34, 0xd6, 0x34, 0xde, 0xcc, 0xc5,
	0xa1, 0xeb, 0xf5, 0x9b, 0xc3, 0x93, 0xc1, 0xb6, 0x3d, 0x83, 0xd1, 0xf6, 0xf8, 0xe1, 0xfe, 0x3d,
	0x3f, 0x7a, 0x3f, 0x3c, 0x00, 0x12, 0x7d, 0xbe, 0x46, 0x8d, 0xec, 0x00, 0xfc, 0x2c, 0x9a, 0x61,
	0xee, 0x88, 0x1f, 0xe6, 0x05, 0x3b, 0x82, 0x86, 0x3b, 0x4c, 0x8d, 0xbc, 0x45, 0xb2, 0xc5, 0x0f,
	0xeb, 0x0e, 0x98, 0xc8, 0x5b, 0x64, 0x6d, 0xf0, 0xac, 0xca, 0xc8, 0x15, 0x3f, 0x74, 0xc7, 0xc2,
	0xd3, 0x9d, 0x8d, 0xa7, 0x6d, 0xf0, 0xa4, 0x30, 0xdc, 0xef, 0x7a, 0x7d, 0x2f, 0x74, 0x47, 0xe7,
	0xda, 0x1c, 0x57, 0xdf, 0x94, 0x16, 0x86, 0x5c, 0x6b, 0x84, 0x9b, 0xda, 0x19, 0x1d, 0x47, 0xd6,
	0x19, 0x5d, 0xcb, 0xdf, 0x10, 0x47, 0x76, 0x2c, 0x18, 0x83, 0x1d, 0xbb, 0xca, 0xb0, 0x30, 0x8b,
	0xce, 0xce, 0x60, 0xa3, 0xb4, 0x95, 0xe9, 0xac, 0x30, 0x69, 0x5d, 0xde, 0x8d, 0x11, 0x1e, 0x88,
	0xb1, 0x79, 0x37, 0xc6, 0x23, 0x68, 0x90, 0x3e, 0x8d, 0x12, 0xe4, 0xbb, 0xf9, 0x8b, 0x1c, 0xf0,
	0x29, 0x4a, 0xd0, 0xc5, 0x41, 0x64, 0xa6, 0x65, 0x8c, 0x7c, 0x2f, 0x8f, 0xc3, 0x21, 0x17, 0x0e,
	0x60, 0x2f, 0xa0, 0x5e, 0xdc, 0x65, 0x78, 0x8b, 0x66, 0xac, 0xe5, 0x97, 0x19, 0x76, 0x02, 0xcd,
	0x78, 0x69, 0xac, 0x4a, 0x50, 0xbb, 0x2b, 0xf7, 0xe9, 0x4a, 0x58, 0x43, 0x63, 0xc1, 0x9e, 0x41,
	0x10, 0x2f, 0x24, 0xa6, 0x96, 0xb7, 0x69, 0x43, 0x8a, 0x6a, 0x6b, 0xad, 0x9e, 0x6e, 0xaf, 0x55,
	0xef, 0x57, 0x05, 0xf6, 0x28, 0xb2, 0x10, 0x4d, 0xa6, 0x52, 0x83, 0xec, 0x35, 0x04, 0x98, 0x5a,
	0x69, 0x57, 0x14, 0x5b, 0x73, 0x78, 0x58, 0xba, 0x06, 0x61, 0x21, 0x62, 0xaf, 0xf2, 0x90, 0x35,
	0x45, 0x59, 0xa2, 0xbe, 0x70, 0x64, 0x9e, 0xbd, 0x76, 0x62, 0x37, 0x8d, 0xe1, 0x1e, 0x6d, 0xd8,
	0x03, 0xad, 0x73, 0x8d, 0x13, 0xa3, 0xd6, 0x4a, 0x53, 0xf8, 0x25, 0xe2, 0xf7, 0x8e, 0x0c, 0x73,
	0x0d, 0xeb, 0xc3, 0x8e, 0x4c, 0xaf, 0x14, 0xf7, 0x49, 0x7b, 0x70, 0x5f, 0xeb, 0xfe, 0xc5, 0x21,
	0x29, 0x86, 0x5f, 0xa0, 0xf5, 0x71, 0x45, 0x17, 0x4d, 0x50, 0xdf, 0x38, 0xcf, 0xc7, 0x10, 0x4c,
	0x30, 0xd2, 0xf1, 0x35, 0xeb, 0x94, 0x3e, 0x88, 0xb6, 0xb9, 0xf3, 0xb2, 0x94, 0xa3, 0xc6, 0x85,
	0x75, 0xbd, 0x27, 0xc3, 0x9f, 0x55, 0xd8, 0xfd, 0x4f, 0xbd, 0xd9, 0x08, 0xea, 0xe7, 0xeb, 0xaf,
	0xc1, 0xdf, 0x9a, 0x1d, 0x97, 0xbb, 0xfa, 0xa7, 0xd1, 0x39, 0xf8, 0x67, 0xd7, 0x18, 0xcf, 0x1f,
	0xd7, 0xe5, 0x1d, 0x78, 0x23, 0xb4, 0x8f, 0xeb, 0xf1, 0x16, 0xbc, 0x09, 0x5a, 0x56, 0xbe, 0x07,
	0xff, 0xfc, 0xf9, 0x65, 0x40, 0x1f, 0xe0, 0x37, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x47, 0xc9,
	0xf3, 0x8d, 0xd5, 0x05, 0x00, 0x00,
}
