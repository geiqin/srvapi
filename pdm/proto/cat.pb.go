// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cat.proto

package geiqin_srv_pdm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cat struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug                 string   `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CatId                int32    `protobuf:"varint,4,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`
	Depth                int32    `protobuf:"varint,5,opt,name=depth,proto3" json:"depth,omitempty"`
	MediaId              int64    `protobuf:"varint,6,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	MediaUrl             string   `protobuf:"bytes,7,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	Memo                 string   `protobuf:"bytes,8,opt,name=memo,proto3" json:"memo,omitempty"`
	Sorting              int32    `protobuf:"varint,9,opt,name=sorting,proto3" json:"sorting,omitempty"`
	CreatedAt            string   `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Children             []*Cat   `protobuf:"bytes,12,rep,name=children,proto3" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cat) Reset()         { *m = Cat{} }
func (m *Cat) String() string { return proto.CompactTextString(m) }
func (*Cat) ProtoMessage()    {}
func (*Cat) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0a5ac8640cab35d, []int{0}
}

func (m *Cat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cat.Unmarshal(m, b)
}
func (m *Cat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cat.Marshal(b, m, deterministic)
}
func (m *Cat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cat.Merge(m, src)
}
func (m *Cat) XXX_Size() int {
	return xxx_messageInfo_Cat.Size(m)
}
func (m *Cat) XXX_DiscardUnknown() {
	xxx_messageInfo_Cat.DiscardUnknown(m)
}

var xxx_messageInfo_Cat proto.InternalMessageInfo

func (m *Cat) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Cat) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Cat) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cat) GetCatId() int32 {
	if m != nil {
		return m.CatId
	}
	return 0
}

func (m *Cat) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *Cat) GetMediaId() int64 {
	if m != nil {
		return m.MediaId
	}
	return 0
}

func (m *Cat) GetMediaUrl() string {
	if m != nil {
		return m.MediaUrl
	}
	return ""
}

func (m *Cat) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Cat) GetSorting() int32 {
	if m != nil {
		return m.Sorting
	}
	return 0
}

func (m *Cat) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Cat) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Cat) GetChildren() []*Cat {
	if m != nil {
		return m.Children
	}
	return nil
}

type CatResponse struct {
	Entity               *Cat     `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Cat   `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CatResponse) Reset()         { *m = CatResponse{} }
func (m *CatResponse) String() string { return proto.CompactTextString(m) }
func (*CatResponse) ProtoMessage()    {}
func (*CatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0a5ac8640cab35d, []int{1}
}

func (m *CatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CatResponse.Unmarshal(m, b)
}
func (m *CatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CatResponse.Marshal(b, m, deterministic)
}
func (m *CatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CatResponse.Merge(m, src)
}
func (m *CatResponse) XXX_Size() int {
	return xxx_messageInfo_CatResponse.Size(m)
}
func (m *CatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CatResponse proto.InternalMessageInfo

func (m *CatResponse) GetEntity() *Cat {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *CatResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *CatResponse) GetItems() []*Cat {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CatResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CatResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Cat)(nil), "geiqin.srv.pdm.Cat")
	proto.RegisterType((*CatResponse)(nil), "geiqin.srv.pdm.CatResponse")
}

func init() {
	proto.RegisterFile("cat.proto", fileDescriptor_c0a5ac8640cab35d)
}

var fileDescriptor_c0a5ac8640cab35d = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4f, 0x6b, 0x13, 0x41,
	0x14, 0x77, 0xb3, 0x7f, 0x92, 0x7d, 0x1b, 0x7a, 0x18, 0x5b, 0x98, 0xb6, 0x08, 0x21, 0xa7, 0x95,
	0xc2, 0x0a, 0xeb, 0x49, 0xf1, 0x60, 0x1b, 0x45, 0x02, 0x0a, 0x65, 0x6b, 0xf1, 0x58, 0xc6, 0x9d,
	0xd7, 0x64, 0x60, 0x77, 0x66, 0x9d, 0x9d, 0x14, 0xfa, 0xe9, 0x3c, 0xf8, 0x69, 0xfc, 0x16, 0x32,
	0x33, 0xa9, 0x68, 0x48, 0x11, 0xd6, 0xdb, 0xbc, 0xdf, 0x9f, 0xf7, 0x1e, 0xbf, 0x07, 0x03, 0x69,
	0xcd, 0x4c, 0xd1, 0x69, 0x65, 0x14, 0x39, 0x58, 0xa1, 0xf8, 0x26, 0x64, 0xd1, 0xeb, 0xbb, 0xa2,
	0xe3, 0xed, 0xc9, 0xb4, 0x56, 0x6d, 0xab, 0xa4, 0x67, 0xe7, 0xdf, 0x47, 0x10, 0x2e, 0x98, 0x21,
	0x07, 0x30, 0x12, 0x9c, 0x06, 0xb3, 0x20, 0x8f, 0xab, 0x91, 0xe0, 0x84, 0x40, 0xd4, 0x37, 0x9b,
	0x15, 0x1d, 0xcd, 0x82, 0x3c, 0xad, 0xdc, 0xdb, 0x62, 0x92, 0xb5, 0x48, 0x43, 0x8f, 0xd9, 0x37,
	0x39, 0x82, 0xa4, 0x66, 0xe6, 0x46, 0x70, 0x1a, 0x39, 0x6f, 0x5c, 0x33, 0xb3, 0xe4, 0xe4, 0x10,
	0x62, 0x8e, 0x9d, 0x59, 0xd3, 0xd8, 0xa3, 0xae, 0x20, 0xc7, 0x30, 0x69, 0x91, 0x0b, 0x66, 0xe5,
	0xc9, 0x2c, 0xc8, 0xc3, 0x6a, 0xec, 0xea, 0x25, 0x27, 0xa7, 0x90, 0x7a, 0x6a, 0xa3, 0x1b, 0x3a,
	0x76, 0x03, 0xbc, 0xf6, 0x5a, 0x37, 0x76, 0x70, 0x8b, 0xad, 0xa2, 0x13, 0x3f, 0xd8, 0xbe, 0x09,
	0x85, 0x71, 0xaf, 0xb4, 0x11, 0x72, 0x45, 0x53, 0x37, 0xe3, 0xa1, 0x24, 0xcf, 0x00, 0x6a, 0x8d,
	0xcc, 0x20, 0xbf, 0x61, 0x86, 0x82, 0xf3, 0xa4, 0x5b, 0xe4, 0xdc, 0x58, 0x7a, 0xd3, 0xf1, 0x07,
	0x3a, 0xf3, 0xf4, 0x16, 0x39, 0x37, 0xe4, 0x05, 0x4c, 0xea, 0xb5, 0x68, 0xb8, 0x46, 0x49, 0xa7,
	0xb3, 0x30, 0xcf, 0xca, 0xa7, 0xc5, 0xdf, 0x09, 0x16, 0x0b, 0x66, 0xaa, 0xdf, 0xa2, 0xf9, 0xcf,
	0x00, 0x32, 0x8b, 0x60, 0xdf, 0x29, 0xd9, 0x23, 0x39, 0x83, 0x04, 0xa5, 0x11, 0xe6, 0xde, 0xa5,
	0xf9, 0x88, 0x7d, 0x2b, 0x21, 0x67, 0x10, 0x77, 0x6c, 0x85, 0xda, 0xe5, 0x9c, 0x95, 0x47, 0xbb,
	0xda, 0x4b, 0x4b, 0x56, 0x5e, 0x43, 0x9e, 0x43, 0x2c, 0x0c, 0xb6, 0x3d, 0x0d, 0x1f, 0xdf, 0xcb,
	0x2b, 0x6c, 0x5f, 0xd4, 0x5a, 0x69, 0x77, 0x95, 0x3d, 0x7d, 0xdf, 0x5b, 0xb2, 0xf2, 0x1a, 0x92,
	0x43, 0x24, 0xe4, 0xad, 0x72, 0xb7, 0xca, 0xca, 0xc3, 0x5d, 0xed, 0x52, 0xde, 0xaa, 0xca, 0x29,
	0xca, 0x1f, 0x21, 0xc0, 0x82, 0x99, 0x2b, 0xd4, 0x77, 0xa2, 0x46, 0xf2, 0x06, 0x92, 0x85, 0xcb,
	0x95, 0xec, 0xdb, 0xe5, 0xe4, 0x74, 0xdf, 0x82, 0xdb, 0x98, 0xe6, 0x4f, 0xac, 0xfb, 0xda, 0xc5,
	0x3e, 0xd4, 0xfd, 0x0e, 0x1b, 0x1c, 0xe8, 0x7e, 0x05, 0xe1, 0x07, 0x34, 0x83, 0xac, 0xaf, 0x21,
	0xfa, 0xac, 0x71, 0xd8, 0xd8, 0x0b, 0x48, 0xae, 0x90, 0xe9, 0x7a, 0x4d, 0x8e, 0x77, 0x85, 0x17,
	0xac, 0xc7, 0x2f, 0x6b, 0xd4, 0xf8, 0xaf, 0x1e, 0x6f, 0x21, 0xfa, 0x28, 0x7a, 0x33, 0xbc, 0x43,
	0x79, 0x09, 0xd3, 0x4f, 0xf7, 0x7f, 0x9c, 0xf1, 0xbf, 0x3b, 0x7e, 0x4d, 0xdc, 0x67, 0xf2, 0xf2,
	0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcf, 0xda, 0xc3, 0xa7, 0x77, 0x04, 0x00, 0x00,
}
