// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sku.proto

package geiqin_srv_pdm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Sku struct {
	Id                   int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId               int64        `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	SkuSn                string       `protobuf:"bytes,3,opt,name=sku_sn,json=skuSn,proto3" json:"sku_sn"`
	Name                 string       `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	Barcode              string       `protobuf:"bytes,5,opt,name=barcode,proto3" json:"barcode"`
	Price                float32      `protobuf:"fixed32,6,opt,name=price,proto3" json:"price"`
	OriginPrice          float32      `protobuf:"fixed32,7,opt,name=origin_price,json=originPrice,proto3" json:"origin_price"`
	CostPrice            float32      `protobuf:"fixed32,8,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`
	Weight               float32      `protobuf:"fixed32,9,opt,name=weight,proto3" json:"weight"`
	Quantity             int32        `protobuf:"varint,10,opt,name=quantity,proto3" json:"quantity"`
	SoldNum              int32        `protobuf:"varint,11,opt,name=sold_num,json=soldNum,proto3" json:"sold_num"`
	InitSoldNum          int32        `protobuf:"varint,12,opt,name=init_sold_num,json=initSoldNum,proto3" json:"init_sold_num"`
	FrozenNum            int32        `protobuf:"varint,13,opt,name=frozen_num,json=frozenNum,proto3" json:"frozen_num"`
	Listed               bool         `protobuf:"varint,14,opt,name=listed,proto3" json:"listed"`
	OutSkuNo             string       `protobuf:"bytes,15,opt,name=out_sku_no,json=outSkuNo,proto3" json:"out_sku_no"`
	SpecDesc             string       `protobuf:"bytes,16,opt,name=spec_desc,json=specDesc,proto3" json:"spec_desc"`
	Defaulted            bool         `protobuf:"varint,17,opt,name=defaulted,proto3" json:"defaulted"`
	BuyQuota             int32        `protobuf:"varint,18,opt,name=buy_quota,json=buyQuota,proto3" json:"buy_quota"`
	CreatedAt            string       `protobuf:"bytes,19,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string       `protobuf:"bytes,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	SpecValues           []*SpecValue `protobuf:"bytes,21,rep,name=spec_values,json=specValues,proto3" json:"spec_values,omitempty" gorm:"many2many:spec_item_indices;"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Sku) Reset()         { *m = Sku{} }
func (m *Sku) String() string { return proto.CompactTextString(m) }
func (*Sku) ProtoMessage()    {}
func (*Sku) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccf7b4430f71abf, []int{0}
}

func (m *Sku) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sku.Unmarshal(m, b)
}
func (m *Sku) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sku.Marshal(b, m, deterministic)
}
func (m *Sku) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sku.Merge(m, src)
}
func (m *Sku) XXX_Size() int {
	return xxx_messageInfo_Sku.Size(m)
}
func (m *Sku) XXX_DiscardUnknown() {
	xxx_messageInfo_Sku.DiscardUnknown(m)
}

var xxx_messageInfo_Sku proto.InternalMessageInfo

func (m *Sku) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Sku) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *Sku) GetSkuSn() string {
	if m != nil {
		return m.SkuSn
	}
	return ""
}

func (m *Sku) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sku) GetBarcode() string {
	if m != nil {
		return m.Barcode
	}
	return ""
}

func (m *Sku) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Sku) GetOriginPrice() float32 {
	if m != nil {
		return m.OriginPrice
	}
	return 0
}

func (m *Sku) GetCostPrice() float32 {
	if m != nil {
		return m.CostPrice
	}
	return 0
}

func (m *Sku) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Sku) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Sku) GetSoldNum() int32 {
	if m != nil {
		return m.SoldNum
	}
	return 0
}

func (m *Sku) GetInitSoldNum() int32 {
	if m != nil {
		return m.InitSoldNum
	}
	return 0
}

func (m *Sku) GetFrozenNum() int32 {
	if m != nil {
		return m.FrozenNum
	}
	return 0
}

func (m *Sku) GetListed() bool {
	if m != nil {
		return m.Listed
	}
	return false
}

func (m *Sku) GetOutSkuNo() string {
	if m != nil {
		return m.OutSkuNo
	}
	return ""
}

func (m *Sku) GetSpecDesc() string {
	if m != nil {
		return m.SpecDesc
	}
	return ""
}

func (m *Sku) GetDefaulted() bool {
	if m != nil {
		return m.Defaulted
	}
	return false
}

func (m *Sku) GetBuyQuota() int32 {
	if m != nil {
		return m.BuyQuota
	}
	return 0
}

func (m *Sku) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Sku) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Sku) GetSpecValues() []*SpecValue {
	if m != nil {
		return m.SpecValues
	}
	return nil
}

type SpecItemIndex struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemId               int64    `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	SkuId                int64    `protobuf:"varint,3,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	SpecId               int32    `protobuf:"varint,4,opt,name=spec_id,json=specId,proto3" json:"spec_id,omitempty"`
	SpecValueId          int32    `protobuf:"varint,5,opt,name=spec_value_id,json=specValueId,proto3" json:"spec_value_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpecItemIndex) Reset()         { *m = SpecItemIndex{} }
func (m *SpecItemIndex) String() string { return proto.CompactTextString(m) }
func (*SpecItemIndex) ProtoMessage()    {}
func (*SpecItemIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccf7b4430f71abf, []int{1}
}

func (m *SpecItemIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecItemIndex.Unmarshal(m, b)
}
func (m *SpecItemIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecItemIndex.Marshal(b, m, deterministic)
}
func (m *SpecItemIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecItemIndex.Merge(m, src)
}
func (m *SpecItemIndex) XXX_Size() int {
	return xxx_messageInfo_SpecItemIndex.Size(m)
}
func (m *SpecItemIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecItemIndex.DiscardUnknown(m)
}

var xxx_messageInfo_SpecItemIndex proto.InternalMessageInfo

func (m *SpecItemIndex) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SpecItemIndex) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *SpecItemIndex) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *SpecItemIndex) GetSpecId() int32 {
	if m != nil {
		return m.SpecId
	}
	return 0
}

func (m *SpecItemIndex) GetSpecValueId() int32 {
	if m != nil {
		return m.SpecValueId
	}
	return 0
}

type SkuResponse struct {
	Entity               *Sku     `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Sku   `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SkuResponse) Reset()         { *m = SkuResponse{} }
func (m *SkuResponse) String() string { return proto.CompactTextString(m) }
func (*SkuResponse) ProtoMessage()    {}
func (*SkuResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccf7b4430f71abf, []int{2}
}

func (m *SkuResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkuResponse.Unmarshal(m, b)
}
func (m *SkuResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkuResponse.Marshal(b, m, deterministic)
}
func (m *SkuResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkuResponse.Merge(m, src)
}
func (m *SkuResponse) XXX_Size() int {
	return xxx_messageInfo_SkuResponse.Size(m)
}
func (m *SkuResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SkuResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SkuResponse proto.InternalMessageInfo

func (m *SkuResponse) GetEntity() *Sku {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *SkuResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *SkuResponse) GetItems() []*Sku {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SkuResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *SkuResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Sku)(nil), "geiqin.srv.pdm.Sku")
	proto.RegisterType((*SpecItemIndex)(nil), "geiqin.srv.pdm.SpecItemIndex")
	proto.RegisterType((*SkuResponse)(nil), "geiqin.srv.pdm.SkuResponse")
}

func init() { proto.RegisterFile("sku.proto", fileDescriptor_eccf7b4430f71abf) }

var fileDescriptor_eccf7b4430f71abf = []byte{
	// 611 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcd, 0x6e, 0xdb, 0x3a,
	0x10, 0x85, 0xaf, 0x6c, 0x4b, 0xb6, 0x46, 0xf9, 0xb9, 0x97, 0xf9, 0xb9, 0x8c, 0x93, 0x00, 0xae,
	0x57, 0x2e, 0x02, 0x78, 0xe1, 0xee, 0xb2, 0x0b, 0xd0, 0x02, 0x35, 0x50, 0x04, 0xa9, 0x04, 0x74,
	0x2b, 0xc8, 0x26, 0xed, 0x12, 0xb2, 0x48, 0x45, 0x24, 0xd3, 0xa6, 0xcf, 0xd0, 0xd7, 0xec, 0xa2,
	0x6f, 0x51, 0x70, 0xa8, 0x38, 0x68, 0xea, 0x4d, 0x77, 0x9e, 0xf3, 0x1d, 0x0f, 0x66, 0x86, 0xc7,
	0x86, 0x58, 0x97, 0x76, 0x5a, 0x37, 0xca, 0x28, 0x72, 0xb0, 0xe6, 0xe2, 0x5e, 0xc8, 0xa9, 0x6e,
	0x1e, 0xa6, 0x35, 0xab, 0x86, 0x7b, 0x4b, 0x55, 0x55, 0x4a, 0x7a, 0x3a, 0x3c, 0xd4, 0x35, 0x5f,
	0x7e, 0x2a, 0x36, 0x96, 0x7b, 0x61, 0xfc, 0xa3, 0x07, 0xdd, 0xac, 0xb4, 0xe4, 0x00, 0x3a, 0x82,
	0xd1, 0x60, 0x14, 0x4c, 0xba, 0x69, 0x47, 0x30, 0xf2, 0x3f, 0xf4, 0x85, 0xe1, 0x55, 0x2e, 0x18,
	0xed, 0xa0, 0x18, 0xb9, 0x72, 0xce, 0xc8, 0x09, 0x44, 0xba, 0xb4, 0xb9, 0x96, 0xb4, 0x3b, 0x0a,
	0x26, 0x71, 0x1a, 0xea, 0xd2, 0x66, 0x92, 0x10, 0xe8, 0xc9, 0xa2, 0xe2, 0xb4, 0x87, 0x22, 0x7e,
	0x26, 0x14, 0xfa, 0x8b, 0xa2, 0x59, 0x2a, 0xc6, 0x69, 0x88, 0xf2, 0x53, 0x49, 0x8e, 0x21, 0xac,
	0x1b, 0xb1, 0xe4, 0x34, 0x1a, 0x05, 0x93, 0x4e, 0xea, 0x0b, 0xf2, 0x0a, 0xf6, 0x54, 0x23, 0xd6,
	0x42, 0xe6, 0x1e, 0xf6, 0x11, 0x26, 0x5e, 0xbb, 0x43, 0xcb, 0x25, 0xc0, 0x52, 0x69, 0xd3, 0x1a,
	0x06, 0x68, 0x88, 0x9d, 0xe2, 0xf1, 0x29, 0x44, 0x5f, 0xb8, 0x58, 0x7f, 0x36, 0x34, 0x46, 0xd4,
	0x56, 0x64, 0x08, 0x83, 0x7b, 0x5b, 0x48, 0x23, 0xcc, 0x23, 0x85, 0x51, 0x30, 0x09, 0xd3, 0x6d,
	0x4d, 0xce, 0x60, 0xa0, 0xd5, 0x86, 0xe5, 0xd2, 0x56, 0x34, 0x41, 0xd6, 0x77, 0xf5, 0xad, 0xad,
	0xc8, 0x18, 0xf6, 0x85, 0x14, 0x26, 0xdf, 0xf2, 0x3d, 0xe4, 0x89, 0x13, 0xb3, 0xd6, 0x73, 0x09,
	0xb0, 0x6a, 0xd4, 0x37, 0x2e, 0xd1, 0xb0, 0x8f, 0x86, 0xd8, 0x2b, 0x0e, 0x9f, 0x42, 0xb4, 0x11,
	0xda, 0x70, 0x46, 0x0f, 0x46, 0xc1, 0x64, 0x90, 0xb6, 0x15, 0xb9, 0x00, 0x50, 0xd6, 0xe4, 0xee,
	0x94, 0x52, 0xd1, 0x43, 0x3c, 0xcf, 0x40, 0x59, 0x93, 0x95, 0xf6, 0x56, 0x91, 0x73, 0x88, 0xdd,
	0x43, 0xe5, 0x8c, 0xeb, 0x25, 0xfd, 0xd7, 0x43, 0x27, 0xbc, 0xe5, 0x7a, 0x49, 0x2e, 0x20, 0x66,
	0x7c, 0x55, 0xd8, 0x8d, 0xeb, 0xfa, 0x1f, 0x76, 0x7d, 0x16, 0xdc, 0x57, 0x17, 0xf6, 0x31, 0xbf,
	0xb7, 0xca, 0x14, 0x94, 0xf8, 0x5d, 0x17, 0xf6, 0xf1, 0xa3, 0xab, 0xf1, 0x7c, 0x0d, 0x2f, 0x0c,
	0x67, 0x79, 0x61, 0xe8, 0x11, 0x36, 0x8e, 0x5b, 0xe5, 0xc6, 0x38, 0x6c, 0x6b, 0xf6, 0x84, 0x8f,
	0x3d, 0x6e, 0x95, 0x1b, 0x43, 0xae, 0x21, 0xc1, 0xa9, 0x1e, 0x5c, 0x7e, 0x34, 0x3d, 0x19, 0x75,
	0x27, 0xc9, 0xec, 0x6c, 0xfa, 0x7b, 0xe0, 0xa6, 0xd9, 0x53, 0xc2, 0x52, 0xd8, 0x86, 0x4d, 0x8f,
	0xbf, 0x07, 0xb0, 0xef, 0xc8, 0xdc, 0xa5, 0x48, 0x32, 0xfe, 0xf5, 0xaf, 0x13, 0x27, 0x18, 0x26,
	0xae, 0x8b, 0x89, 0x9b, 0xa3, 0x1f, 0xa7, 0x11, 0x0c, 0x43, 0x17, 0xa6, 0x91, 0x2b, 0xe7, 0xcc,
	0xbd, 0xda, 0xf3, 0x98, 0x0e, 0x87, 0xfe, 0xd5, 0xb6, 0xd3, 0xcc, 0xd9, 0xf8, 0x67, 0x00, 0x49,
	0x56, 0xda, 0x94, 0xeb, 0x5a, 0x49, 0xcd, 0xc9, 0x15, 0x44, 0xdc, 0xc7, 0xc3, 0x0d, 0x94, 0xcc,
	0x8e, 0xfe, 0xd8, 0xaa, 0xb4, 0x69, 0x6b, 0x21, 0x57, 0x10, 0xd6, 0xc5, 0x9a, 0x37, 0x38, 0x67,
	0x32, 0x3b, 0x79, 0xe9, 0xbd, 0x73, 0x30, 0xf5, 0x1e, 0xf2, 0x1a, 0x42, 0xb7, 0x87, 0xa6, 0x5d,
	0x3c, 0xd7, 0xce, 0xc6, 0xde, 0xe1, 0xfa, 0xf2, 0xa6, 0x51, 0x0d, 0xee, 0xb3, 0xa3, 0xef, 0x3b,
	0x07, 0x53, 0xef, 0x21, 0x13, 0xe8, 0x09, 0xb9, 0x52, 0xb8, 0x5c, 0x32, 0x3b, 0x7e, 0xe9, 0x9d,
	0xcb, 0x95, 0x4a, 0xd1, 0x31, 0x7b, 0x0f, 0x90, 0x95, 0x36, 0xe3, 0xcd, 0x83, 0xfb, 0x89, 0x5c,
	0x43, 0xef, 0x83, 0xd0, 0x86, 0xec, 0x1a, 0x64, 0x78, 0xbe, 0x6b, 0xba, 0xf6, 0x46, 0xe3, 0x7f,
	0x16, 0x11, 0xfe, 0x67, 0xbc, 0xf9, 0x15, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x98, 0xcc, 0xd3, 0x6f,
	0x04, 0x00, 0x00,
}
