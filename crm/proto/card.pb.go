// Code generated by protoc-gen-go. DO NOT EDIT.
// source: card.proto

package geiqin_srv_crm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Card struct {
	Id                   int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	CardBg               string         `protobuf:"bytes,3,opt,name=card_bg,json=cardBg,proto3" json:"card_bg"`
	Term                 int32          `protobuf:"varint,4,opt,name=term,proto3" json:"term"`
	TermDays             int32          `protobuf:"varint,5,opt,name=term_days,json=termDays,proto3" json:"term_days"`
	TermStartDate        string         `protobuf:"bytes,6,opt,name=term_start_date,json=termStartDate,proto3" json:"term_start_date"`
	TermEndDate          string         `protobuf:"bytes,7,opt,name=term_end_date,json=termEndDate,proto3" json:"term_end_date"`
	Method               int32          `protobuf:"varint,8,opt,name=method,proto3" json:"method"`
	Fee                  float32        `protobuf:"fixed32,9,opt,name=fee,proto3" json:"fee"`
	Stock                int32          `protobuf:"varint,10,opt,name=stock,proto3" json:"stock"`
	Code                 string         `protobuf:"bytes,11,opt,name=code,proto3" json:"code"`
	TotalPayment         int32          `protobuf:"varint,12,opt,name=total_payment,json=totalPayment,proto3" json:"total_payment"`
	TotalConsume         float32        `protobuf:"fixed32,13,opt,name=total_consume,json=totalConsume,proto3" json:"total_consume"`
	TotalIntegral        int32          `protobuf:"varint,14,opt,name=total_integral,json=totalIntegral,proto3" json:"total_integral"`
	Description          string         `protobuf:"bytes,15,opt,name=description,proto3" json:"description"`
	Phone                string         `protobuf:"bytes,16,opt,name=phone,proto3" json:"phone"`
	Disabled             bool           `protobuf:"varint,17,opt,name=disabled,proto3" json:"disabled"`
	CreatedAt            string         `protobuf:"bytes,19,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string         `protobuf:"bytes,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CardBenefits         []*CardBenefit `protobuf:"bytes,21,rep,name=card_benefits,json=cardBenefits,proto3" json:"card_benefits,omitempty"`
	Ids                  []int32        `protobuf:"varint,22,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Status               int32          `protobuf:"varint,23,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_95fd8cb6caa913ee, []int{0}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Card) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Card) GetCardBg() string {
	if m != nil {
		return m.CardBg
	}
	return ""
}

func (m *Card) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Card) GetTermDays() int32 {
	if m != nil {
		return m.TermDays
	}
	return 0
}

func (m *Card) GetTermStartDate() string {
	if m != nil {
		return m.TermStartDate
	}
	return ""
}

func (m *Card) GetTermEndDate() string {
	if m != nil {
		return m.TermEndDate
	}
	return ""
}

func (m *Card) GetMethod() int32 {
	if m != nil {
		return m.Method
	}
	return 0
}

func (m *Card) GetFee() float32 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *Card) GetStock() int32 {
	if m != nil {
		return m.Stock
	}
	return 0
}

func (m *Card) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Card) GetTotalPayment() int32 {
	if m != nil {
		return m.TotalPayment
	}
	return 0
}

func (m *Card) GetTotalConsume() float32 {
	if m != nil {
		return m.TotalConsume
	}
	return 0
}

func (m *Card) GetTotalIntegral() int32 {
	if m != nil {
		return m.TotalIntegral
	}
	return 0
}

func (m *Card) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Card) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Card) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *Card) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Card) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Card) GetCardBenefits() []*CardBenefit {
	if m != nil {
		return m.CardBenefits
	}
	return nil
}

func (m *Card) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *Card) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

//查询参数
type CardWhere struct {
	Paged    int32 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	//以下为自定义参数
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status               int32    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardWhere) Reset()         { *m = CardWhere{} }
func (m *CardWhere) String() string { return proto.CompactTextString(m) }
func (*CardWhere) ProtoMessage()    {}
func (*CardWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_95fd8cb6caa913ee, []int{1}
}

func (m *CardWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardWhere.Unmarshal(m, b)
}
func (m *CardWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardWhere.Marshal(b, m, deterministic)
}
func (m *CardWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardWhere.Merge(m, src)
}
func (m *CardWhere) XXX_Size() int {
	return xxx_messageInfo_CardWhere.Size(m)
}
func (m *CardWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_CardWhere.DiscardUnknown(m)
}

var xxx_messageInfo_CardWhere proto.InternalMessageInfo

func (m *CardWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *CardWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *CardWhere) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CardWhere) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

//
type CardResponse struct {
	Entity               *Card    `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Card  `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardResponse) Reset()         { *m = CardResponse{} }
func (m *CardResponse) String() string { return proto.CompactTextString(m) }
func (*CardResponse) ProtoMessage()    {}
func (*CardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95fd8cb6caa913ee, []int{2}
}

func (m *CardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardResponse.Unmarshal(m, b)
}
func (m *CardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardResponse.Marshal(b, m, deterministic)
}
func (m *CardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardResponse.Merge(m, src)
}
func (m *CardResponse) XXX_Size() int {
	return xxx_messageInfo_CardResponse.Size(m)
}
func (m *CardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CardResponse proto.InternalMessageInfo

func (m *CardResponse) GetEntity() *Card {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *CardResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *CardResponse) GetItems() []*Card {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CardResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CardResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Card)(nil), "geiqin.srv.crm.Card")
	proto.RegisterType((*CardWhere)(nil), "geiqin.srv.crm.CardWhere")
	proto.RegisterType((*CardResponse)(nil), "geiqin.srv.crm.CardResponse")
}

func init() { proto.RegisterFile("card.proto", fileDescriptor_95fd8cb6caa913ee) }

var fileDescriptor_95fd8cb6caa913ee = []byte{
	// 678 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xdb, 0x6e, 0x53, 0x3b,
	0x10, 0x3d, 0xb9, 0x36, 0x99, 0x5c, 0xda, 0xfa, 0xf4, 0xe2, 0x93, 0x9e, 0x23, 0x45, 0x39, 0x02,
	0x45, 0x80, 0xf2, 0x10, 0x1e, 0x41, 0xd0, 0x92, 0x54, 0xa8, 0x12, 0x0f, 0xd5, 0x8e, 0x80, 0xc7,
	0xc8, 0xdd, 0x9e, 0x24, 0x86, 0x6c, 0x3b, 0xd8, 0x6e, 0xa5, 0xf4, 0x95, 0x4f, 0xe4, 0x37, 0xf8,
	0x08, 0xe4, 0x71, 0x7a, 0x43, 0x91, 0x90, 0xd2, 0xa7, 0xcc, 0xac, 0x59, 0xb3, 0x66, 0xf6, 0x9e,
	0xb5, 0x15, 0x80, 0x54, 0x58, 0xd9, 0x5b, 0x58, 0xe3, 0x0d, 0x6b, 0x4e, 0x51, 0x7d, 0x53, 0xba,
	0xe7, 0xec, 0x55, 0x2f, 0xb5, 0x59, 0xab, 0x9e, 0x9a, 0x2c, 0x33, 0x3a, 0x56, 0x5b, 0xbb, 0x81,
	0xf9, 0x0e, 0x35, 0x4e, 0x94, 0x8f, 0x50, 0xe7, 0x7b, 0x09, 0x8a, 0x03, 0x61, 0x25, 0x6b, 0x42,
	0x5e, 0x49, 0x9e, 0x6b, 0xe7, 0xba, 0xa5, 0x24, 0xaf, 0x24, 0x63, 0x50, 0xd4, 0x22, 0x43, 0x9e,
	0x6f, 0xe7, 0xba, 0xd5, 0x84, 0x62, 0x76, 0x08, 0x5b, 0x41, 0x61, 0x7c, 0x31, 0xe5, 0x05, 0x82,
	0xcb, 0x24, 0x38, 0x0d, 0x64, 0x8f, 0x36, 0xe3, 0x45, 0x6a, 0xa7, 0x98, 0x1d, 0x41, 0x35, 0xfc,
	0x8e, 0xa5, 0x58, 0x3a, 0x5e, 0xa2, 0x42, 0x25, 0x00, 0x43, 0xb1, 0x74, 0xec, 0x29, 0x6c, 0x53,
	0xd1, 0x79, 0x61, 0xfd, 0x58, 0x0a, 0x8f, 0xbc, 0x4c, 0x8a, 0x8d, 0x00, 0x8f, 0x02, 0x3a, 0x14,
	0x1e, 0x59, 0x07, 0x08, 0x18, 0xa3, 0x96, 0x91, 0xb5, 0x45, 0xac, 0x5a, 0x00, 0x4f, 0xb5, 0x24,
	0xce, 0x01, 0x94, 0x33, 0xf4, 0x33, 0x23, 0x79, 0x85, 0xa6, 0xac, 0x32, 0xb6, 0x03, 0x85, 0x09,
	0x22, 0xaf, 0xb6, 0x73, 0xdd, 0x7c, 0x12, 0x42, 0xb6, 0x07, 0x25, 0xe7, 0x4d, 0xfa, 0x95, 0x03,
	0x11, 0x63, 0x12, 0x96, 0x4f, 0x8d, 0x44, 0x5e, 0x8b, 0x4f, 0x1a, 0x62, 0xf6, 0x3f, 0x34, 0xbc,
	0xf1, 0x62, 0x3e, 0x5e, 0x88, 0x65, 0x86, 0xda, 0xf3, 0x3a, 0x75, 0xd4, 0x09, 0x3c, 0x8f, 0xd8,
	0x1d, 0x29, 0x35, 0xda, 0x5d, 0x66, 0xc8, 0x1b, 0x34, 0x2a, 0x92, 0x06, 0x11, 0x63, 0x4f, 0xa0,
	0x19, 0x49, 0x4a, 0x7b, 0x9c, 0x5a, 0x31, 0xe7, 0x4d, 0x92, 0x8a, 0xad, 0x67, 0x2b, 0x90, 0xb5,
	0xa1, 0x26, 0xd1, 0xa5, 0x56, 0x2d, 0xbc, 0x32, 0x9a, 0x6f, 0xc7, 0xc7, 0xbc, 0x07, 0x85, 0xe5,
	0x17, 0x33, 0xa3, 0x91, 0xef, 0x50, 0x2d, 0x26, 0xac, 0x05, 0x15, 0xa9, 0x9c, 0xb8, 0x98, 0xa3,
	0xe4, 0xbb, 0xed, 0x5c, 0xb7, 0x92, 0xdc, 0xe6, 0xec, 0x3f, 0x80, 0xd4, 0xa2, 0xf0, 0x28, 0xc7,
	0xc2, 0xf3, 0xbf, 0xa9, 0xad, 0xba, 0x42, 0x4e, 0x7c, 0x28, 0x5f, 0x2e, 0xe4, 0x4d, 0x79, 0x2f,
	0x96, 0x57, 0xc8, 0x89, 0x67, 0xc7, 0xd0, 0x88, 0xc7, 0x8e, 0x7e, 0x71, 0x7c, 0xbf, 0x5d, 0xe8,
	0xd6, 0xfa, 0x47, 0xbd, 0x87, 0x16, 0xeb, 0x0d, 0xee, 0x3c, 0x95, 0xd4, 0xef, 0x19, 0xcc, 0x85,
	0x03, 0x28, 0xe9, 0xf8, 0x41, 0xbb, 0xd0, 0x2d, 0x25, 0x21, 0x0c, 0xa7, 0x72, 0x5e, 0xf8, 0x4b,
	0xc7, 0x0f, 0xe3, 0xa9, 0x62, 0xd6, 0xf9, 0x02, 0xd5, 0x20, 0xf3, 0x79, 0x86, 0x96, 0xae, 0xb4,
	0x10, 0x53, 0xbc, 0x31, 0x63, 0x4c, 0x82, 0x9d, 0x42, 0x30, 0x76, 0xea, 0x3a, 0x9a, 0xb2, 0x94,
	0x54, 0x02, 0x30, 0x52, 0xd7, 0x78, 0x6b, 0xd6, 0xc2, 0x3d, 0xb3, 0xde, 0xcd, 0x2a, 0x3e, 0x98,
	0xf5, 0x33, 0x07, 0xf5, 0x30, 0x2c, 0x41, 0xb7, 0x30, 0xda, 0x21, 0x7b, 0x01, 0x65, 0xd4, 0x5e,
	0xf9, 0x25, 0x0d, 0xac, 0xf5, 0xf7, 0xd6, 0x3d, 0x61, 0xb2, 0xe2, 0xb0, 0xe7, 0x71, 0x3b, 0x4b,
	0x3b, 0xd4, 0xfa, 0xfb, 0xbf, 0x93, 0xcf, 0x43, 0x31, 0x2e, 0x6d, 0xd9, 0x33, 0x28, 0x29, 0x8f,
	0x99, 0xe3, 0x05, 0x7a, 0x77, 0xeb, 0x95, 0x23, 0x25, 0x08, 0xa3, 0xb5, 0xc6, 0xd2, 0xba, 0x6b,
	0x84, 0x4f, 0x43, 0x31, 0x89, 0x1c, 0xd6, 0x85, 0xa2, 0xd2, 0x13, 0x43, 0xdf, 0xd5, 0x1a, 0xdd,
	0x33, 0x3d, 0x31, 0x09, 0x31, 0xfa, 0x3f, 0x8a, 0x50, 0x0b, 0x63, 0x46, 0x68, 0xaf, 0x54, 0x8a,
	0xec, 0x0d, 0x94, 0x07, 0x64, 0x01, 0xb6, 0x76, 0x9b, 0xd6, 0xbf, 0x6b, 0x77, 0x5c, 0xbd, 0xab,
	0xce, 0x5f, 0xa1, 0xff, 0x23, 0x79, 0x64, 0xf3, 0xfe, 0x21, 0xce, 0x71, 0xe3, 0xfe, 0x63, 0xa8,
	0x0c, 0x6f, 0x0c, 0xbe, 0x99, 0xc2, 0x5b, 0xd8, 0x3a, 0xd5, 0x8f, 0x11, 0x78, 0x05, 0x85, 0xf7,
	0xe8, 0x37, 0x6c, 0x7e, 0x0d, 0xc5, 0x0f, 0xca, 0x6d, 0xda, 0x7d, 0x02, 0xd5, 0x4f, 0x62, 0xae,
	0xe4, 0x23, 0x24, 0x06, 0x50, 0x1e, 0xa1, 0xb0, 0xe9, 0x8c, 0xfd, 0xb3, 0x8e, 0x49, 0xdf, 0xe0,
	0x9f, 0x44, 0x2e, 0xca, 0xf4, 0xef, 0xf1, 0xf2, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x70,
	0x22, 0x7d, 0x7c, 0x06, 0x00, 0x00,
}
