// Code generated by protoc-gen-go. DO NOT EDIT.
// source: creditRecord.proto

package geiqin_srv_crm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreditRecord struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreditId             int64    `protobuf:"varint,2,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	OrderId              int64    `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	OrderSn              string   `protobuf:"bytes,4,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`
	Type                 int32    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Amount               float32  `protobuf:"fixed32,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Memo                 string   `protobuf:"bytes,7,opt,name=memo,proto3" json:"memo,omitempty"`
	CreatedAt            string   `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Ids                  []int32  `protobuf:"varint,10,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditRecord) Reset()         { *m = CreditRecord{} }
func (m *CreditRecord) String() string { return proto.CompactTextString(m) }
func (*CreditRecord) ProtoMessage()    {}
func (*CreditRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4102d5e33448054, []int{0}
}

func (m *CreditRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditRecord.Unmarshal(m, b)
}
func (m *CreditRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditRecord.Marshal(b, m, deterministic)
}
func (m *CreditRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditRecord.Merge(m, src)
}
func (m *CreditRecord) XXX_Size() int {
	return xxx_messageInfo_CreditRecord.Size(m)
}
func (m *CreditRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditRecord.DiscardUnknown(m)
}

var xxx_messageInfo_CreditRecord proto.InternalMessageInfo

func (m *CreditRecord) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreditRecord) GetCreditId() int64 {
	if m != nil {
		return m.CreditId
	}
	return 0
}

func (m *CreditRecord) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *CreditRecord) GetOrderSn() string {
	if m != nil {
		return m.OrderSn
	}
	return ""
}

func (m *CreditRecord) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CreditRecord) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreditRecord) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *CreditRecord) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *CreditRecord) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *CreditRecord) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

//查询参数
type CreditRecordWhere struct {
	Paged    int32 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	//以下为自定义参数
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Realname             string   `protobuf:"bytes,4,opt,name=realname,proto3" json:"realname,omitempty"`
	Mobile               string   `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditRecordWhere) Reset()         { *m = CreditRecordWhere{} }
func (m *CreditRecordWhere) String() string { return proto.CompactTextString(m) }
func (*CreditRecordWhere) ProtoMessage()    {}
func (*CreditRecordWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4102d5e33448054, []int{1}
}

func (m *CreditRecordWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditRecordWhere.Unmarshal(m, b)
}
func (m *CreditRecordWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditRecordWhere.Marshal(b, m, deterministic)
}
func (m *CreditRecordWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditRecordWhere.Merge(m, src)
}
func (m *CreditRecordWhere) XXX_Size() int {
	return xxx_messageInfo_CreditRecordWhere.Size(m)
}
func (m *CreditRecordWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditRecordWhere.DiscardUnknown(m)
}

var xxx_messageInfo_CreditRecordWhere proto.InternalMessageInfo

func (m *CreditRecordWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *CreditRecordWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *CreditRecordWhere) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreditRecordWhere) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *CreditRecordWhere) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

//
type CreditRecordResponse struct {
	Entity               *CreditRecord   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager          `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*CreditRecord `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error          `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info           `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreditRecordResponse) Reset()         { *m = CreditRecordResponse{} }
func (m *CreditRecordResponse) String() string { return proto.CompactTextString(m) }
func (*CreditRecordResponse) ProtoMessage()    {}
func (*CreditRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4102d5e33448054, []int{2}
}

func (m *CreditRecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditRecordResponse.Unmarshal(m, b)
}
func (m *CreditRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditRecordResponse.Marshal(b, m, deterministic)
}
func (m *CreditRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditRecordResponse.Merge(m, src)
}
func (m *CreditRecordResponse) XXX_Size() int {
	return xxx_messageInfo_CreditRecordResponse.Size(m)
}
func (m *CreditRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreditRecordResponse proto.InternalMessageInfo

func (m *CreditRecordResponse) GetEntity() *CreditRecord {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *CreditRecordResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *CreditRecordResponse) GetItems() []*CreditRecord {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CreditRecordResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CreditRecordResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*CreditRecord)(nil), "geiqin.srv.crm.CreditRecord")
	proto.RegisterType((*CreditRecordWhere)(nil), "geiqin.srv.crm.CreditRecordWhere")
	proto.RegisterType((*CreditRecordResponse)(nil), "geiqin.srv.crm.CreditRecordResponse")
}

func init() {
	proto.RegisterFile("creditRecord.proto", fileDescriptor_e4102d5e33448054)
}

var fileDescriptor_e4102d5e33448054 = []byte{
	// 434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x41, 0x6b, 0xd5, 0x40,
	0x10, 0x36, 0x49, 0x93, 0x26, 0xf3, 0x4a, 0xd1, 0xf1, 0x29, 0xf1, 0xa9, 0x10, 0x1e, 0x1e, 0x02,
	0x42, 0x0e, 0xd1, 0x3f, 0x50, 0x8a, 0x87, 0x5e, 0x44, 0xf6, 0x1d, 0x3c, 0x3e, 0xd2, 0xec, 0xb4,
	0x2e, 0x34, 0xbb, 0x71, 0xb3, 0x2d, 0xb4, 0x37, 0xc1, 0xb3, 0xbf, 0x59, 0x76, 0x36, 0x4a, 0x5a,
	0xa4, 0xde, 0x66, 0xbe, 0xef, 0xdb, 0x9d, 0x6f, 0xbe, 0x4d, 0x00, 0x7b, 0x4b, 0x52, 0x39, 0x41,
	0xbd, 0xb1, 0xb2, 0x19, 0xad, 0x71, 0x06, 0x8f, 0x2f, 0x49, 0x7d, 0x57, 0xba, 0x99, 0xec, 0x4d,
	0xd3, 0xdb, 0x61, 0x73, 0xd4, 0x9b, 0x61, 0x30, 0x3a, 0xb0, 0xdb, 0x1f, 0x31, 0x1c, 0x9d, 0x2e,
	0x0e, 0xe1, 0x31, 0xc4, 0x4a, 0x96, 0x51, 0x15, 0xd5, 0x89, 0x88, 0x95, 0xc4, 0xd7, 0x50, 0x84,
	0x4b, 0xf7, 0x4a, 0x96, 0x31, 0xc3, 0x79, 0x00, 0xce, 0x24, 0xbe, 0x82, 0xdc, 0x58, 0x49, 0xd6,
	0x73, 0x09, 0x73, 0x87, 0xdc, 0x2f, 0xa9, 0x49, 0x97, 0x07, 0x55, 0x54, 0x17, 0x33, 0xb5, 0xd3,
	0x88, 0x70, 0xe0, 0x6e, 0x47, 0x2a, 0xd3, 0x2a, 0xaa, 0x53, 0xc1, 0x35, 0xbe, 0x84, 0xac, 0x1b,
	0xcc, 0xb5, 0x76, 0x65, 0x56, 0x45, 0x75, 0x2c, 0xe6, 0xce, 0x6b, 0x07, 0x1a, 0x4c, 0x79, 0xc8,
	0x57, 0x70, 0x8d, 0x6f, 0x01, 0x7a, 0x4b, 0x9d, 0x23, 0xb9, 0xef, 0x5c, 0x99, 0x33, 0x53, 0xcc,
	0xc8, 0x89, 0xf3, 0xf4, 0xf5, 0x28, 0xff, 0xd0, 0x45, 0xa0, 0x67, 0xe4, 0xc4, 0xe1, 0x53, 0x48,
	0x94, 0x9c, 0x4a, 0xa8, 0x92, 0x3a, 0x15, 0xbe, 0xdc, 0xfe, 0x8a, 0xe0, 0xd9, 0x32, 0x83, 0xaf,
	0xdf, 0xc8, 0x12, 0xae, 0x21, 0x1d, 0xbb, 0x4b, 0x0a, 0x59, 0xa4, 0x22, 0x34, 0x3e, 0x0e, 0x5f,
	0xec, 0x27, 0x75, 0x47, 0x1c, 0x47, 0x2a, 0x72, 0x0f, 0xec, 0xd4, 0x1d, 0x79, 0xb3, 0xba, 0x1b,
	0x88, 0xa3, 0x28, 0x04, 0xd7, 0xb8, 0x81, 0xdc, 0x52, 0x77, 0xc5, 0x78, 0xc8, 0xe1, 0x6f, 0xef,
	0x97, 0x1e, 0xcc, 0xb9, 0xba, 0x0a, 0x51, 0x14, 0x62, 0xee, 0xb6, 0x3f, 0x63, 0x58, 0x2f, 0x0d,
	0x09, 0x9a, 0x46, 0xa3, 0x27, 0xc2, 0x8f, 0x90, 0x91, 0x76, 0xca, 0xdd, 0xb2, 0xa9, 0x55, 0xfb,
	0xa6, 0xb9, 0xff, 0xb8, 0xcd, 0xbd, 0x53, 0xb3, 0x16, 0xdf, 0x87, 0x4d, 0x2c, 0xfb, 0x5d, 0xb5,
	0x2f, 0x1e, 0x1e, 0xfa, 0xe2, 0xc9, 0xb0, 0xa0, 0xc5, 0x16, 0x52, 0xe5, 0x68, 0x98, 0xca, 0xa4,
	0x4a, 0xfe, 0x3b, 0x21, 0x48, 0xfd, 0x00, 0xb2, 0xd6, 0x58, 0x5e, 0xf0, 0x1f, 0x03, 0x3e, 0x79,
	0x52, 0x04, 0x0d, 0xd6, 0x70, 0xa0, 0xf4, 0x85, 0xe1, 0x95, 0x57, 0xed, 0xfa, 0xa1, 0xf6, 0x4c,
	0x5f, 0x18, 0xc1, 0x8a, 0x96, 0xe0, 0xf9, 0xf2, 0x7b, 0xde, 0x91, 0xbd, 0x51, 0x3d, 0xe1, 0x67,
	0xc8, 0x4e, 0xf9, 0xb1, 0xf1, 0x51, 0x73, 0x9b, 0x77, 0x8f, 0x5a, 0x9f, 0x23, 0xdd, 0x3e, 0x39,
	0xcf, 0xf8, 0x4f, 0xf8, 0xf0, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x8f, 0x1e, 0x5a, 0x3d, 0x03,
	0x00, 0x00,
}
