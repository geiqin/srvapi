// Code generated by protoc-gen-go. DO NOT EDIT.
// source: credit.proto

package geiqin_srv_crm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Credit struct {
	Id                   int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerId           int64           `protobuf:"varint,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Status               bool            `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	UpperLimit           float32         `protobuf:"fixed32,4,opt,name=upper_limit,json=upperLimit,proto3" json:"upper_limit,omitempty"`
	Balance              float32         `protobuf:"fixed32,5,opt,name=balance,proto3" json:"balance,omitempty"`
	CreatedAt            string          `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string          `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Customer             *Customer       `protobuf:"bytes,8,opt,name=customer,proto3" json:"customer,omitempty"`
	Ids                  []int64         `protobuf:"varint,9,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Name                 string          `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Realname             string          `protobuf:"bytes,11,opt,name=realname,proto3" json:"realname,omitempty"`
	Mobile               string          `protobuf:"bytes,12,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Contacts             string          `protobuf:"bytes,13,opt,name=contacts,proto3" json:"contacts,omitempty"`
	Cid                  int64           `protobuf:"varint,14,opt,name=cid,proto3" json:"cid,omitempty"`
	CreditRecords        []*CreditRecord `protobuf:"bytes,15,rep,name=credit_records,json=creditRecords,proto3" json:"credit_records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Credit) Reset()         { *m = Credit{} }
func (m *Credit) String() string { return proto.CompactTextString(m) }
func (*Credit) ProtoMessage()    {}
func (*Credit) Descriptor() ([]byte, []int) {
	return fileDescriptor_c62ac036f6f099d2, []int{0}
}

func (m *Credit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credit.Unmarshal(m, b)
}
func (m *Credit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credit.Marshal(b, m, deterministic)
}
func (m *Credit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credit.Merge(m, src)
}
func (m *Credit) XXX_Size() int {
	return xxx_messageInfo_Credit.Size(m)
}
func (m *Credit) XXX_DiscardUnknown() {
	xxx_messageInfo_Credit.DiscardUnknown(m)
}

var xxx_messageInfo_Credit proto.InternalMessageInfo

func (m *Credit) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Credit) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Credit) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *Credit) GetUpperLimit() float32 {
	if m != nil {
		return m.UpperLimit
	}
	return 0
}

func (m *Credit) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Credit) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Credit) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Credit) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *Credit) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *Credit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Credit) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *Credit) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *Credit) GetContacts() string {
	if m != nil {
		return m.Contacts
	}
	return ""
}

func (m *Credit) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *Credit) GetCreditRecords() []*CreditRecord {
	if m != nil {
		return m.CreditRecords
	}
	return nil
}

//查询参数
type CreditWhere struct {
	Paged    int32 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	//以下为自定义参数
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Realname             string   `protobuf:"bytes,4,opt,name=realname,proto3" json:"realname,omitempty"`
	Mobile               string   `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Type                 int32    `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditWhere) Reset()         { *m = CreditWhere{} }
func (m *CreditWhere) String() string { return proto.CompactTextString(m) }
func (*CreditWhere) ProtoMessage()    {}
func (*CreditWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_c62ac036f6f099d2, []int{1}
}

func (m *CreditWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditWhere.Unmarshal(m, b)
}
func (m *CreditWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditWhere.Marshal(b, m, deterministic)
}
func (m *CreditWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditWhere.Merge(m, src)
}
func (m *CreditWhere) XXX_Size() int {
	return xxx_messageInfo_CreditWhere.Size(m)
}
func (m *CreditWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditWhere.DiscardUnknown(m)
}

var xxx_messageInfo_CreditWhere proto.InternalMessageInfo

func (m *CreditWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *CreditWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *CreditWhere) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreditWhere) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *CreditWhere) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *CreditWhere) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

//
type CreditResponse struct {
	Entity               *Credit   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager    `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Credit `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info     `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreditResponse) Reset()         { *m = CreditResponse{} }
func (m *CreditResponse) String() string { return proto.CompactTextString(m) }
func (*CreditResponse) ProtoMessage()    {}
func (*CreditResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c62ac036f6f099d2, []int{2}
}

func (m *CreditResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditResponse.Unmarshal(m, b)
}
func (m *CreditResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditResponse.Marshal(b, m, deterministic)
}
func (m *CreditResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditResponse.Merge(m, src)
}
func (m *CreditResponse) XXX_Size() int {
	return xxx_messageInfo_CreditResponse.Size(m)
}
func (m *CreditResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreditResponse proto.InternalMessageInfo

func (m *CreditResponse) GetEntity() *Credit {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *CreditResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *CreditResponse) GetItems() []*Credit {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CreditResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CreditResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Credit)(nil), "geiqin.srv.crm.Credit")
	proto.RegisterType((*CreditWhere)(nil), "geiqin.srv.crm.CreditWhere")
	proto.RegisterType((*CreditResponse)(nil), "geiqin.srv.crm.CreditResponse")
}

func init() {
	proto.RegisterFile("credit.proto", fileDescriptor_c62ac036f6f099d2)
}

var fileDescriptor_c62ac036f6f099d2 = []byte{
	// 552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x6e, 0xd4, 0x30,
	0x10, 0x26, 0x9b, 0x4d, 0xba, 0x3b, 0x69, 0x17, 0x34, 0x2a, 0x95, 0xb5, 0xe5, 0x27, 0xda, 0x53,
	0x24, 0x50, 0x0e, 0x81, 0x3b, 0x2a, 0x05, 0xa1, 0x4a, 0x1c, 0x90, 0xf7, 0xc0, 0x71, 0x95, 0x3a,
	0xd3, 0xd6, 0xd2, 0x26, 0x0e, 0x8e, 0xb7, 0x52, 0xfb, 0x2c, 0xbc, 0x12, 0x8f, 0xc0, 0x4b, 0xf0,
	0x04, 0xc8, 0x76, 0x52, 0xb5, 0xa5, 0x0b, 0x07, 0x6e, 0x33, 0xdf, 0xf7, 0x79, 0x3c, 0x9f, 0xbf,
	0x28, 0xb0, 0x2b, 0x34, 0x55, 0xd2, 0xe4, 0xad, 0x56, 0x46, 0xe1, 0xec, 0x9c, 0xe4, 0x37, 0xd9,
	0xe4, 0x9d, 0xbe, 0xcc, 0x85, 0xae, 0xe7, 0xbb, 0x42, 0xd5, 0xb5, 0x6a, 0x3c, 0x3b, 0x9f, 0x89,
	0x4d, 0x67, 0x54, 0x4d, 0xba, 0xef, 0xd1, 0x9f, 0xe5, 0x24, 0x94, 0xae, 0x3c, 0xb6, 0xf8, 0x11,
	0x42, 0x7c, 0xec, 0x60, 0x9c, 0xc1, 0x48, 0x56, 0x2c, 0x48, 0x83, 0x2c, 0xe4, 0x23, 0x59, 0xe1,
	0x4b, 0x48, 0x86, 0x01, 0x2b, 0x59, 0xb1, 0x91, 0x23, 0x60, 0x80, 0x4e, 0x2a, 0x3c, 0x80, 0xb8,
	0x33, 0xa5, 0xd9, 0x74, 0x2c, 0x4c, 0x83, 0x6c, 0xc2, 0xfb, 0xce, 0x1e, 0xdc, 0xb4, 0x2d, 0xe9,
	0xd5, 0x5a, 0xd6, 0xd2, 0xb0, 0x71, 0x1a, 0x64, 0x23, 0x0e, 0x0e, 0xfa, 0x6c, 0x11, 0x64, 0xb0,
	0x73, 0x5a, 0xae, 0xcb, 0x46, 0x10, 0x8b, 0x1c, 0x39, 0xb4, 0xf8, 0x1c, 0x40, 0x68, 0x2a, 0x0d,
	0x55, 0xab, 0xd2, 0xb0, 0x38, 0x0d, 0xb2, 0x29, 0x9f, 0xf6, 0xc8, 0x91, 0xb1, 0xf4, 0xa6, 0xad,
	0x06, 0x7a, 0xc7, 0xd3, 0x3d, 0x72, 0x64, 0xf0, 0x2d, 0x4c, 0x86, 0xf5, 0xd8, 0x24, 0x0d, 0xb2,
	0xa4, 0x60, 0xf9, 0xdd, 0x17, 0xca, 0x8f, 0x7b, 0x9e, 0xdf, 0x28, 0xf1, 0x09, 0x84, 0xb2, 0xea,
	0xd8, 0x34, 0x0d, 0xb3, 0x90, 0xdb, 0x12, 0x11, 0xc6, 0x4d, 0x59, 0x13, 0x03, 0x77, 0x81, 0xab,
	0x71, 0x0e, 0x13, 0x4d, 0xe5, 0xda, 0xe1, 0x89, 0xc3, 0x6f, 0x7a, 0xfb, 0x10, 0xb5, 0x3a, 0x95,
	0x6b, 0x62, 0xbb, 0x8e, 0xe9, 0x3b, 0x7b, 0x46, 0xa8, 0xc6, 0x94, 0xc2, 0x74, 0x6c, 0xcf, 0x9f,
	0x19, 0x7a, 0x7b, 0xab, 0x90, 0x15, 0x9b, 0xb9, 0x57, 0xb5, 0x25, 0x1e, 0xc3, 0xcc, 0x07, 0xb4,
	0xd2, 0x2e, 0xa1, 0x8e, 0x3d, 0x4e, 0xc3, 0x2c, 0x29, 0x9e, 0xfd, 0xe1, 0xe1, 0x56, 0x8c, 0x7c,
	0xef, 0x76, 0xa8, 0xdd, 0xe2, 0x7b, 0x00, 0x89, 0xe7, 0xbf, 0x5e, 0x90, 0x26, 0xdc, 0x87, 0xa8,
	0x2d, 0xcf, 0xc9, 0xe7, 0x1a, 0x71, 0xdf, 0xe0, 0x21, 0x4c, 0x6d, 0xb1, 0xea, 0xe4, 0x35, 0xb9,
	0x60, 0x23, 0x3e, 0xb1, 0xc0, 0x52, 0x5e, 0xd3, 0x8d, 0xfb, 0x70, 0x8b, 0xfb, 0xf1, 0x56, 0xf7,
	0xd1, 0x1d, 0xf7, 0x08, 0x63, 0x73, 0xd5, 0x92, 0x4b, 0x31, 0xe2, 0xae, 0x5e, 0xfc, 0x0a, 0x60,
	0x36, 0xac, 0xdf, 0xb5, 0xaa, 0xe9, 0x08, 0x73, 0x88, 0xa9, 0x31, 0xd2, 0x5c, 0xb9, 0x15, 0x93,
	0xe2, 0x60, 0x8b, 0xdd, 0x5e, 0x85, 0xaf, 0xbc, 0x23, 0xed, 0xf6, 0x4e, 0x8a, 0xa7, 0xf7, 0xe5,
	0x5f, 0x2c, 0xe9, 0x8d, 0x6a, 0x7c, 0x0d, 0x91, 0x34, 0x54, 0xdb, 0x2f, 0x34, 0xfc, 0xcb, 0x6c,
	0x2f, 0xb2, 0xa3, 0x49, 0x6b, 0xa5, 0x9d, 0xc5, 0x07, 0x46, 0x7f, 0xb4, 0x24, 0xf7, 0x1a, 0xcc,
	0x60, 0x2c, 0x9b, 0x33, 0xe5, 0x4c, 0x27, 0xc5, 0xfe, 0x7d, 0xed, 0x49, 0x73, 0xa6, 0xb8, 0x53,
	0x14, 0x3f, 0x03, 0xd8, 0xf3, 0x17, 0x2d, 0x49, 0x5f, 0x4a, 0x41, 0xf8, 0x0e, 0xc2, 0x25, 0x19,
	0xdc, 0xb2, 0xce, 0xfc, 0xc5, 0xb6, 0xc4, 0xfd, 0x93, 0x2d, 0x1e, 0xe1, 0x7b, 0x88, 0x3f, 0x90,
	0x29, 0xe5, 0xfa, 0x3f, 0x66, 0x7c, 0x82, 0x78, 0x49, 0xa5, 0x16, 0x17, 0x78, 0xf8, 0xb0, 0xd6,
	0x7d, 0x41, 0xff, 0x1e, 0x74, 0x1a, 0xbb, 0x5f, 0xc9, 0x9b, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xb0, 0x5e, 0x19, 0x5e, 0x9c, 0x04, 0x00, 0x00,
}
