// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fanWeixin.proto

package geiqin_srv_crm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FanWeixin struct {
	Id                   int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	AppId                string    `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id"`
	OpenId               string    `protobuf:"bytes,3,opt,name=open_id,json=openId,proto3" json:"open_id"`
	UnionId              string    `protobuf:"bytes,4,opt,name=union_id,json=unionId,proto3" json:"union_id"`
	Nick                 string    `protobuf:"bytes,5,opt,name=nick,proto3" json:"nick"`
	Avatar               string    `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar"`
	Sex                  string    `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex"`
	Province             string    `protobuf:"bytes,8,opt,name=province,proto3" json:"province"`
	City                 string    `protobuf:"bytes,9,opt,name=city,proto3" json:"city"`
	Country              string    `protobuf:"bytes,10,opt,name=country,proto3" json:"country"`
	Followed             bool      `protobuf:"varint,11,opt,name=followed,proto3" json:"followed"`
	FollowedAt           string    `protobuf:"bytes,12,opt,name=followed_at,json=followedAt,proto3" json:"followed_at"`
	CustomerId           int64     `protobuf:"varint,13,opt,name=customer_id,json=customerId,proto3" json:"customer_id"`
	RelatedAt            string    `protobuf:"bytes,14,opt,name=related_at,json=relatedAt,proto3" json:"related_at"`
	CreatedAt            string    `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string    `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Customer             *Customer `protobuf:"bytes,17,opt,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FanWeixin) Reset()         { *m = FanWeixin{} }
func (m *FanWeixin) String() string { return proto.CompactTextString(m) }
func (*FanWeixin) ProtoMessage()    {}
func (*FanWeixin) Descriptor() ([]byte, []int) {
	return fileDescriptor_750d834c580d7f43, []int{0}
}

func (m *FanWeixin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FanWeixin.Unmarshal(m, b)
}
func (m *FanWeixin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FanWeixin.Marshal(b, m, deterministic)
}
func (m *FanWeixin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FanWeixin.Merge(m, src)
}
func (m *FanWeixin) XXX_Size() int {
	return xxx_messageInfo_FanWeixin.Size(m)
}
func (m *FanWeixin) XXX_DiscardUnknown() {
	xxx_messageInfo_FanWeixin.DiscardUnknown(m)
}

var xxx_messageInfo_FanWeixin proto.InternalMessageInfo

func (m *FanWeixin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FanWeixin) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *FanWeixin) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *FanWeixin) GetUnionId() string {
	if m != nil {
		return m.UnionId
	}
	return ""
}

func (m *FanWeixin) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *FanWeixin) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *FanWeixin) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *FanWeixin) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *FanWeixin) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *FanWeixin) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *FanWeixin) GetFollowed() bool {
	if m != nil {
		return m.Followed
	}
	return false
}

func (m *FanWeixin) GetFollowedAt() string {
	if m != nil {
		return m.FollowedAt
	}
	return ""
}

func (m *FanWeixin) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *FanWeixin) GetRelatedAt() string {
	if m != nil {
		return m.RelatedAt
	}
	return ""
}

func (m *FanWeixin) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *FanWeixin) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *FanWeixin) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

//
type FanWeixinResponse struct {
	Entity               *FanWeixin   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager       `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*FanWeixin `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error       `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info        `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FanWeixinResponse) Reset()         { *m = FanWeixinResponse{} }
func (m *FanWeixinResponse) String() string { return proto.CompactTextString(m) }
func (*FanWeixinResponse) ProtoMessage()    {}
func (*FanWeixinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_750d834c580d7f43, []int{1}
}

func (m *FanWeixinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FanWeixinResponse.Unmarshal(m, b)
}
func (m *FanWeixinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FanWeixinResponse.Marshal(b, m, deterministic)
}
func (m *FanWeixinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FanWeixinResponse.Merge(m, src)
}
func (m *FanWeixinResponse) XXX_Size() int {
	return xxx_messageInfo_FanWeixinResponse.Size(m)
}
func (m *FanWeixinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FanWeixinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FanWeixinResponse proto.InternalMessageInfo

func (m *FanWeixinResponse) GetEntity() *FanWeixin {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *FanWeixinResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *FanWeixinResponse) GetItems() []*FanWeixin {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *FanWeixinResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *FanWeixinResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*FanWeixin)(nil), "geiqin.srv.crm.FanWeixin")
	proto.RegisterType((*FanWeixinResponse)(nil), "geiqin.srv.crm.FanWeixinResponse")
}

func init() { proto.RegisterFile("fanWeixin.proto", fileDescriptor_750d834c580d7f43) }

var fileDescriptor_750d834c580d7f43 = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x86, 0xd9, 0x6c, 0xb2, 0x49, 0x26, 0x25, 0x4d, 0x47, 0x14, 0xdc, 0x48, 0x88, 0x90, 0x53,
	0x24, 0xa4, 0x20, 0x02, 0x2f, 0x10, 0x4a, 0x81, 0xdc, 0xd0, 0x56, 0xa8, 0xc7, 0xca, 0xec, 0x4e,
	0x5a, 0x8b, 0xc4, 0x36, 0x5e, 0x27, 0xb4, 0x47, 0x9e, 0x94, 0x07, 0xe1, 0x82, 0x6c, 0xef, 0x2e,
	0x22, 0x50, 0xc4, 0x21, 0xb7, 0x99, 0xff, 0xff, 0xfd, 0xed, 0x64, 0x6c, 0x05, 0x0e, 0x97, 0x5c,
	0x5e, 0x90, 0xb8, 0x11, 0x72, 0xaa, 0x8d, 0xb2, 0x0a, 0xfb, 0x57, 0x24, 0xbe, 0x08, 0x39, 0x2d,
	0xcc, 0x76, 0x9a, 0x99, 0xf5, 0xf0, 0x20, 0x53, 0xeb, 0xb5, 0x2a, 0xdd, 0x61, 0x3f, 0xdb, 0x14,
	0x56, 0xad, 0xc9, 0x84, 0x7e, 0xfc, 0x3d, 0x86, 0xee, 0xdb, 0x8a, 0x80, 0x7d, 0x68, 0x88, 0x9c,
	0x45, 0xa3, 0x68, 0x12, 0xa7, 0x0d, 0x91, 0xe3, 0x31, 0x24, 0x5c, 0xeb, 0x4b, 0x91, 0xb3, 0xc6,
	0x28, 0x9a, 0x74, 0xd3, 0x16, 0xd7, 0x7a, 0x91, 0xe3, 0x23, 0x68, 0x2b, 0x4d, 0xd2, 0xe9, 0xb1,
	0xd7, 0x13, 0xd7, 0x2e, 0x72, 0x3c, 0x81, 0xce, 0x46, 0x0a, 0xe5, 0x9d, 0xa6, 0x77, 0xda, 0xbe,
	0x5f, 0xe4, 0x88, 0xd0, 0x94, 0x22, 0xfb, 0xcc, 0x5a, 0x5e, 0xf6, 0x35, 0x3e, 0x84, 0x84, 0x6f,
	0xb9, 0xe5, 0x86, 0x25, 0x01, 0x13, 0x3a, 0x1c, 0x40, 0x5c, 0xd0, 0x0d, 0x6b, 0x7b, 0xd1, 0x95,
	0x38, 0x84, 0x8e, 0x36, 0x6a, 0x2b, 0x64, 0x46, 0xac, 0xe3, 0xe5, 0xba, 0x77, 0xe4, 0x4c, 0xd8,
	0x5b, 0xd6, 0x0d, 0x64, 0x57, 0x23, 0x83, 0x76, 0xa6, 0x36, 0xd2, 0x9a, 0x5b, 0x06, 0x61, 0x8e,
	0xb2, 0x75, 0xa4, 0xa5, 0x5a, 0xad, 0xd4, 0x57, 0xca, 0x59, 0x6f, 0x14, 0x4d, 0x3a, 0x69, 0xdd,
	0xe3, 0x13, 0xe8, 0x55, 0xf5, 0x25, 0xb7, 0xec, 0xc0, 0x9f, 0x84, 0x4a, 0x9a, 0x5b, 0x17, 0xa8,
	0xf6, 0xe7, 0x7e, 0xe2, 0x7d, 0xbf, 0x28, 0xa8, 0xa4, 0x45, 0x8e, 0x8f, 0x01, 0x0c, 0xad, 0xb8,
	0x0d, 0x80, 0xbe, 0x07, 0x74, 0x4b, 0x65, 0x6e, 0x9d, 0x9d, 0x19, 0xaa, 0xec, 0xc3, 0x60, 0x97,
	0x4a, 0xb0, 0x37, 0x3a, 0xaf, 0xec, 0x41, 0xb0, 0x4b, 0x65, 0x6e, 0xf1, 0x15, 0x74, 0xaa, 0x4f,
	0xb1, 0xa3, 0x51, 0x34, 0xe9, 0xcd, 0xd8, 0xf4, 0xf7, 0xcb, 0x9e, 0x9e, 0x96, 0x7e, 0x5a, 0x27,
	0xc7, 0x3f, 0x22, 0x38, 0xaa, 0x6f, 0x38, 0xa5, 0x42, 0x2b, 0x59, 0x10, 0xbe, 0x80, 0x84, 0xa4,
	0x75, 0x6b, 0x8b, 0x3c, 0xe9, 0x64, 0x97, 0xf4, 0xeb, 0x48, 0x19, 0xc4, 0x67, 0xd0, 0xd2, 0xfc,
	0x8a, 0x8c, 0x7f, 0x0b, 0xbd, 0xd9, 0xf1, 0xee, 0x89, 0x0f, 0xce, 0x4c, 0x43, 0x06, 0x9f, 0x43,
	0x4b, 0x58, 0x5a, 0x17, 0x2c, 0x1e, 0xc5, 0xff, 0xc6, 0x87, 0x9c, 0xa3, 0x93, 0x31, 0xca, 0xf8,
	0x77, 0xf3, 0x17, 0xfa, 0x99, 0x33, 0xd3, 0x90, 0xc1, 0x09, 0x34, 0x85, 0x5c, 0x2a, 0xff, 0x98,
	0x7a, 0xb3, 0x07, 0xbb, 0xd9, 0x85, 0x5c, 0xaa, 0xd4, 0x27, 0x66, 0xdf, 0x62, 0x18, 0xd4, 0xdf,
	0x3a, 0x27, 0xb3, 0x15, 0x19, 0xe1, 0x7b, 0x48, 0x4e, 0xfd, 0xd2, 0xf1, 0xee, 0xb9, 0x86, 0x4f,
	0xef, 0x1e, 0xb9, 0x5c, 0xe2, 0xf8, 0x9e, 0x23, 0x7d, 0xf4, 0xf7, 0xb3, 0x0f, 0xd2, 0x1b, 0x5a,
	0xd1, 0x1e, 0x48, 0x67, 0x10, 0xbf, 0x23, 0xbb, 0x8f, 0x81, 0xce, 0x89, 0x9b, 0xec, 0xfa, 0x4f,
	0xd2, 0x6b, 0x5e, 0xd0, 0xc5, 0x35, 0x19, 0xfa, 0x2f, 0xd2, 0xa7, 0xc4, 0xff, 0xd5, 0xbc, 0xfc,
	0x19, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x02, 0x8a, 0x86, 0xab, 0x04, 0x00, 0x00,
}
