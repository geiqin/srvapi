// Code generated by protoc-gen-go. DO NOT EDIT.
// source: integralSetting.proto

package geiqin_srv_crm_integral

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IntegralSetting struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	EffectiveType        int32    `protobuf:"varint,3,opt,name=effective_type,json=effectiveType,proto3" json:"effective_type,omitempty"`
	ExpireYear           int32    `protobuf:"varint,4,opt,name=expire_year,json=expireYear,proto3" json:"expire_year,omitempty"`
	ExpireDate           string   `protobuf:"bytes,5,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
	ExpireAt             string   `protobuf:"bytes,6,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	ProtectDays          int32    `protobuf:"varint,7,opt,name=protect_days,json=protectDays,proto3" json:"protect_days,omitempty"`
	IntegralName         string   `protobuf:"bytes,8,opt,name=integral_name,json=integralName,proto3" json:"integral_name,omitempty"`
	IntegralRatio        int32    `protobuf:"varint,9,opt,name=integral_ratio,json=integralRatio,proto3" json:"integral_ratio,omitempty"`
	IsCashExchange       bool     `protobuf:"varint,10,opt,name=is_cash_exchange,json=isCashExchange,proto3" json:"is_cash_exchange,omitempty"`
	CashExchangeMoney    float32  `protobuf:"fixed32,11,opt,name=cash_exchange_money,json=cashExchangeMoney,proto3" json:"cash_exchange_money,omitempty"`
	CashExchangeLimit    float32  `protobuf:"fixed32,12,opt,name=cash_exchange_limit,json=cashExchangeLimit,proto3" json:"cash_exchange_limit,omitempty"`
	CreatedAt            string   `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntegralSetting) Reset()         { *m = IntegralSetting{} }
func (m *IntegralSetting) String() string { return proto.CompactTextString(m) }
func (*IntegralSetting) ProtoMessage()    {}
func (*IntegralSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_1003687a7a508c1a, []int{0}
}

func (m *IntegralSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntegralSetting.Unmarshal(m, b)
}
func (m *IntegralSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntegralSetting.Marshal(b, m, deterministic)
}
func (m *IntegralSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntegralSetting.Merge(m, src)
}
func (m *IntegralSetting) XXX_Size() int {
	return xxx_messageInfo_IntegralSetting.Size(m)
}
func (m *IntegralSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_IntegralSetting.DiscardUnknown(m)
}

var xxx_messageInfo_IntegralSetting proto.InternalMessageInfo

func (m *IntegralSetting) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *IntegralSetting) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *IntegralSetting) GetEffectiveType() int32 {
	if m != nil {
		return m.EffectiveType
	}
	return 0
}

func (m *IntegralSetting) GetExpireYear() int32 {
	if m != nil {
		return m.ExpireYear
	}
	return 0
}

func (m *IntegralSetting) GetExpireDate() string {
	if m != nil {
		return m.ExpireDate
	}
	return ""
}

func (m *IntegralSetting) GetExpireAt() string {
	if m != nil {
		return m.ExpireAt
	}
	return ""
}

func (m *IntegralSetting) GetProtectDays() int32 {
	if m != nil {
		return m.ProtectDays
	}
	return 0
}

func (m *IntegralSetting) GetIntegralName() string {
	if m != nil {
		return m.IntegralName
	}
	return ""
}

func (m *IntegralSetting) GetIntegralRatio() int32 {
	if m != nil {
		return m.IntegralRatio
	}
	return 0
}

func (m *IntegralSetting) GetIsCashExchange() bool {
	if m != nil {
		return m.IsCashExchange
	}
	return false
}

func (m *IntegralSetting) GetCashExchangeMoney() float32 {
	if m != nil {
		return m.CashExchangeMoney
	}
	return 0
}

func (m *IntegralSetting) GetCashExchangeLimit() float32 {
	if m != nil {
		return m.CashExchangeLimit
	}
	return 0
}

func (m *IntegralSetting) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *IntegralSetting) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type IntegralSettingResponse struct {
	Entity               *IntegralSetting   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager             `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*IntegralSetting `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error             `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info              `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *IntegralSettingResponse) Reset()         { *m = IntegralSettingResponse{} }
func (m *IntegralSettingResponse) String() string { return proto.CompactTextString(m) }
func (*IntegralSettingResponse) ProtoMessage()    {}
func (*IntegralSettingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1003687a7a508c1a, []int{1}
}

func (m *IntegralSettingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntegralSettingResponse.Unmarshal(m, b)
}
func (m *IntegralSettingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntegralSettingResponse.Marshal(b, m, deterministic)
}
func (m *IntegralSettingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntegralSettingResponse.Merge(m, src)
}
func (m *IntegralSettingResponse) XXX_Size() int {
	return xxx_messageInfo_IntegralSettingResponse.Size(m)
}
func (m *IntegralSettingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IntegralSettingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IntegralSettingResponse proto.InternalMessageInfo

func (m *IntegralSettingResponse) GetEntity() *IntegralSetting {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *IntegralSettingResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *IntegralSettingResponse) GetItems() []*IntegralSetting {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *IntegralSettingResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *IntegralSettingResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*IntegralSetting)(nil), "geiqin.srv.crm.integral.IntegralSetting")
	proto.RegisterType((*IntegralSettingResponse)(nil), "geiqin.srv.crm.integral.IntegralSettingResponse")
}

func init() {
	proto.RegisterFile("integralSetting.proto", fileDescriptor_1003687a7a508c1a)
}

var fileDescriptor_1003687a7a508c1a = []byte{
	// 545 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x95, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0x86, 0x3f, 0xc7, 0x4d, 0x9a, 0x8c, 0xd3, 0xf4, 0x63, 0xf9, 0xe9, 0xaa, 0xa8, 0x60, 0x8a,
	0x90, 0x7c, 0x64, 0x41, 0xe0, 0x18, 0x51, 0xd1, 0x08, 0x21, 0x01, 0xaa, 0x6c, 0x4e, 0x38, 0xb2,
	0x16, 0x7b, 0xe2, 0x2c, 0x8a, 0x7f, 0x58, 0x0f, 0x51, 0x7d, 0x01, 0xdc, 0x14, 0xd7, 0xc5, 0x05,
	0x20, 0xef, 0xda, 0x55, 0x93, 0xaa, 0x55, 0x39, 0x08, 0x87, 0x7e, 0xe7, 0xd9, 0x79, 0x77, 0x66,
	0x67, 0xd7, 0x70, 0x5f, 0xe6, 0x84, 0xa9, 0x12, 0xcb, 0x10, 0x89, 0x64, 0x9e, 0xfa, 0xa5, 0x2a,
	0xa8, 0x60, 0x07, 0x29, 0xca, 0xef, 0x32, 0xf7, 0x2b, 0xb5, 0xf2, 0x63, 0x95, 0xf9, 0x1d, 0x75,
	0x38, 0x8e, 0x8b, 0x2c, 0x2b, 0x72, 0x83, 0x1d, 0xff, 0xb6, 0x61, 0xff, 0xfd, 0x7a, 0x02, 0x36,
	0x81, 0x9e, 0x4c, 0xb8, 0xe5, 0x5a, 0x9e, 0x1d, 0xf4, 0x64, 0xc2, 0xee, 0x41, 0x7f, 0x29, 0x33,
	0x49, 0xbc, 0xe7, 0x5a, 0x5e, 0x3f, 0x30, 0x1f, 0xec, 0x19, 0x4c, 0x70, 0x3e, 0xc7, 0x98, 0xe4,
	0x0a, 0x23, 0xaa, 0x4b, 0xe4, 0xb6, 0x0e, 0xef, 0x5d, 0xa8, 0x9f, 0xeb, 0x12, 0xd9, 0x63, 0x70,
	0xf0, 0xbc, 0x94, 0x0a, 0xa3, 0x1a, 0x85, 0xe2, 0x3b, 0x9a, 0x01, 0x23, 0x7d, 0x41, 0xa1, 0x2e,
	0x01, 0x89, 0x20, 0xe4, 0x7d, 0xd7, 0xf2, 0x46, 0x1d, 0x70, 0x2a, 0x08, 0xd9, 0x43, 0x18, 0xb5,
	0x80, 0x20, 0x3e, 0xd0, 0xe1, 0xa1, 0x11, 0x4e, 0x88, 0x3d, 0x81, 0x71, 0x53, 0x08, 0xc6, 0x14,
	0x25, 0xa2, 0xae, 0xf8, 0xae, 0xce, 0xef, 0xb4, 0xda, 0xa9, 0xa8, 0x2b, 0xf6, 0x14, 0xf6, 0xba,
	0xe2, 0xa3, 0x5c, 0x64, 0xc8, 0x87, 0x3a, 0xc7, 0xb8, 0x13, 0x3f, 0x89, 0x0c, 0x9b, 0x6a, 0x2e,
	0x20, 0x25, 0x48, 0x16, 0x7c, 0x64, 0xaa, 0xe9, 0xd4, 0xa0, 0x11, 0x99, 0x07, 0xff, 0xcb, 0x2a,
	0x8a, 0x45, 0xb5, 0x88, 0xf0, 0x3c, 0x5e, 0x88, 0x3c, 0x45, 0x0e, 0xae, 0xe5, 0x0d, 0x83, 0x89,
	0xac, 0xde, 0x8a, 0x6a, 0x31, 0x6b, 0x55, 0xe6, 0xc3, 0xdd, 0x35, 0x2c, 0xca, 0x8a, 0x1c, 0x6b,
	0xee, 0xb8, 0x96, 0xd7, 0x0b, 0xee, 0xc4, 0x97, 0xd0, 0x8f, 0x4d, 0xe0, 0x2a, 0x6f, 0x5a, 0x3e,
	0xbe, 0xca, 0x7f, 0xd0, 0xed, 0x3f, 0x02, 0x88, 0x15, 0x0a, 0xc2, 0xa4, 0x69, 0xcb, 0x9e, 0x2e,
	0x69, 0xd4, 0x2a, 0x27, 0x3a, 0xfc, 0xa3, 0x4c, 0xba, 0xf0, 0xc4, 0x84, 0x5b, 0xe5, 0x84, 0x8e,
	0x7f, 0xf5, 0xe0, 0x60, 0xe3, 0xd8, 0x03, 0xac, 0xca, 0x22, 0xaf, 0x90, 0xbd, 0x81, 0x01, 0xe6,
	0x24, 0xa9, 0xd6, 0x23, 0xe0, 0x4c, 0x3d, 0xff, 0x9a, 0x51, 0xf2, 0x37, 0x33, 0xb4, 0xeb, 0xd8,
	0x2b, 0xe8, 0x97, 0x22, 0x45, 0xa5, 0x07, 0xc6, 0x99, 0x3e, 0xba, 0x36, 0xc1, 0x59, 0x43, 0x05,
	0x06, 0x66, 0xaf, 0xa1, 0x2f, 0x09, 0xb3, 0x8a, 0xdb, 0xae, 0xfd, 0x57, 0xb6, 0x66, 0x59, 0xe3,
	0x8a, 0x4a, 0x15, 0x66, 0xc6, 0x6e, 0x72, 0x9d, 0x35, 0x54, 0x60, 0x60, 0xf6, 0x02, 0x76, 0x64,
	0x3e, 0x2f, 0xf4, 0xdc, 0x39, 0xd3, 0xa3, 0x1b, 0x4c, 0xe7, 0x45, 0xa0, 0xd1, 0xe9, 0xcf, 0x01,
	0x3c, 0xd8, 0xd8, 0x43, 0x88, 0x6a, 0x25, 0x63, 0x64, 0x31, 0xd8, 0xef, 0x90, 0xd8, 0xad, 0xf7,
	0x7e, 0xf8, 0xfc, 0xd6, 0x55, 0xb6, 0xc7, 0x73, 0xfc, 0x1f, 0x5b, 0xc2, 0x38, 0x44, 0x9a, 0x75,
	0xd7, 0x6c, 0xcb, 0x6e, 0x0b, 0x18, 0x86, 0x48, 0x66, 0xe8, 0xb6, 0xeb, 0xf4, 0x0d, 0x20, 0x44,
	0x3a, 0x33, 0x57, 0x77, 0xcb, 0x5e, 0x29, 0xec, 0x86, 0x48, 0xfa, 0xea, 0xff, 0x8b, 0xf6, 0xb5,
	0xaf, 0xc7, 0x56, 0x9d, 0x0a, 0xd8, 0x0f, 0x91, 0xd6, 0x1e, 0xa1, 0xad, 0x1a, 0x7e, 0x1d, 0xe8,
	0x5f, 0xc8, 0xcb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x74, 0x54, 0x63, 0x2c, 0x82, 0x06, 0x00,
	0x00,
}
