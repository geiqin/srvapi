// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fetch.proto

package geiqin_srv_tms

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FetchWhere struct {
	Paged                int32    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorting              string   `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
	Keywords             string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Id                   int64    `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Ids                  []int64  `protobuf:"varint,6,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Lng                  string   `protobuf:"bytes,7,opt,name=lng,proto3" json:"lng,omitempty"`
	Lat                  string   `protobuf:"bytes,8,opt,name=lat,proto3" json:"lat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchWhere) Reset()         { *m = FetchWhere{} }
func (m *FetchWhere) String() string { return proto.CompactTextString(m) }
func (*FetchWhere) ProtoMessage()    {}
func (*FetchWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c3607b78a5221b8, []int{0}
}

func (m *FetchWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchWhere.Unmarshal(m, b)
}
func (m *FetchWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchWhere.Marshal(b, m, deterministic)
}
func (m *FetchWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchWhere.Merge(m, src)
}
func (m *FetchWhere) XXX_Size() int {
	return xxx_messageInfo_FetchWhere.Size(m)
}
func (m *FetchWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchWhere.DiscardUnknown(m)
}

var xxx_messageInfo_FetchWhere proto.InternalMessageInfo

func (m *FetchWhere) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *FetchWhere) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *FetchWhere) GetSorting() string {
	if m != nil {
		return m.Sorting
	}
	return ""
}

func (m *FetchWhere) GetKeywords() string {
	if m != nil {
		return m.Keywords
	}
	return ""
}

func (m *FetchWhere) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FetchWhere) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *FetchWhere) GetLng() string {
	if m != nil {
		return m.Lng
	}
	return ""
}

func (m *FetchWhere) GetLat() string {
	if m != nil {
		return m.Lat
	}
	return ""
}

type Fetch struct {
	Id                     int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                   string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AreaId                 int64           `protobuf:"varint,3,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	Addr                   string          `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
	Lng                    string          `protobuf:"bytes,5,opt,name=lng,proto3" json:"lng,omitempty"`
	Lat                    string          `protobuf:"bytes,6,opt,name=lat,proto3" json:"lat,omitempty"`
	Tel                    string          `protobuf:"bytes,7,opt,name=tel,proto3" json:"tel,omitempty"`
	Mobile                 string          `protobuf:"bytes,8,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Reception              string          `protobuf:"bytes,9,opt,name=reception,proto3" json:"reception,omitempty"`
	ReceptionRepeatWeeks   int32           `protobuf:"varint,10,opt,name=reception_repeat_weeks,json=receptionRepeatWeeks,proto3" json:"reception_repeat_weeks,omitempty"`
	ReceptionRepeatWeekArr []int32         `protobuf:"varint,11,rep,packed,name=reception_repeat_week_arr,json=receptionRepeatWeekArr,proto3" json:"reception_repeat_week_arr,omitempty"`
	IsFetchTime            bool            `protobuf:"varint,12,opt,name=is_fetch_time,json=isFetchTime,proto3" json:"is_fetch_time,omitempty"`
	Fetch                  string          `protobuf:"bytes,13,opt,name=fetch,proto3" json:"fetch,omitempty"`
	FetchRepeatWeeks       int32           `protobuf:"varint,14,opt,name=fetch_repeat_weeks,json=fetchRepeatWeeks,proto3" json:"fetch_repeat_weeks,omitempty"`
	FetchRepeatWeekArr     []int32         `protobuf:"varint,15,rep,packed,name=fetch_repeat_week_arr,json=fetchRepeatWeekArr,proto3" json:"fetch_repeat_week_arr,omitempty"`
	SubFetchTime           string          `protobuf:"bytes,16,opt,name=sub_fetch_time,json=subFetchTime,proto3" json:"sub_fetch_time,omitempty"`
	Appointment            string          `protobuf:"bytes,17,opt,name=appointment,proto3" json:"appointment,omitempty"`
	AppointmentNum         int32           `protobuf:"varint,18,opt,name=appointment_num,json=appointmentNum,proto3" json:"appointment_num,omitempty"`
	MaxAppointmentNum      int32           `protobuf:"varint,19,opt,name=max_appointment_num,json=maxAppointmentNum,proto3" json:"max_appointment_num,omitempty"`
	Memo                   string          `protobuf:"bytes,20,opt,name=memo,proto3" json:"memo,omitempty"`
	CreatedAt              string          `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              string          `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ReceptionTimes         []*Times        `protobuf:"bytes,23,rep,name=reception_times,json=receptionTimes,proto3" json:"reception_times,omitempty"`
	FetchTimes             []*Times        `protobuf:"bytes,24,rep,name=fetch_times,json=fetchTimes,proto3" json:"fetch_times,omitempty"`
	Galleries              []*FetchGallery `protobuf:"bytes,25,rep,name=galleries,proto3" json:"galleries,omitempty"`
	Area                   *AreaInfo       `protobuf:"bytes,26,opt,name=area,proto3" json:"area,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}        `json:"-"`
	XXX_unrecognized       []byte          `json:"-"`
	XXX_sizecache          int32           `json:"-"`
}

func (m *Fetch) Reset()         { *m = Fetch{} }
func (m *Fetch) String() string { return proto.CompactTextString(m) }
func (*Fetch) ProtoMessage()    {}
func (*Fetch) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c3607b78a5221b8, []int{1}
}

func (m *Fetch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fetch.Unmarshal(m, b)
}
func (m *Fetch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fetch.Marshal(b, m, deterministic)
}
func (m *Fetch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fetch.Merge(m, src)
}
func (m *Fetch) XXX_Size() int {
	return xxx_messageInfo_Fetch.Size(m)
}
func (m *Fetch) XXX_DiscardUnknown() {
	xxx_messageInfo_Fetch.DiscardUnknown(m)
}

var xxx_messageInfo_Fetch proto.InternalMessageInfo

func (m *Fetch) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Fetch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Fetch) GetAreaId() int64 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *Fetch) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Fetch) GetLng() string {
	if m != nil {
		return m.Lng
	}
	return ""
}

func (m *Fetch) GetLat() string {
	if m != nil {
		return m.Lat
	}
	return ""
}

func (m *Fetch) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

func (m *Fetch) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *Fetch) GetReception() string {
	if m != nil {
		return m.Reception
	}
	return ""
}

func (m *Fetch) GetReceptionRepeatWeeks() int32 {
	if m != nil {
		return m.ReceptionRepeatWeeks
	}
	return 0
}

func (m *Fetch) GetReceptionRepeatWeekArr() []int32 {
	if m != nil {
		return m.ReceptionRepeatWeekArr
	}
	return nil
}

func (m *Fetch) GetIsFetchTime() bool {
	if m != nil {
		return m.IsFetchTime
	}
	return false
}

func (m *Fetch) GetFetch() string {
	if m != nil {
		return m.Fetch
	}
	return ""
}

func (m *Fetch) GetFetchRepeatWeeks() int32 {
	if m != nil {
		return m.FetchRepeatWeeks
	}
	return 0
}

func (m *Fetch) GetFetchRepeatWeekArr() []int32 {
	if m != nil {
		return m.FetchRepeatWeekArr
	}
	return nil
}

func (m *Fetch) GetSubFetchTime() string {
	if m != nil {
		return m.SubFetchTime
	}
	return ""
}

func (m *Fetch) GetAppointment() string {
	if m != nil {
		return m.Appointment
	}
	return ""
}

func (m *Fetch) GetAppointmentNum() int32 {
	if m != nil {
		return m.AppointmentNum
	}
	return 0
}

func (m *Fetch) GetMaxAppointmentNum() int32 {
	if m != nil {
		return m.MaxAppointmentNum
	}
	return 0
}

func (m *Fetch) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Fetch) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Fetch) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Fetch) GetReceptionTimes() []*Times {
	if m != nil {
		return m.ReceptionTimes
	}
	return nil
}

func (m *Fetch) GetFetchTimes() []*Times {
	if m != nil {
		return m.FetchTimes
	}
	return nil
}

func (m *Fetch) GetGalleries() []*FetchGallery {
	if m != nil {
		return m.Galleries
	}
	return nil
}

func (m *Fetch) GetArea() *AreaInfo {
	if m != nil {
		return m.Area
	}
	return nil
}

type FetchResponse struct {
	Entity               *Fetch   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Fetch `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchResponse) Reset()         { *m = FetchResponse{} }
func (m *FetchResponse) String() string { return proto.CompactTextString(m) }
func (*FetchResponse) ProtoMessage()    {}
func (*FetchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c3607b78a5221b8, []int{2}
}

func (m *FetchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchResponse.Unmarshal(m, b)
}
func (m *FetchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchResponse.Marshal(b, m, deterministic)
}
func (m *FetchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchResponse.Merge(m, src)
}
func (m *FetchResponse) XXX_Size() int {
	return xxx_messageInfo_FetchResponse.Size(m)
}
func (m *FetchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchResponse proto.InternalMessageInfo

func (m *FetchResponse) GetEntity() *Fetch {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *FetchResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *FetchResponse) GetItems() []*Fetch {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *FetchResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *FetchResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*FetchWhere)(nil), "geiqin.srv.tms.FetchWhere")
	proto.RegisterType((*Fetch)(nil), "geiqin.srv.tms.Fetch")
	proto.RegisterType((*FetchResponse)(nil), "geiqin.srv.tms.FetchResponse")
}

func init() {
	proto.RegisterFile("fetch.proto", fileDescriptor_4c3607b78a5221b8)
}

var fileDescriptor_4c3607b78a5221b8 = []byte{
	// 865 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xff, 0x6e, 0x1b, 0x45,
	0x10, 0xe6, 0x72, 0xf6, 0xc5, 0x1e, 0x27, 0x4e, 0xba, 0x4d, 0xd2, 0xad, 0x69, 0xc5, 0xc9, 0x42,
	0xe2, 0x24, 0x8a, 0x25, 0x0c, 0x42, 0x02, 0x09, 0x54, 0x93, 0x36, 0xa1, 0xa8, 0x02, 0x74, 0x01,
	0xf5, 0xcf, 0xd3, 0xc6, 0x37, 0x76, 0x56, 0xf5, 0xfd, 0x60, 0x77, 0xdd, 0x36, 0x7d, 0x1f, 0x5e,
	0x02, 0xde, 0x84, 0x97, 0xe0, 0x15, 0xd0, 0xce, 0x9e, 0x7f, 0xc4, 0x39, 0x05, 0x09, 0xff, 0xb7,
	0x33, 0xdf, 0x37, 0x33, 0xdf, 0xcd, 0xee, 0x8c, 0x0d, 0x9d, 0x09, 0x9a, 0xf1, 0xd5, 0xa0, 0x54,
	0x85, 0x29, 0x58, 0x77, 0x8a, 0xf2, 0x77, 0x99, 0x0f, 0xb4, 0x7a, 0x33, 0x30, 0x99, 0xee, 0xed,
	0x8d, 0x8b, 0x2c, 0x2b, 0x72, 0x87, 0xf6, 0x3a, 0x46, 0x66, 0xa8, 0x2b, 0x83, 0x51, 0xdc, 0xb9,
	0x98, 0xcd, 0x50, 0x5d, 0x57, 0xbe, 0xae, 0x50, 0x28, 0x5e, 0xe4, 0x93, 0xa2, 0xb2, 0xf7, 0x35,
	0x1a, 0x23, 0xf3, 0xa9, 0x33, 0xfb, 0x7f, 0x79, 0x00, 0x67, 0x36, 0xea, 0xd5, 0x15, 0x2a, 0x64,
	0x47, 0xd0, 0x2c, 0xc5, 0x14, 0x53, 0xee, 0x85, 0x5e, 0xd4, 0x8c, 0x9d, 0xc1, 0x3e, 0x84, 0xb6,
	0x3d, 0x24, 0x5a, 0xbe, 0x47, 0xbe, 0x43, 0x48, 0xcb, 0x3a, 0x2e, 0xe4, 0x7b, 0x64, 0x1c, 0x76,
	0x75, 0xa1, 0x6c, 0x4a, 0xee, 0x87, 0x5e, 0xd4, 0x8e, 0x17, 0x26, 0xeb, 0x41, 0xeb, 0x35, 0x5e,
	0xbf, 0x2d, 0x54, 0xaa, 0x79, 0x83, 0xa0, 0xa5, 0xcd, 0xba, 0xb0, 0x23, 0x53, 0xde, 0x0c, 0xbd,
	0xc8, 0x8f, 0x77, 0x64, 0xca, 0x0e, 0xc1, 0x97, 0xa9, 0xe6, 0x41, 0xe8, 0x47, 0x7e, 0x6c, 0x8f,
	0xd6, 0x33, 0xcb, 0xa7, 0x7c, 0x97, 0x02, 0xed, 0x91, 0x3c, 0xc2, 0xf0, 0x56, 0xe5, 0x11, 0xa6,
	0xff, 0xc7, 0x2e, 0x34, 0x49, 0x7d, 0x95, 0xcf, 0x5b, 0xe6, 0x63, 0xd0, 0xc8, 0x45, 0xe6, 0xd4,
	0xb6, 0x63, 0x3a, 0xb3, 0x07, 0xb0, 0x6b, 0x9b, 0x91, 0xc8, 0x94, 0x94, 0xfa, 0x71, 0x40, 0xbd,
	0x21, 0xb2, 0x48, 0x53, 0x55, 0x89, 0xa4, 0xf3, 0xa2, 0x7c, 0xf3, 0x56, 0xf9, 0x60, 0x59, 0xde,
	0x7a, 0x0c, 0xce, 0x16, 0x12, 0x0d, 0xce, 0xd8, 0x09, 0x04, 0x59, 0x71, 0x29, 0x67, 0x58, 0xa9,
	0xac, 0x2c, 0xf6, 0x08, 0xda, 0x0a, 0xc7, 0x58, 0x1a, 0x59, 0xe4, 0xbc, 0x4d, 0xd0, 0xca, 0xc1,
	0xbe, 0x84, 0x93, 0xa5, 0x91, 0x28, 0x2c, 0x51, 0x98, 0xe4, 0x2d, 0xe2, 0x6b, 0xcd, 0x81, 0x9a,
	0x7d, 0xb4, 0x44, 0x63, 0x02, 0x5f, 0x59, 0x8c, 0x7d, 0x0d, 0x0f, 0x6b, 0xa3, 0x12, 0xa1, 0x14,
	0xef, 0x84, 0x7e, 0xd4, 0x8c, 0x4f, 0x6a, 0x02, 0x47, 0x4a, 0xb1, 0x3e, 0xec, 0x4b, 0x9d, 0xd0,
	0x6b, 0x49, 0xec, 0x03, 0xe2, 0x7b, 0xa1, 0x17, 0xb5, 0xe2, 0x8e, 0xd4, 0xd4, 0xcd, 0x5f, 0x65,
	0x46, 0x4f, 0x81, 0x08, 0x7c, 0x9f, 0xe4, 0x3a, 0x83, 0x3d, 0x01, 0xf7, 0xc8, 0x6e, 0xca, 0xec,
	0x92, 0xcc, 0x43, 0x42, 0xd6, 0x25, 0x7e, 0x0e, 0xc7, 0xb7, 0xd8, 0x24, 0xef, 0x80, 0xe4, 0xb1,
	0x8d, 0x00, 0x2b, 0xed, 0x63, 0xe8, 0xea, 0xf9, 0xe5, 0xba, 0xb6, 0x43, 0xaa, 0xbf, 0xa7, 0xe7,
	0x97, 0x2b, 0x71, 0x21, 0x74, 0x44, 0x59, 0x16, 0x32, 0x37, 0x19, 0xe6, 0x86, 0xdf, 0x23, 0xca,
	0xba, 0x8b, 0x7d, 0x02, 0x07, 0x6b, 0x66, 0x92, 0xcf, 0x33, 0xce, 0x48, 0x65, 0x77, 0xcd, 0xfd,
	0xd3, 0x3c, 0x63, 0x03, 0xb8, 0x9f, 0x89, 0x77, 0xc9, 0x26, 0xf9, 0x3e, 0x91, 0xef, 0x65, 0xe2,
	0xdd, 0xe8, 0x26, 0x9f, 0x41, 0x23, 0xc3, 0xac, 0xe0, 0x47, 0xee, 0xb1, 0xd8, 0x33, 0x7b, 0x0c,
	0x30, 0x56, 0x28, 0x0c, 0xa6, 0x89, 0x30, 0xfc, 0xd8, 0xdd, 0x6f, 0xe5, 0x19, 0x19, 0x0b, 0xcf,
	0xcb, 0x74, 0x01, 0x9f, 0x38, 0xb8, 0xf2, 0x8c, 0x0c, 0xfb, 0x0e, 0x0e, 0x56, 0x17, 0x49, 0xf3,
	0xcc, 0x1f, 0x84, 0x7e, 0xd4, 0x19, 0x1e, 0x0f, 0x6e, 0xce, 0xfe, 0xc0, 0x7e, 0xbb, 0x8e, 0xbb,
	0x4b, 0x36, 0xd9, 0xec, 0xab, 0x6a, 0x61, 0x54, 0xb1, 0xfc, 0xae, 0x58, 0x98, 0x2c, 0x7a, 0xa8,
	0xd9, 0x37, 0xd0, 0x9e, 0xd2, 0xae, 0x90, 0xa8, 0xf9, 0x43, 0x8a, 0x7a, 0xb4, 0x19, 0x75, 0xb6,
	0xb6, 0x51, 0xe2, 0x15, 0x9d, 0x3d, 0x81, 0x86, 0x1d, 0x1e, 0xde, 0x0b, 0xbd, 0xa8, 0x33, 0xe4,
	0x9b, 0x61, 0xa3, 0x6a, 0xe9, 0xc4, 0xc4, 0xea, 0xff, 0xe3, 0xc1, 0xfe, 0x99, 0xbb, 0x6b, 0x5d,
	0x16, 0xb9, 0x46, 0xf6, 0x19, 0x04, 0x98, 0x1b, 0x69, 0xae, 0x69, 0x66, 0x6b, 0xe4, 0x3a, 0x7a,
	0x45, 0x62, 0x9f, 0xba, 0xbd, 0xa4, 0x68, 0x9e, 0x6b, 0xd8, 0xbf, 0x58, 0xd0, 0xad, 0x2b, 0x65,
	0xc9, 0xd2, 0x60, 0xa6, 0xb9, 0x5f, 0xdf, 0x09, 0x97, 0xda, 0x71, 0x2c, 0x19, 0x95, 0x2a, 0xdc,
	0xf0, 0xd7, 0x90, 0x9f, 0x5b, 0x30, 0x76, 0x1c, 0x16, 0x41, 0x43, 0xe6, 0x93, 0x82, 0xb6, 0x42,
	0x67, 0x78, 0xb4, 0xc9, 0x75, 0x5f, 0x6c, 0x19, 0xc3, 0xbf, 0x3d, 0x38, 0xa0, 0x3a, 0xa7, 0x93,
	0xe9, 0x05, 0xaa, 0x37, 0x72, 0x8c, 0xec, 0x29, 0x34, 0x7e, 0x2e, 0x31, 0x67, 0xb7, 0x6b, 0x64,
	0xa5, 0xb9, 0xee, 0x7d, 0xb4, 0xe9, 0xbe, 0x70, 0x9b, 0x7a, 0xd1, 0xb3, 0xfe, 0x07, 0x6c, 0x04,
	0xcd, 0xd3, 0x59, 0xa1, 0x71, 0x8b, 0x14, 0xdf, 0x43, 0xf0, 0x42, 0x6f, 0x27, 0x63, 0xf8, 0x67,
	0x03, 0xf6, 0xe8, 0xe3, 0x56, 0x5f, 0x16, 0x9c, 0xd2, 0x6b, 0x67, 0xf5, 0xcd, 0xee, 0x3d, 0xae,
	0xbf, 0x83, 0x95, 0xac, 0xa7, 0x10, 0xfc, 0x46, 0x03, 0xf1, 0xbf, 0x33, 0x3c, 0x87, 0xe0, 0x19,
	0xce, 0xd0, 0x20, 0xeb, 0xd5, 0x52, 0xe9, 0x07, 0xee, 0xbf, 0xd3, 0x7c, 0x0b, 0xfe, 0x39, 0x9a,
	0x6d, 0x54, 0x5c, 0xa0, 0x50, 0xe3, 0xab, 0xed, 0x54, 0x9c, 0x42, 0xe3, 0xa5, 0xd4, 0x66, 0xbb,
	0x24, 0x3f, 0x42, 0xeb, 0x1c, 0x8d, 0x9b, 0xf5, 0xbb, 0x12, 0x85, 0x9b, 0xd8, 0x33, 0x61, 0xd0,
	0x96, 0x5f, 0xcb, 0xf5, 0x03, 0xb4, 0xcf, 0xd1, 0xbc, 0x14, 0x06, 0xb7, 0x54, 0x75, 0x19, 0xd0,
	0x1f, 0x8f, 0x2f, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x9d, 0xc3, 0x4a, 0x77, 0xe5, 0x08, 0x00,
	0x00,
}
