// Code generated by protoc-gen-go. DO NOT EDIT.
// source: statistics.proto

package geiqin_srv_ord_private

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StatsRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Days                 int32    `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`
	Paged                int32    `protobuf:"varint,3,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize             int32    `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	CustomerId           int64    `protobuf:"varint,5,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	StartAt              string   `protobuf:"bytes,6,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt                string   `protobuf:"bytes,7,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	StatisticAt          string   `protobuf:"bytes,8,opt,name=statistic_at,json=statisticAt,proto3" json:"statistic_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsRequest) Reset()         { *m = StatsRequest{} }
func (m *StatsRequest) String() string { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()    {}
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe4ebcdede33dbb6, []int{0}
}

func (m *StatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsRequest.Unmarshal(m, b)
}
func (m *StatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsRequest.Marshal(b, m, deterministic)
}
func (m *StatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsRequest.Merge(m, src)
}
func (m *StatsRequest) XXX_Size() int {
	return xxx_messageInfo_StatsRequest.Size(m)
}
func (m *StatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatsRequest proto.InternalMessageInfo

func (m *StatsRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StatsRequest) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

func (m *StatsRequest) GetPaged() int32 {
	if m != nil {
		return m.Paged
	}
	return 0
}

func (m *StatsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *StatsRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *StatsRequest) GetStartAt() string {
	if m != nil {
		return m.StartAt
	}
	return ""
}

func (m *StatsRequest) GetEndAt() string {
	if m != nil {
		return m.EndAt
	}
	return ""
}

func (m *StatsRequest) GetStatisticAt() string {
	if m != nil {
		return m.StatisticAt
	}
	return ""
}

func init() {
	proto.RegisterType((*StatsRequest)(nil), "geiqin.srv.ord.private.StatsRequest")
}

func init() {
	proto.RegisterFile("statistics.proto", fileDescriptor_fe4ebcdede33dbb6)
}

var fileDescriptor_fe4ebcdede33dbb6 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x09, 0x5b, 0xb2, 0xe6, 0x2d, 0x48, 0xc3, 0x02, 0x94, 0x05, 0x21, 0xca, 0xc4, 0xa1,
	0x42, 0x22, 0x12, 0xe5, 0xc4, 0xb1, 0x02, 0x04, 0x1c, 0xd0, 0xa4, 0xb4, 0x9c, 0x8b, 0x17, 0xbf,
	0x0d, 0x8b, 0xc5, 0xce, 0xec, 0xb7, 0x4a, 0xd9, 0x81, 0x0f, 0xc7, 0x17, 0xe1, 0xab, 0xa0, 0x78,
	0x4d, 0x1a, 0xaa, 0xb6, 0x6a, 0x85, 0xe0, 0x66, 0xff, 0xff, 0x2f, 0xfe, 0xd9, 0xff, 0xf7, 0x14,
	0x38, 0xb2, 0xc4, 0x49, 0x5a, 0x92, 0xb9, 0x4d, 0x4b, 0xa3, 0x49, 0xb3, 0x47, 0x17, 0x28, 0xaf,
	0xa4, 0x4a, 0xad, 0x99, 0xa5, 0xda, 0x88, 0xb4, 0x34, 0x72, 0xc6, 0x09, 0x93, 0x28, 0xd7, 0x45,
	0xa1, 0xd5, 0x6d, 0x55, 0x72, 0xa4, 0x8d, 0x40, 0x33, 0x26, 0x4e, 0xf3, 0xef, 0x92, 0x63, 0xa7,
	0x7c, 0x51, 0xdf, 0xb8, 0x12, 0x97, 0x28, 0x3a, 0xd6, 0xc9, 0x2f, 0x0f, 0x22, 0xb7, 0xcf, 0xf0,
	0xea, 0x1a, 0x2d, 0x31, 0x06, 0xfb, 0x54, 0x95, 0x18, 0x7b, 0x7d, 0x6f, 0x10, 0x66, 0x6e, 0x5d,
	0x6b, 0x82, 0x57, 0x36, 0xbe, 0xdb, 0xf7, 0x06, 0x7e, 0xe6, 0xd6, 0xec, 0x01, 0xf8, 0x25, 0xbf,
	0x40, 0x11, 0xef, 0x39, 0xf1, 0x76, 0xc3, 0x1e, 0x43, 0x58, 0x2f, 0xa6, 0x56, 0xde, 0x60, 0xbc,
	0xef, 0x9c, 0x5e, 0x2d, 0x8c, 0xe5, 0x0d, 0xb2, 0xa7, 0x70, 0x98, 0x5f, 0x5b, 0xd2, 0x05, 0x9a,
	0xa9, 0x14, 0xb1, 0xdf, 0xf7, 0x06, 0x7b, 0x19, 0x34, 0xd2, 0x27, 0xc1, 0x8e, 0xa1, 0x67, 0x89,
	0x1b, 0x9a, 0x72, 0x8a, 0x03, 0xc7, 0x3f, 0x70, 0xfb, 0x11, 0xb1, 0x87, 0x10, 0xa0, 0x12, 0xb5,
	0x71, 0xe0, 0x0c, 0x1f, 0x95, 0x18, 0x11, 0x7b, 0x06, 0x51, 0x9b, 0x52, 0x6d, 0xf6, 0x9c, 0x79,
	0xd8, 0x6a, 0x23, 0x1a, 0xfe, 0x80, 0xe8, 0x73, 0x35, 0x6e, 0xa3, 0x64, 0x0a, 0xc2, 0x36, 0x09,
	0xf6, 0x3c, 0x5d, 0x1d, 0x69, 0xda, 0xcd, 0x24, 0x79, 0xb3, 0xae, 0xea, 0xed, 0xfc, 0xee, 0xa7,
	0x75, 0xbe, 0x1f, 0x3b, 0xe9, 0x66, 0x68, 0x4b, 0xad, 0x2c, 0x9e, 0xdc, 0x19, 0xfe, 0x0c, 0x00,
	0x3a, 0xf8, 0xaf, 0x00, 0xae, 0x7a, 0xa2, 0x89, 0x5f, 0x6e, 0xc9, 0x7f, 0xb1, 0xae, 0xea, 0xb4,
	0xed, 0xf4, 0x02, 0xc8, 0x72, 0x80, 0x89, 0x16, 0xbc, 0xda, 0x85, 0xf0, 0x72, 0x23, 0xe1, 0x1d,
	0xaf, 0x96, 0x21, 0x67, 0x10, 0x36, 0x96, 0xfd, 0x57, 0x8c, 0xf3, 0xdd, 0x3b, 0xf5, 0x6a, 0x23,
	0x63, 0x75, 0x87, 0xd8, 0x39, 0xdc, 0x6b, 0x1a, 0xf9, 0x41, 0x6b, 0xf1, 0xd7, 0xef, 0xf9, 0xe3,
	0xb0, 0x0e, 0xe7, 0xfb, 0x82, 0xe3, 0xae, 0xb3, 0x25, 0x67, 0xb8, 0xd5, 0xf4, 0x2d, 0x3f, 0x6a,
	0x06, 0xf7, 0x1b, 0xff, 0x7f, 0x8e, 0x3b, 0x9b, 0x80, 0x9f, 0xa1, 0x45, 0x62, 0x4f, 0xd6, 0x9d,
	0xf2, 0xbe, 0x28, 0xa9, 0xda, 0x6d, 0xa6, 0xcf, 0x02, 0xf7, 0xb7, 0x7a, 0xfd, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x8d, 0xd1, 0x5d, 0xa7, 0x14, 0x05, 0x00, 0x00,
}
