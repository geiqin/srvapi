// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderDetail.proto

package geiqin_srv_ord_private

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderDetail struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId              int64    `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ItemId               int64    `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ThumbId              int64    `protobuf:"varint,4,opt,name=thumb_id,json=thumbId,proto3" json:"thumb_id,omitempty"`
	ThumbUrl             string   `protobuf:"bytes,5,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url,omitempty"`
	SkuId                int64    `protobuf:"varint,6,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	ItemSn               string   `protobuf:"bytes,7,opt,name=item_sn,json=itemSn,proto3" json:"item_sn,omitempty"`
	SkuSn                string   `protobuf:"bytes,8,opt,name=sku_sn,json=skuSn,proto3" json:"sku_sn,omitempty"`
	ModelType            string   `protobuf:"bytes,9,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"`
	Name                 string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Weight               float32  `protobuf:"fixed32,11,opt,name=weight,proto3" json:"weight,omitempty"`
	Num                  int32    `protobuf:"varint,12,opt,name=num,proto3" json:"num,omitempty"`
	Price                float32  `protobuf:"fixed32,13,opt,name=price,proto3" json:"price,omitempty"`
	TotalPrice           float32  `protobuf:"fixed32,14,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	OriginPrice          float32  `protobuf:"fixed32,15,opt,name=origin_price,json=originPrice,proto3" json:"origin_price,omitempty"`
	CostPrice            float32  `protobuf:"fixed32,16,opt,name=cost_price,json=costPrice,proto3" json:"cost_price,omitempty"`
	BeforePrice          float32  `protobuf:"fixed32,17,opt,name=before_price,json=beforePrice,proto3" json:"before_price,omitempty"`
	Modified             bool     `protobuf:"varint,18,opt,name=modified,proto3" json:"modified,omitempty"`
	ShippedNum           int32    `protobuf:"varint,19,opt,name=shipped_num,json=shippedNum,proto3" json:"shipped_num,omitempty"`
	Points               int32    `protobuf:"varint,20,opt,name=points,proto3" json:"points,omitempty"`
	SaleType             string   `protobuf:"bytes,21,opt,name=sale_type,json=saleType,proto3" json:"sale_type,omitempty"`
	Additional           string   `protobuf:"bytes,22,opt,name=additional,proto3" json:"additional,omitempty"`
	Attached             bool     `protobuf:"varint,23,opt,name=attached,proto3" json:"attached,omitempty"`
	AttachType           string   `protobuf:"bytes,24,opt,name=attach_type,json=attachType,proto3" json:"attach_type,omitempty"`
	ShipStatus           string   `protobuf:"bytes,25,opt,name=ship_status,json=shipStatus,proto3" json:"ship_status,omitempty"`
	RefundStatus         string   `protobuf:"bytes,26,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status,omitempty"`
	PresentId            int64    `protobuf:"varint,27,opt,name=present_id,json=presentId,proto3" json:"present_id,omitempty"`
	CreatedAt            string   `protobuf:"bytes,28,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,29,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderDetail) Reset()         { *m = OrderDetail{} }
func (m *OrderDetail) String() string { return proto.CompactTextString(m) }
func (*OrderDetail) ProtoMessage()    {}
func (*OrderDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_28901a6159ef662a, []int{0}
}

func (m *OrderDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderDetail.Unmarshal(m, b)
}
func (m *OrderDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderDetail.Marshal(b, m, deterministic)
}
func (m *OrderDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderDetail.Merge(m, src)
}
func (m *OrderDetail) XXX_Size() int {
	return xxx_messageInfo_OrderDetail.Size(m)
}
func (m *OrderDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderDetail.DiscardUnknown(m)
}

var xxx_messageInfo_OrderDetail proto.InternalMessageInfo

func (m *OrderDetail) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrderDetail) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *OrderDetail) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *OrderDetail) GetThumbId() int64 {
	if m != nil {
		return m.ThumbId
	}
	return 0
}

func (m *OrderDetail) GetThumbUrl() string {
	if m != nil {
		return m.ThumbUrl
	}
	return ""
}

func (m *OrderDetail) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *OrderDetail) GetItemSn() string {
	if m != nil {
		return m.ItemSn
	}
	return ""
}

func (m *OrderDetail) GetSkuSn() string {
	if m != nil {
		return m.SkuSn
	}
	return ""
}

func (m *OrderDetail) GetModelType() string {
	if m != nil {
		return m.ModelType
	}
	return ""
}

func (m *OrderDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrderDetail) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *OrderDetail) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *OrderDetail) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderDetail) GetTotalPrice() float32 {
	if m != nil {
		return m.TotalPrice
	}
	return 0
}

func (m *OrderDetail) GetOriginPrice() float32 {
	if m != nil {
		return m.OriginPrice
	}
	return 0
}

func (m *OrderDetail) GetCostPrice() float32 {
	if m != nil {
		return m.CostPrice
	}
	return 0
}

func (m *OrderDetail) GetBeforePrice() float32 {
	if m != nil {
		return m.BeforePrice
	}
	return 0
}

func (m *OrderDetail) GetModified() bool {
	if m != nil {
		return m.Modified
	}
	return false
}

func (m *OrderDetail) GetShippedNum() int32 {
	if m != nil {
		return m.ShippedNum
	}
	return 0
}

func (m *OrderDetail) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *OrderDetail) GetSaleType() string {
	if m != nil {
		return m.SaleType
	}
	return ""
}

func (m *OrderDetail) GetAdditional() string {
	if m != nil {
		return m.Additional
	}
	return ""
}

func (m *OrderDetail) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

func (m *OrderDetail) GetAttachType() string {
	if m != nil {
		return m.AttachType
	}
	return ""
}

func (m *OrderDetail) GetShipStatus() string {
	if m != nil {
		return m.ShipStatus
	}
	return ""
}

func (m *OrderDetail) GetRefundStatus() string {
	if m != nil {
		return m.RefundStatus
	}
	return ""
}

func (m *OrderDetail) GetPresentId() int64 {
	if m != nil {
		return m.PresentId
	}
	return 0
}

func (m *OrderDetail) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *OrderDetail) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func init() {
	proto.RegisterType((*OrderDetail)(nil), "geiqin.srv.ord.private.OrderDetail")
}

func init() {
	proto.RegisterFile("orderDetail.proto", fileDescriptor_28901a6159ef662a)
}

var fileDescriptor_28901a6159ef662a = []byte{
	// 494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x93, 0xc1, 0x72, 0xd3, 0x30,
	0x10, 0x86, 0xc7, 0x69, 0xe3, 0xc4, 0x9b, 0xb4, 0xb4, 0xa2, 0x4d, 0xd5, 0x96, 0x40, 0x80, 0x4b,
	0x4e, 0xb9, 0xf0, 0x04, 0x9d, 0xe1, 0x92, 0x0b, 0x30, 0x09, 0x9c, 0x3d, 0x4a, 0xb4, 0x49, 0x34,
	0xb5, 0x25, 0x21, 0xc9, 0x65, 0xfa, 0x6c, 0xbc, 0x1c, 0xa3, 0x95, 0x52, 0x7a, 0xd3, 0x7e, 0xff,
	0xb7, 0xf2, 0x5a, 0x96, 0xe1, 0xd2, 0x38, 0x89, 0xee, 0x2b, 0x06, 0xa1, 0x9a, 0x85, 0x75, 0x26,
	0x18, 0x36, 0xd9, 0xa3, 0xfa, 0xad, 0xf4, 0xc2, 0xbb, 0xa7, 0x85, 0x71, 0x72, 0x61, 0x9d, 0x7a,
	0x12, 0x01, 0x3f, 0xfd, 0x2d, 0x61, 0xf4, 0xfd, 0xbf, 0xcd, 0xce, 0xa1, 0xa7, 0x24, 0x2f, 0x66,
	0xc5, 0xfc, 0x64, 0xd5, 0x53, 0x92, 0xdd, 0xc2, 0x90, 0x36, 0xab, 0x95, 0xe4, 0x3d, 0xa2, 0x03,
	0xaa, 0x97, 0x92, 0xdd, 0xc0, 0x40, 0x05, 0x6c, 0x63, 0x72, 0x42, 0x49, 0x19, 0xcb, 0x25, 0xf5,
	0x84, 0x43, 0xd7, 0x6e, 0x62, 0x72, 0x9a, 0x7a, 0xa8, 0x5e, 0x4a, 0x76, 0x0f, 0x55, 0x8a, 0x3a,
	0xd7, 0xf0, 0xfe, 0xac, 0x98, 0x57, 0xab, 0xe4, 0xfe, 0x72, 0x0d, 0xbb, 0x86, 0xd2, 0x3f, 0x76,
	0xb1, 0xab, 0xa4, 0xae, 0xbe, 0x7f, 0xec, 0x5e, 0x3d, 0xc7, 0x6b, 0x3e, 0xa0, 0x0e, 0x7a, 0xce,
	0x5a, 0x1f, 0x7d, 0xaf, 0xf9, 0x90, 0x78, 0xf4, 0xd7, 0x9a, 0x4d, 0x01, 0x5a, 0x23, 0xb1, 0xa9,
	0xc3, 0xb3, 0x45, 0x5e, 0x51, 0x54, 0x11, 0xf9, 0xf9, 0x6c, 0x91, 0x31, 0x38, 0xd5, 0xa2, 0x45,
	0x0e, 0x14, 0xd0, 0x9a, 0x4d, 0xa0, 0xfc, 0x83, 0x6a, 0x7f, 0x08, 0x7c, 0x34, 0x2b, 0xe6, 0xbd,
	0x55, 0xae, 0xd8, 0x05, 0x9c, 0xe8, 0xae, 0xe5, 0xe3, 0x59, 0x31, 0xef, 0xaf, 0xe2, 0x92, 0x5d,
	0x41, 0xdf, 0x3a, 0xb5, 0x45, 0x7e, 0x46, 0x62, 0x2a, 0xd8, 0x07, 0x18, 0x05, 0x13, 0x44, 0x53,
	0xa7, 0xec, 0x9c, 0x32, 0x20, 0xf4, 0x83, 0x84, 0x8f, 0x30, 0x36, 0x4e, 0xed, 0x95, 0xce, 0xc6,
	0x1b, 0x32, 0x46, 0x89, 0x25, 0x65, 0x0a, 0xb0, 0x35, 0x3e, 0x64, 0xe1, 0x82, 0x84, 0x2a, 0x92,
	0x97, 0x1d, 0x36, 0xb8, 0x33, 0x0e, 0xb3, 0x70, 0x99, 0x76, 0x48, 0x2c, 0x29, 0x77, 0x30, 0x6c,
	0x8d, 0x54, 0x3b, 0x85, 0x92, 0xb3, 0x59, 0x31, 0x1f, 0xae, 0x5e, 0xea, 0x38, 0xa1, 0x3f, 0x28,
	0x6b, 0x51, 0xd6, 0xf1, 0x8d, 0xde, 0xd2, 0x1b, 0x41, 0x46, 0xdf, 0xba, 0x36, 0x1e, 0x81, 0x35,
	0x4a, 0x07, 0xcf, 0xaf, 0x28, 0xcb, 0x55, 0xfc, 0x62, 0x5e, 0x34, 0x98, 0x0e, 0xf3, 0x3a, 0x7d,
	0xb1, 0x08, 0xe8, 0x2c, 0xdf, 0x03, 0x08, 0x29, 0x55, 0x50, 0x46, 0x8b, 0x86, 0x4f, 0x28, 0x7d,
	0x45, 0xe2, 0x44, 0x22, 0x04, 0xb1, 0x3d, 0xa0, 0xe4, 0x37, 0x69, 0xa2, 0x63, 0x1d, 0x27, 0x4a,
	0xeb, 0xb4, 0x35, 0xcf, 0xcd, 0x84, 0x68, 0xf3, 0x3c, 0x72, 0xed, 0x83, 0x08, 0x9d, 0xe7, 0xb7,
	0x49, 0x88, 0x68, 0x4d, 0x84, 0x7d, 0x86, 0x33, 0x87, 0xbb, 0x4e, 0xcb, 0xa3, 0x72, 0x47, 0xca,
	0x38, 0xc1, 0x2c, 0x4d, 0x01, 0xac, 0x43, 0x8f, 0x3a, 0xc4, 0x8b, 0x75, 0x4f, 0x17, 0xab, 0xca,
	0x64, 0x29, 0xe9, 0xd4, 0x1d, 0x8a, 0x80, 0xb2, 0x16, 0x81, 0xbf, 0x4b, 0x97, 0x25, 0x93, 0x87,
	0x10, 0xe3, 0xce, 0xca, 0x63, 0x3c, 0x4d, 0x71, 0x26, 0x0f, 0x61, 0x53, 0xd2, 0xcf, 0xf5, 0xe5,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0xb1, 0xe5, 0x4e, 0x71, 0x03, 0x00, 0x00,
}
