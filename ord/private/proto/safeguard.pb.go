// Code generated by protoc-gen-go. DO NOT EDIT.
// source: safeguard.proto

package geiqin_srv_ord_private

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Safeguard struct {
	Id                   int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId              int64              `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Type                 string             `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	SafeguardSn          string             `protobuf:"bytes,4,opt,name=safeguard_sn,json=safeguardSn,proto3" json:"safeguard_sn,omitempty"`
	CustomerId           int64              `protobuf:"varint,5,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	ExchangeDeliveryId   int64              `protobuf:"varint,6,opt,name=exchange_delivery_id,json=exchangeDeliveryId,proto3" json:"exchange_delivery_id,omitempty"`
	ExpressName          string             `protobuf:"bytes,7,opt,name=express_name,json=expressName,proto3" json:"express_name,omitempty"`
	ExpressNo            string             `protobuf:"bytes,8,opt,name=express_no,json=expressNo,proto3" json:"express_no,omitempty"`
	Refunded             bool               `protobuf:"varint,9,opt,name=refunded,proto3" json:"refunded,omitempty"`
	RefundFee            float32            `protobuf:"fixed32,10,opt,name=refund_fee,json=refundFee,proto3" json:"refund_fee,omitempty"`
	RefundMethod         string             `protobuf:"bytes,11,opt,name=refund_method,json=refundMethod,proto3" json:"refund_method,omitempty"`
	CheckStatus          string             `protobuf:"bytes,12,opt,name=check_status,json=checkStatus,proto3" json:"check_status,omitempty"`
	Status               string             `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	Reason               string             `protobuf:"bytes,14,opt,name=reason,proto3" json:"reason,omitempty"`
	Description          string             `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	OpId                 int64              `protobuf:"varint,16,opt,name=op_id,json=opId,proto3" json:"op_id,omitempty"`
	OpName               string             `protobuf:"bytes,17,opt,name=op_name,json=opName,proto3" json:"op_name,omitempty"`
	Memo                 string             `protobuf:"bytes,18,opt,name=memo,proto3" json:"memo,omitempty"`
	GoodsStatus          string             `protobuf:"bytes,19,opt,name=goods_status,json=goodsStatus,proto3" json:"goods_status,omitempty"`
	RefundedAt           string             `protobuf:"bytes,20,opt,name=refunded_at,json=refundedAt,proto3" json:"refunded_at,omitempty"`
	CheckedAt            string             `protobuf:"bytes,21,opt,name=checked_at,json=checkedAt,proto3" json:"checked_at,omitempty"`
	CreatedAt            string             `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string             `protobuf:"bytes,23,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Details              []*SafeguardDetail `protobuf:"bytes,24,rep,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Safeguard) Reset()         { *m = Safeguard{} }
func (m *Safeguard) String() string { return proto.CompactTextString(m) }
func (*Safeguard) ProtoMessage()    {}
func (*Safeguard) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3d93130ef4c1d08, []int{0}
}

func (m *Safeguard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Safeguard.Unmarshal(m, b)
}
func (m *Safeguard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Safeguard.Marshal(b, m, deterministic)
}
func (m *Safeguard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Safeguard.Merge(m, src)
}
func (m *Safeguard) XXX_Size() int {
	return xxx_messageInfo_Safeguard.Size(m)
}
func (m *Safeguard) XXX_DiscardUnknown() {
	xxx_messageInfo_Safeguard.DiscardUnknown(m)
}

var xxx_messageInfo_Safeguard proto.InternalMessageInfo

func (m *Safeguard) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Safeguard) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *Safeguard) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Safeguard) GetSafeguardSn() string {
	if m != nil {
		return m.SafeguardSn
	}
	return ""
}

func (m *Safeguard) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Safeguard) GetExchangeDeliveryId() int64 {
	if m != nil {
		return m.ExchangeDeliveryId
	}
	return 0
}

func (m *Safeguard) GetExpressName() string {
	if m != nil {
		return m.ExpressName
	}
	return ""
}

func (m *Safeguard) GetExpressNo() string {
	if m != nil {
		return m.ExpressNo
	}
	return ""
}

func (m *Safeguard) GetRefunded() bool {
	if m != nil {
		return m.Refunded
	}
	return false
}

func (m *Safeguard) GetRefundFee() float32 {
	if m != nil {
		return m.RefundFee
	}
	return 0
}

func (m *Safeguard) GetRefundMethod() string {
	if m != nil {
		return m.RefundMethod
	}
	return ""
}

func (m *Safeguard) GetCheckStatus() string {
	if m != nil {
		return m.CheckStatus
	}
	return ""
}

func (m *Safeguard) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Safeguard) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Safeguard) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Safeguard) GetOpId() int64 {
	if m != nil {
		return m.OpId
	}
	return 0
}

func (m *Safeguard) GetOpName() string {
	if m != nil {
		return m.OpName
	}
	return ""
}

func (m *Safeguard) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Safeguard) GetGoodsStatus() string {
	if m != nil {
		return m.GoodsStatus
	}
	return ""
}

func (m *Safeguard) GetRefundedAt() string {
	if m != nil {
		return m.RefundedAt
	}
	return ""
}

func (m *Safeguard) GetCheckedAt() string {
	if m != nil {
		return m.CheckedAt
	}
	return ""
}

func (m *Safeguard) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Safeguard) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Safeguard) GetDetails() []*SafeguardDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

type SafeguardDetail struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SafeguardId          int64    `protobuf:"varint,2,opt,name=safeguard_id,json=safeguardId,proto3" json:"safeguard_id,omitempty"`
	OrderDetailId        int64    `protobuf:"varint,3,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id,omitempty"`
	ItemId               int64    `protobuf:"varint,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	SkuId                int64    `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num                  int32    `protobuf:"varint,6,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SafeguardDetail) Reset()         { *m = SafeguardDetail{} }
func (m *SafeguardDetail) String() string { return proto.CompactTextString(m) }
func (*SafeguardDetail) ProtoMessage()    {}
func (*SafeguardDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3d93130ef4c1d08, []int{1}
}

func (m *SafeguardDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafeguardDetail.Unmarshal(m, b)
}
func (m *SafeguardDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafeguardDetail.Marshal(b, m, deterministic)
}
func (m *SafeguardDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafeguardDetail.Merge(m, src)
}
func (m *SafeguardDetail) XXX_Size() int {
	return xxx_messageInfo_SafeguardDetail.Size(m)
}
func (m *SafeguardDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_SafeguardDetail.DiscardUnknown(m)
}

var xxx_messageInfo_SafeguardDetail proto.InternalMessageInfo

func (m *SafeguardDetail) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SafeguardDetail) GetSafeguardId() int64 {
	if m != nil {
		return m.SafeguardId
	}
	return 0
}

func (m *SafeguardDetail) GetOrderDetailId() int64 {
	if m != nil {
		return m.OrderDetailId
	}
	return 0
}

func (m *SafeguardDetail) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *SafeguardDetail) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *SafeguardDetail) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type SafeguardResponse struct {
	Entity               *Safeguard   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager       `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Safeguard `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error       `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info        `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SafeguardResponse) Reset()         { *m = SafeguardResponse{} }
func (m *SafeguardResponse) String() string { return proto.CompactTextString(m) }
func (*SafeguardResponse) ProtoMessage()    {}
func (*SafeguardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3d93130ef4c1d08, []int{2}
}

func (m *SafeguardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafeguardResponse.Unmarshal(m, b)
}
func (m *SafeguardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafeguardResponse.Marshal(b, m, deterministic)
}
func (m *SafeguardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafeguardResponse.Merge(m, src)
}
func (m *SafeguardResponse) XXX_Size() int {
	return xxx_messageInfo_SafeguardResponse.Size(m)
}
func (m *SafeguardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SafeguardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SafeguardResponse proto.InternalMessageInfo

func (m *SafeguardResponse) GetEntity() *Safeguard {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *SafeguardResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *SafeguardResponse) GetItems() []*Safeguard {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SafeguardResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *SafeguardResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Safeguard)(nil), "geiqin.srv.ord.private.Safeguard")
	proto.RegisterType((*SafeguardDetail)(nil), "geiqin.srv.ord.private.SafeguardDetail")
	proto.RegisterType((*SafeguardResponse)(nil), "geiqin.srv.ord.private.SafeguardResponse")
}

func init() { proto.RegisterFile("safeguard.proto", fileDescriptor_a3d93130ef4c1d08) }

var fileDescriptor_a3d93130ef4c1d08 = []byte{
	// 804 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0x5d, 0x8f, 0x1b, 0x35,
	0x14, 0x25, 0xdf, 0x9b, 0x3b, 0xfb, 0x55, 0xb7, 0xdd, 0x9a, 0x15, 0x55, 0xd3, 0x45, 0x82, 0xf0,
	0x12, 0x55, 0xe9, 0x03, 0xe2, 0x31, 0xb4, 0x0b, 0xca, 0x43, 0x11, 0x9a, 0x80, 0x58, 0x24, 0x50,
	0x30, 0xe3, 0x9b, 0xc4, 0xda, 0x1d, 0x7b, 0xb0, 0x3d, 0xab, 0xe6, 0xf7, 0xf0, 0xce, 0x7f, 0xe0,
	0x2f, 0xf0, 0x7f, 0x90, 0x90, 0xaf, 0x67, 0xd2, 0xc2, 0xb2, 0x2c, 0x48, 0xc9, 0x03, 0x6f, 0xf6,
	0x39, 0xc7, 0xe7, 0x5e, 0x9f, 0xb1, 0x9d, 0xc0, 0x91, 0x13, 0x0b, 0x5c, 0x96, 0xc2, 0xca, 0x51,
	0x61, 0x8d, 0x37, 0xec, 0x64, 0x89, 0xea, 0x27, 0xa5, 0x47, 0xce, 0x5e, 0x8f, 0x0c, 0xa1, 0xea,
	0x5a, 0x78, 0x3c, 0xdd, 0xcf, 0x4c, 0x9e, 0x1b, 0x1d, 0x55, 0x67, 0xbf, 0x77, 0xa0, 0x3f, 0xab,
	0x57, 0xb2, 0x43, 0x68, 0x2a, 0xc9, 0x1b, 0x83, 0xc6, 0xb0, 0x95, 0x36, 0x95, 0x64, 0xef, 0xc2,
	0x9e, 0xb1, 0x12, 0xed, 0x5c, 0x49, 0xde, 0x24, 0xb4, 0x47, 0xf3, 0xa9, 0x64, 0x0c, 0xda, 0x7e,
	0x5d, 0x20, 0x6f, 0x0d, 0x1a, 0xc3, 0x7e, 0x4a, 0x63, 0xf6, 0x14, 0xf6, 0x37, 0x5d, 0xcc, 0x9d,
	0xe6, 0x6d, 0xe2, 0x92, 0x0d, 0x36, 0xd3, 0xec, 0x09, 0x24, 0x59, 0xe9, 0xbc, 0xc9, 0xa3, 0x69,
	0x87, 0x4c, 0xa1, 0x86, 0xa6, 0x92, 0x3d, 0x83, 0x07, 0xf8, 0x3a, 0x5b, 0x09, 0xbd, 0xc4, 0xb9,
	0xc4, 0x2b, 0x75, 0x8d, 0x76, 0x1d, 0x94, 0x5d, 0x52, 0xb2, 0x9a, 0x7b, 0x59, 0x51, 0x53, 0x19,
	0xaa, 0xe2, 0xeb, 0xc2, 0xa2, 0x73, 0x73, 0x2d, 0x72, 0xe4, 0xbd, 0x58, 0xb5, 0xc2, 0xbe, 0x10,
	0x39, 0xb2, 0xc7, 0x00, 0x1b, 0x89, 0xe1, 0x7b, 0x24, 0xe8, 0xd7, 0x02, 0xc3, 0x4e, 0x61, 0xcf,
	0xe2, 0xa2, 0xd4, 0x12, 0x25, 0xef, 0x0f, 0x1a, 0xc3, 0xbd, 0x74, 0x33, 0x0f, 0x4b, 0xe3, 0x78,
	0xbe, 0x40, 0xe4, 0x30, 0x68, 0x0c, 0x9b, 0x69, 0x3f, 0x22, 0x9f, 0x21, 0xb2, 0xf7, 0xe1, 0xa0,
	0xa2, 0x73, 0xf4, 0x2b, 0x23, 0x79, 0x42, 0xe6, 0xfb, 0x11, 0x7c, 0x45, 0x58, 0xe8, 0x30, 0x5b,
	0x61, 0x76, 0x39, 0x77, 0x5e, 0xf8, 0xd2, 0xf1, 0xfd, 0xd8, 0x21, 0x61, 0x33, 0x82, 0xd8, 0x09,
	0x74, 0x2b, 0xf2, 0x80, 0xc8, 0x6a, 0x16, 0x70, 0x8b, 0xc2, 0x19, 0xcd, 0x0f, 0x23, 0x1e, 0x67,
	0x6c, 0x00, 0x89, 0x44, 0x97, 0x59, 0x55, 0x78, 0x65, 0x34, 0x3f, 0x8a, 0x8e, 0x6f, 0x41, 0xec,
	0x3e, 0x74, 0x4c, 0x11, 0x92, 0x3b, 0xa6, 0xe4, 0xda, 0xa6, 0x98, 0x4a, 0xf6, 0x08, 0x7a, 0xa6,
	0x88, 0x31, 0xdd, 0x8b, 0x7e, 0xa6, 0xa0, 0x84, 0x18, 0xb4, 0x73, 0xcc, 0x0d, 0x67, 0xf1, 0x73,
	0x86, 0x71, 0x68, 0x7b, 0x69, 0x8c, 0x74, 0x75, 0xdb, 0xf7, 0x63, 0x11, 0xc2, 0xaa, 0xb6, 0x9f,
	0x40, 0x52, 0x27, 0x35, 0x17, 0x9e, 0x3f, 0x20, 0x05, 0xd4, 0xd0, 0xc4, 0x87, 0xf8, 0x68, 0x9b,
	0x91, 0x7f, 0x18, 0x93, 0xaf, 0x90, 0x8a, 0xb6, 0x28, 0x7c, 0xa4, 0x4f, 0x2a, 0x3a, 0x22, 0x91,
	0x2e, 0x0b, 0x59, 0xd3, 0x8f, 0x22, 0x5d, 0x21, 0x13, 0xcf, 0x26, 0xd0, 0x93, 0xe8, 0x85, 0xba,
	0x72, 0x9c, 0x0f, 0x5a, 0xc3, 0x64, 0xfc, 0xe1, 0xe8, 0xef, 0x0f, 0xfd, 0x68, 0x73, 0xc4, 0x5f,
	0x92, 0x3e, 0xad, 0xd7, 0x9d, 0xfd, 0xd2, 0x80, 0xa3, 0xbf, 0x90, 0x37, 0x6e, 0xc1, 0x9f, 0x8e,
	0xf5, 0xe6, 0x26, 0xbc, 0x39, 0xd6, 0x53, 0xc9, 0x3e, 0x80, 0xa3, 0x78, 0x51, 0xa2, 0x6f, 0x50,
	0xb5, 0x48, 0x75, 0x40, 0x70, 0x34, 0x8e, 0xf9, 0x2b, 0x8f, 0x79, 0xe0, 0xdb, 0xc4, 0x77, 0xc3,
	0x74, 0x2a, 0xd9, 0x43, 0xe8, 0xba, 0xcb, 0xf2, 0xcd, 0x95, 0xe8, 0xb8, 0xcb, 0x72, 0x2a, 0xd9,
	0x31, 0xb4, 0x74, 0x99, 0xd3, 0xe1, 0xef, 0xa4, 0x61, 0x78, 0xf6, 0x73, 0x13, 0xee, 0x6d, 0x1a,
	0x4e, 0xd1, 0x15, 0x46, 0x3b, 0x64, 0x9f, 0x40, 0x17, 0xb5, 0x57, 0x7e, 0x4d, 0x6d, 0x27, 0xe3,
	0xa7, 0x77, 0x06, 0x91, 0x56, 0x0b, 0xd8, 0x73, 0xe8, 0x14, 0x62, 0x89, 0x96, 0xb6, 0x95, 0x8c,
	0x1f, 0xdf, 0xb6, 0xf2, 0xcb, 0x20, 0x4a, 0xa3, 0x96, 0x7d, 0x0c, 0x9d, 0xd0, 0xb8, 0xe3, 0x2d,
	0xca, 0xfd, 0x5f, 0x94, 0x8b, 0xfa, 0x50, 0x0d, 0xad, 0x35, 0x96, 0xb6, 0xff, 0x0f, 0xd5, 0xce,
	0x83, 0x28, 0x8d, 0x5a, 0xf6, 0x0c, 0xda, 0x4a, 0x2f, 0x0c, 0x45, 0x93, 0x8c, 0xdf, 0xbb, 0x6d,
	0xcd, 0x54, 0x2f, 0x4c, 0x4a, 0xca, 0xf1, 0xaf, 0x3d, 0x60, 0xaf, 0xd6, 0x9b, 0xea, 0x33, 0xb4,
	0xd7, 0x2a, 0x43, 0xf6, 0x3d, 0x24, 0x93, 0xa2, 0xb8, 0x5a, 0xa7, 0x74, 0x40, 0xd9, 0xdd, 0x6d,
	0x9f, 0x7e, 0x74, 0xf7, 0xce, 0xaa, 0x6f, 0x70, 0xf6, 0xce, 0x5b, 0xf6, 0xbe, 0xb4, 0x7a, 0xeb,
	0xf6, 0x73, 0x38, 0x20, 0xfb, 0xf3, 0xea, 0x0d, 0xdc, 0x61, 0xff, 0x85, 0x50, 0x76, 0x67, 0xf6,
	0x2f, 0x84, 0xce, 0xf0, 0x6a, 0xeb, 0xf6, 0xdf, 0x01, 0x7c, 0xb5, 0x2e, 0xf0, 0xc5, 0xca, 0x18,
	0xb7, 0x93, 0x6c, 0xc8, 0xdd, 0xe8, 0x85, 0xb2, 0xf9, 0xd6, 0xed, 0x7f, 0x80, 0xc3, 0xf3, 0xf8,
	0x7b, 0xb4, 0xab, 0x0a, 0x5f, 0x43, 0xeb, 0x73, 0xf4, 0x5b, 0xb7, 0xbd, 0x80, 0xee, 0x0c, 0x85,
	0xcd, 0x56, 0xb7, 0x3b, 0x7f, 0x2a, 0x1c, 0x7e, 0xb3, 0x42, 0x8b, 0xff, 0xc9, 0x79, 0xfc, 0x5b,
	0x0b, 0x8e, 0x6f, 0xdc, 0xe0, 0x0b, 0xe8, 0x4e, 0x96, 0x16, 0x71, 0xfb, 0x97, 0xf7, 0x5b, 0xe8,
	0x85, 0x67, 0xc1, 0xed, 0xc0, 0xfa, 0x22, 0xfc, 0x88, 0xef, 0xe4, 0xc5, 0xf9, 0xbf, 0x7d, 0xd4,
	0x1f, 0xbb, 0xf4, 0xb7, 0xf3, 0xf9, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x5e, 0x7c, 0xbc,
	0xaf, 0x0a, 0x00, 0x00,
}
