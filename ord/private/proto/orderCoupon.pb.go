// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderCoupon.proto

package geiqin_srv_ord_private

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderCoupon struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId              int64    `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	CustomerId           int64    `protobuf:"varint,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CouponId             int64    `protobuf:"varint,4,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	CouponNum            int32    `protobuf:"varint,5,opt,name=coupon_num,json=couponNum,proto3" json:"coupon_num,omitempty"`
	Method               string   `protobuf:"bytes,6,opt,name=Method,proto3" json:"Method,omitempty"`
	CouponPrice          float32  `protobuf:"fixed32,7,opt,name=coupon_price,json=couponPrice,proto3" json:"coupon_price,omitempty"`
	CreatedAt            string   `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCoupon) Reset()         { *m = OrderCoupon{} }
func (m *OrderCoupon) String() string { return proto.CompactTextString(m) }
func (*OrderCoupon) ProtoMessage()    {}
func (*OrderCoupon) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f6d0333e07ddebc, []int{0}
}

func (m *OrderCoupon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCoupon.Unmarshal(m, b)
}
func (m *OrderCoupon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCoupon.Marshal(b, m, deterministic)
}
func (m *OrderCoupon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCoupon.Merge(m, src)
}
func (m *OrderCoupon) XXX_Size() int {
	return xxx_messageInfo_OrderCoupon.Size(m)
}
func (m *OrderCoupon) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCoupon.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCoupon proto.InternalMessageInfo

func (m *OrderCoupon) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrderCoupon) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *OrderCoupon) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *OrderCoupon) GetCouponId() int64 {
	if m != nil {
		return m.CouponId
	}
	return 0
}

func (m *OrderCoupon) GetCouponNum() int32 {
	if m != nil {
		return m.CouponNum
	}
	return 0
}

func (m *OrderCoupon) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *OrderCoupon) GetCouponPrice() float32 {
	if m != nil {
		return m.CouponPrice
	}
	return 0
}

func (m *OrderCoupon) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *OrderCoupon) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type OrderCouponResponse struct {
	Entity               *OrderCoupon   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager         `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*OrderCoupon `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error         `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info          `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OrderCouponResponse) Reset()         { *m = OrderCouponResponse{} }
func (m *OrderCouponResponse) String() string { return proto.CompactTextString(m) }
func (*OrderCouponResponse) ProtoMessage()    {}
func (*OrderCouponResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f6d0333e07ddebc, []int{1}
}

func (m *OrderCouponResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCouponResponse.Unmarshal(m, b)
}
func (m *OrderCouponResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCouponResponse.Marshal(b, m, deterministic)
}
func (m *OrderCouponResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCouponResponse.Merge(m, src)
}
func (m *OrderCouponResponse) XXX_Size() int {
	return xxx_messageInfo_OrderCouponResponse.Size(m)
}
func (m *OrderCouponResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCouponResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCouponResponse proto.InternalMessageInfo

func (m *OrderCouponResponse) GetEntity() *OrderCoupon {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *OrderCouponResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *OrderCouponResponse) GetItems() []*OrderCoupon {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *OrderCouponResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *OrderCouponResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*OrderCoupon)(nil), "geiqin.srv.ord.private.OrderCoupon")
	proto.RegisterType((*OrderCouponResponse)(nil), "geiqin.srv.ord.private.OrderCouponResponse")
}

func init() {
	proto.RegisterFile("orderCoupon.proto", fileDescriptor_6f6d0333e07ddebc)
}

var fileDescriptor_6f6d0333e07ddebc = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4f, 0x6b, 0xd4, 0x40,
	0x14, 0x37, 0x49, 0x93, 0x6e, 0x5e, 0x8a, 0xe0, 0x08, 0x25, 0x56, 0x8b, 0xe9, 0x7a, 0x09, 0x08,
	0x41, 0xd2, 0x93, 0x78, 0xaa, 0x55, 0x24, 0x07, 0xb5, 0x4c, 0x11, 0x51, 0x84, 0x12, 0x33, 0xaf,
	0xdd, 0x01, 0x93, 0x89, 0x93, 0xc9, 0x82, 0x5f, 0xc2, 0xef, 0xe1, 0x07, 0xf3, 0x7b, 0xc8, 0xbc,
	0xcc, 0xe2, 0x1e, 0x5c, 0xd9, 0x1e, 0xf6, 0xf8, 0x7e, 0xff, 0x5e, 0xf2, 0x7b, 0x30, 0x70, 0x4f,
	0x69, 0x81, 0xfa, 0x5c, 0x8d, 0xbd, 0xea, 0x8a, 0x5e, 0x2b, 0xa3, 0xd8, 0xe1, 0x0d, 0xca, 0xef,
	0xb2, 0x2b, 0x06, 0xbd, 0x2c, 0x94, 0x16, 0x45, 0xaf, 0xe5, 0xb2, 0x36, 0x78, 0x74, 0xd0, 0xa8,
	0xb6, 0x5d, 0xa9, 0xe6, 0x3f, 0x7d, 0x48, 0xde, 0xff, 0xf5, 0xb2, 0xbb, 0xe0, 0x4b, 0x91, 0x7a,
	0x99, 0x97, 0x07, 0xdc, 0x97, 0x82, 0x3d, 0x80, 0x19, 0x45, 0x5f, 0x49, 0x91, 0xfa, 0x84, 0xee,
	0xd3, 0x5c, 0x09, 0xf6, 0x18, 0x92, 0x66, 0x1c, 0x8c, 0x6a, 0x27, 0x36, 0x20, 0x16, 0x56, 0x50,
	0x25, 0xd8, 0x43, 0x88, 0x1b, 0x4a, 0xb5, 0xf4, 0x1e, 0xd1, 0xb3, 0x09, 0xa8, 0x04, 0x3b, 0x06,
	0x70, 0x64, 0x37, 0xb6, 0x69, 0x98, 0x79, 0x79, 0xc8, 0x9d, 0xfc, 0xdd, 0xd8, 0xb2, 0x43, 0x88,
	0xde, 0xa2, 0x59, 0x28, 0x91, 0x46, 0x99, 0x97, 0xc7, 0xdc, 0x4d, 0xec, 0x04, 0x0e, 0x9c, 0xad,
	0xd7, 0xb2, 0xc1, 0x74, 0x3f, 0xf3, 0x72, 0x9f, 0x27, 0x13, 0x76, 0x61, 0x21, 0x4a, 0xd6, 0x58,
	0x1b, 0x14, 0x57, 0xb5, 0x49, 0x67, 0x64, 0x8f, 0x1d, 0x72, 0x66, 0x2c, 0x3d, 0xf6, 0x62, 0x45,
	0xc7, 0x13, 0xed, 0x90, 0x33, 0x33, 0xff, 0xe5, 0xc3, 0xfd, 0xb5, 0x42, 0x38, 0x0e, 0xbd, 0xea,
	0x06, 0x64, 0x2f, 0x20, 0xc2, 0xce, 0x48, 0xf3, 0x83, 0xca, 0x49, 0xca, 0x27, 0xc5, 0xbf, 0xfb,
	0x2d, 0xd6, 0xcd, 0xce, 0xc2, 0x4e, 0x21, 0xec, 0xeb, 0x1b, 0xd4, 0x54, 0x61, 0x52, 0x1e, 0x6f,
	0xf2, 0x5e, 0x58, 0x11, 0x9f, 0xb4, 0xec, 0x39, 0x84, 0xd2, 0x60, 0x3b, 0xa4, 0x41, 0x16, 0x6c,
	0xbb, 0x70, 0x72, 0xd8, 0x7d, 0xa8, 0xb5, 0xd2, 0xd4, 0xfa, 0x7f, 0xf6, 0xbd, 0xb6, 0x22, 0x3e,
	0x69, 0xd9, 0x33, 0xd8, 0x93, 0xdd, 0xb5, 0xa2, 0x5b, 0x24, 0xe5, 0xa3, 0x4d, 0x9e, 0xaa, 0xbb,
	0x56, 0x9c, 0x94, 0xe5, 0xef, 0x00, 0xd8, 0xda, 0xf6, 0x4b, 0xd4, 0x4b, 0x7b, 0x80, 0x2f, 0x10,
	0x9d, 0x53, 0xdd, 0x6c, 0x9b, 0x6f, 0x3e, 0x7a, 0xba, 0xcd, 0x8f, 0xb9, 0x33, 0xcc, 0xef, 0xd8,
	0xf4, 0x0f, 0x74, 0xad, 0x5d, 0xa5, 0xbf, 0xc2, 0x6f, 0xb8, 0xa3, 0xf4, 0x4f, 0x10, 0xbc, 0x41,
	0xb3, 0x93, 0xe8, 0xcf, 0x10, 0x5d, 0x62, 0xad, 0x9b, 0x05, 0x3b, 0xd9, 0x64, 0x7c, 0x59, 0x0f,
	0xf8, 0x71, 0x81, 0x1a, 0x6f, 0x99, 0xfd, 0x35, 0xa2, 0xb7, 0xe2, 0xf4, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xfe, 0x93, 0x09, 0x4c, 0x66, 0x04, 0x00, 0x00,
}
