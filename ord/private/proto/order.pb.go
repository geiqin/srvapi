// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package geiqin_srv_ord_private

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Order struct {
	Id                   int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderSn              string         `protobuf:"bytes,2,opt,name=order_sn,json=orderSn,proto3" json:"order_sn,omitempty"`
	TotalFee             float32        `protobuf:"fixed32,3,opt,name=total_fee,json=totalFee,proto3" json:"total_fee,omitempty"`
	TotalNum             int32          `protobuf:"varint,4,opt,name=total_num,json=totalNum,proto3" json:"total_num,omitempty"`
	TotalWeight          float32        `protobuf:"fixed32,5,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight,omitempty"`
	OrderType            string         `protobuf:"bytes,6,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	PayType              string         `protobuf:"bytes,7,opt,name=pay_type,json=payType,proto3" json:"pay_type,omitempty"`
	CanDelivery          bool           `protobuf:"varint,8,opt,name=can_delivery,json=canDelivery,proto3" json:"can_delivery,omitempty"`
	CanCod               bool           `protobuf:"varint,9,opt,name=can_cod,json=canCod,proto3" json:"can_cod,omitempty"`
	CustomerId           int64          `protobuf:"varint,10,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Payment              float32        `protobuf:"fixed32,11,opt,name=payment,proto3" json:"payment,omitempty"`
	ModifyPrice          float32        `protobuf:"fixed32,12,opt,name=modify_price,json=modifyPrice,proto3" json:"modify_price,omitempty"`
	IsFree               bool           `protobuf:"varint,13,opt,name=is_free,json=isFree,proto3" json:"is_free,omitempty"`
	PaidFee              float32        `protobuf:"fixed32,14,opt,name=paid_fee,json=paidFee,proto3" json:"paid_fee,omitempty"`
	ExpressFee           float32        `protobuf:"fixed32,15,opt,name=express_fee,json=expressFee,proto3" json:"express_fee,omitempty"`
	RefundedFee          float32        `protobuf:"fixed32,16,opt,name=refunded_fee,json=refundedFee,proto3" json:"refunded_fee,omitempty"`
	DiscountFee          float32        `protobuf:"fixed32,17,opt,name=discount_fee,json=discountFee,proto3" json:"discount_fee,omitempty"`
	Currency             string         `protobuf:"bytes,23,opt,name=currency,proto3" json:"currency,omitempty"`
	PointsFee            int32          `protobuf:"varint,24,opt,name=points_fee,json=pointsFee,proto3" json:"points_fee,omitempty"`
	RewardPoints         int32          `protobuf:"varint,25,opt,name=reward_points,json=rewardPoints,proto3" json:"reward_points,omitempty"`
	Status               string         `protobuf:"bytes,26,opt,name=status,proto3" json:"status,omitempty"`
	PayStatus            string         `protobuf:"bytes,27,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	RefundStatus         string         `protobuf:"bytes,28,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status,omitempty"`
	DeliverStatus        string         `protobuf:"bytes,29,opt,name=deliver_status,json=deliverStatus,proto3" json:"deliver_status,omitempty"`
	TradeMemo            string         `protobuf:"bytes,30,opt,name=trade_memo,json=tradeMemo,proto3" json:"trade_memo,omitempty"`
	BuyerMessage         string         `protobuf:"bytes,31,opt,name=buyer_message,json=buyerMessage,proto3" json:"buyer_message,omitempty"`
	BranchId             int32          `protobuf:"varint,32,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	SellerFlag           string         `protobuf:"bytes,33,opt,name=seller_flag,json=sellerFlag,proto3" json:"seller_flag,omitempty"`
	OutUserId            string         `protobuf:"bytes,38,opt,name=out_user_id,json=outUserId,proto3" json:"out_user_id,omitempty"`
	OutOrderNo           string         `protobuf:"bytes,39,opt,name=out_order_no,json=outOrderNo,proto3" json:"out_order_no,omitempty"`
	PlatformSource       string         `protobuf:"bytes,40,opt,name=platform_source,json=platformSource,proto3" json:"platform_source,omitempty"`
	Flag                 int32          `protobuf:"varint,41,opt,name=flag,proto3" json:"flag,omitempty"`
	Memo                 string         `protobuf:"bytes,42,opt,name=memo,proto3" json:"memo,omitempty"`
	Safeguarded          bool           `protobuf:"varint,43,opt,name=safeguarded,proto3" json:"safeguarded,omitempty"`
	RefType              string         `protobuf:"bytes,44,opt,name=ref_type,json=refType,proto3" json:"ref_type,omitempty"`
	RefOrderId           int64          `protobuf:"varint,45,opt,name=ref_order_id,json=refOrderId,proto3" json:"ref_order_id,omitempty"`
	PaidAt               string         `protobuf:"bytes,46,opt,name=paid_at,json=paidAt,proto3" json:"paid_at,omitempty"`
	ShippedAt            string         `protobuf:"bytes,47,opt,name=shipped_at,json=shippedAt,proto3" json:"shipped_at,omitempty"`
	SignedAt             string         `protobuf:"bytes,48,opt,name=signed_at,json=signedAt,proto3" json:"signed_at,omitempty"`
	RefundedAt           string         `protobuf:"bytes,49,opt,name=refunded_at,json=refundedAt,proto3" json:"refunded_at,omitempty"`
	FinishedAt           string         `protobuf:"bytes,50,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	CreatedAt            string         `protobuf:"bytes,51,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string         `protobuf:"bytes,52,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Details              []*OrderDetail `protobuf:"bytes,53,rep,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Order) GetOrderSn() string {
	if m != nil {
		return m.OrderSn
	}
	return ""
}

func (m *Order) GetTotalFee() float32 {
	if m != nil {
		return m.TotalFee
	}
	return 0
}

func (m *Order) GetTotalNum() int32 {
	if m != nil {
		return m.TotalNum
	}
	return 0
}

func (m *Order) GetTotalWeight() float32 {
	if m != nil {
		return m.TotalWeight
	}
	return 0
}

func (m *Order) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *Order) GetPayType() string {
	if m != nil {
		return m.PayType
	}
	return ""
}

func (m *Order) GetCanDelivery() bool {
	if m != nil {
		return m.CanDelivery
	}
	return false
}

func (m *Order) GetCanCod() bool {
	if m != nil {
		return m.CanCod
	}
	return false
}

func (m *Order) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Order) GetPayment() float32 {
	if m != nil {
		return m.Payment
	}
	return 0
}

func (m *Order) GetModifyPrice() float32 {
	if m != nil {
		return m.ModifyPrice
	}
	return 0
}

func (m *Order) GetIsFree() bool {
	if m != nil {
		return m.IsFree
	}
	return false
}

func (m *Order) GetPaidFee() float32 {
	if m != nil {
		return m.PaidFee
	}
	return 0
}

func (m *Order) GetExpressFee() float32 {
	if m != nil {
		return m.ExpressFee
	}
	return 0
}

func (m *Order) GetRefundedFee() float32 {
	if m != nil {
		return m.RefundedFee
	}
	return 0
}

func (m *Order) GetDiscountFee() float32 {
	if m != nil {
		return m.DiscountFee
	}
	return 0
}

func (m *Order) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Order) GetPointsFee() int32 {
	if m != nil {
		return m.PointsFee
	}
	return 0
}

func (m *Order) GetRewardPoints() int32 {
	if m != nil {
		return m.RewardPoints
	}
	return 0
}

func (m *Order) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Order) GetPayStatus() string {
	if m != nil {
		return m.PayStatus
	}
	return ""
}

func (m *Order) GetRefundStatus() string {
	if m != nil {
		return m.RefundStatus
	}
	return ""
}

func (m *Order) GetDeliverStatus() string {
	if m != nil {
		return m.DeliverStatus
	}
	return ""
}

func (m *Order) GetTradeMemo() string {
	if m != nil {
		return m.TradeMemo
	}
	return ""
}

func (m *Order) GetBuyerMessage() string {
	if m != nil {
		return m.BuyerMessage
	}
	return ""
}

func (m *Order) GetBranchId() int32 {
	if m != nil {
		return m.BranchId
	}
	return 0
}

func (m *Order) GetSellerFlag() string {
	if m != nil {
		return m.SellerFlag
	}
	return ""
}

func (m *Order) GetOutUserId() string {
	if m != nil {
		return m.OutUserId
	}
	return ""
}

func (m *Order) GetOutOrderNo() string {
	if m != nil {
		return m.OutOrderNo
	}
	return ""
}

func (m *Order) GetPlatformSource() string {
	if m != nil {
		return m.PlatformSource
	}
	return ""
}

func (m *Order) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *Order) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *Order) GetSafeguarded() bool {
	if m != nil {
		return m.Safeguarded
	}
	return false
}

func (m *Order) GetRefType() string {
	if m != nil {
		return m.RefType
	}
	return ""
}

func (m *Order) GetRefOrderId() int64 {
	if m != nil {
		return m.RefOrderId
	}
	return 0
}

func (m *Order) GetPaidAt() string {
	if m != nil {
		return m.PaidAt
	}
	return ""
}

func (m *Order) GetShippedAt() string {
	if m != nil {
		return m.ShippedAt
	}
	return ""
}

func (m *Order) GetSignedAt() string {
	if m != nil {
		return m.SignedAt
	}
	return ""
}

func (m *Order) GetRefundedAt() string {
	if m != nil {
		return m.RefundedAt
	}
	return ""
}

func (m *Order) GetFinishedAt() string {
	if m != nil {
		return m.FinishedAt
	}
	return ""
}

func (m *Order) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Order) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Order) GetDetails() []*OrderDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

type OrderDetail struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId              int64    `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ItemId               int64    `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	SkuId                int64    `protobuf:"varint,4,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	ItemSn               string   `protobuf:"bytes,5,opt,name=item_sn,json=itemSn,proto3" json:"item_sn,omitempty"`
	SkuSn                string   `protobuf:"bytes,6,opt,name=sku_sn,json=skuSn,proto3" json:"sku_sn,omitempty"`
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Weight               float32  `protobuf:"fixed32,8,opt,name=weight,proto3" json:"weight,omitempty"`
	Price                float32  `protobuf:"fixed32,9,opt,name=price,proto3" json:"price,omitempty"`
	Cost                 float32  `protobuf:"fixed32,10,opt,name=cost,proto3" json:"cost,omitempty"`
	Num                  int32    `protobuf:"varint,11,opt,name=num,proto3" json:"num,omitempty"`
	SendNum              int32    `protobuf:"varint,12,opt,name=send_num,json=sendNum,proto3" json:"send_num,omitempty"`
	Amount               float32  `protobuf:"fixed32,13,opt,name=amount,proto3" json:"amount,omitempty"`
	Points               int32    `protobuf:"varint,14,opt,name=points,proto3" json:"points,omitempty"`
	ItemType             string   `protobuf:"bytes,15,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`
	Additional           string   `protobuf:"bytes,16,opt,name=additional,proto3" json:"additional,omitempty"`
	PresentId            int64    `protobuf:"varint,19,opt,name=present_id,json=presentId,proto3" json:"present_id,omitempty"`
	OriginPrice          float32  `protobuf:"fixed32,20,opt,name=origin_price,json=originPrice,proto3" json:"origin_price,omitempty"`
	ModifyPrice          float32  `protobuf:"fixed32,21,opt,name=modify_price,json=modifyPrice,proto3" json:"modify_price,omitempty"`
	IsVipBought          bool     `protobuf:"varint,22,opt,name=is_vip_bought,json=isVipBought,proto3" json:"is_vip_bought,omitempty"`
	DistributionProfit   float32  `protobuf:"fixed32,23,opt,name=distribution_profit,json=distributionProfit,proto3" json:"distribution_profit,omitempty"`
	CreatedAt            string   `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderDetail) Reset()         { *m = OrderDetail{} }
func (m *OrderDetail) String() string { return proto.CompactTextString(m) }
func (*OrderDetail) ProtoMessage()    {}
func (*OrderDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *OrderDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderDetail.Unmarshal(m, b)
}
func (m *OrderDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderDetail.Marshal(b, m, deterministic)
}
func (m *OrderDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderDetail.Merge(m, src)
}
func (m *OrderDetail) XXX_Size() int {
	return xxx_messageInfo_OrderDetail.Size(m)
}
func (m *OrderDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderDetail.DiscardUnknown(m)
}

var xxx_messageInfo_OrderDetail proto.InternalMessageInfo

func (m *OrderDetail) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrderDetail) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *OrderDetail) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *OrderDetail) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *OrderDetail) GetItemSn() string {
	if m != nil {
		return m.ItemSn
	}
	return ""
}

func (m *OrderDetail) GetSkuSn() string {
	if m != nil {
		return m.SkuSn
	}
	return ""
}

func (m *OrderDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrderDetail) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *OrderDetail) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderDetail) GetCost() float32 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *OrderDetail) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *OrderDetail) GetSendNum() int32 {
	if m != nil {
		return m.SendNum
	}
	return 0
}

func (m *OrderDetail) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderDetail) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *OrderDetail) GetItemType() string {
	if m != nil {
		return m.ItemType
	}
	return ""
}

func (m *OrderDetail) GetAdditional() string {
	if m != nil {
		return m.Additional
	}
	return ""
}

func (m *OrderDetail) GetPresentId() int64 {
	if m != nil {
		return m.PresentId
	}
	return 0
}

func (m *OrderDetail) GetOriginPrice() float32 {
	if m != nil {
		return m.OriginPrice
	}
	return 0
}

func (m *OrderDetail) GetModifyPrice() float32 {
	if m != nil {
		return m.ModifyPrice
	}
	return 0
}

func (m *OrderDetail) GetIsVipBought() bool {
	if m != nil {
		return m.IsVipBought
	}
	return false
}

func (m *OrderDetail) GetDistributionProfit() float32 {
	if m != nil {
		return m.DistributionProfit
	}
	return 0
}

func (m *OrderDetail) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *OrderDetail) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

//订单数据请求
type OrderRequest struct {
	CustomerId           int64    `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CartId               string   `protobuf:"bytes,2,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
	ItemId               int64    `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	SkuId                int64    `protobuf:"varint,4,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num                  int32    `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	Directed             bool     `protobuf:"varint,6,opt,name=directed,proto3" json:"directed,omitempty"`
	AddressId            int64    `protobuf:"varint,7,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	Message              string   `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	VipcardId            int64    `protobuf:"varint,9,opt,name=vipcard_id,json=vipcardId,proto3" json:"vipcard_id,omitempty"`
	PayMethod            int32    `protobuf:"varint,10,opt,name=pay_method,json=payMethod,proto3" json:"pay_method,omitempty"`
	CouponIds            []int64  `protobuf:"varint,11,rep,packed,name=coupon_ids,json=couponIds,proto3" json:"coupon_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (m *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(m, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *OrderRequest) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

func (m *OrderRequest) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *OrderRequest) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *OrderRequest) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *OrderRequest) GetDirected() bool {
	if m != nil {
		return m.Directed
	}
	return false
}

func (m *OrderRequest) GetAddressId() int64 {
	if m != nil {
		return m.AddressId
	}
	return 0
}

func (m *OrderRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *OrderRequest) GetVipcardId() int64 {
	if m != nil {
		return m.VipcardId
	}
	return 0
}

func (m *OrderRequest) GetPayMethod() int32 {
	if m != nil {
		return m.PayMethod
	}
	return 0
}

func (m *OrderRequest) GetCouponIds() []int64 {
	if m != nil {
		return m.CouponIds
	}
	return nil
}

type OrderResponse struct {
	Entity               *Order   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*Order `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info    `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderResponse) Reset()         { *m = OrderResponse{} }
func (m *OrderResponse) String() string { return proto.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()    {}
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3}
}

func (m *OrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderResponse.Unmarshal(m, b)
}
func (m *OrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderResponse.Marshal(b, m, deterministic)
}
func (m *OrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderResponse.Merge(m, src)
}
func (m *OrderResponse) XXX_Size() int {
	return xxx_messageInfo_OrderResponse.Size(m)
}
func (m *OrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderResponse proto.InternalMessageInfo

func (m *OrderResponse) GetEntity() *Order {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *OrderResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *OrderResponse) GetItems() []*Order {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *OrderResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *OrderResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Order)(nil), "geiqin.srv.ord.private.Order")
	proto.RegisterType((*OrderDetail)(nil), "geiqin.srv.ord.private.OrderDetail")
	proto.RegisterType((*OrderRequest)(nil), "geiqin.srv.ord.private.OrderRequest")
	proto.RegisterType((*OrderResponse)(nil), "geiqin.srv.ord.private.OrderResponse")
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077) }

var fileDescriptor_cd01338c35d87077 = []byte{
	// 1395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0xcd, 0x76, 0x13, 0x37,
	0x14, 0x6e, 0xec, 0xd8, 0xb1, 0x35, 0x4e, 0x80, 0x01, 0xc2, 0x10, 0xfe, 0x9c, 0x50, 0x4a, 0xfa,
	0x17, 0x68, 0x28, 0xcb, 0x2e, 0x42, 0x28, 0x3d, 0x5e, 0x04, 0xd2, 0x31, 0x94, 0xee, 0xe6, 0x28,
	0xa3, 0x3b, 0xb6, 0x0e, 0x1e, 0x69, 0x90, 0x34, 0xa1, 0xde, 0xf5, 0x2d, 0xfa, 0x32, 0x7d, 0x90,
	0x2e, 0xfa, 0x02, 0x7d, 0x8b, 0x1e, 0xdd, 0xab, 0x09, 0x39, 0xa1, 0x84, 0xb6, 0x27, 0x8b, 0x76,
	0x67, 0x7d, 0xf7, 0xbb, 0xba, 0xd2, 0x9d, 0x4f, 0xdf, 0x3d, 0x66, 0x91, 0x36, 0x02, 0xcc, 0x56,
	0x65, 0xb4, 0xd3, 0xf1, 0xea, 0x04, 0xe4, 0x6b, 0xa9, 0xb6, 0xac, 0x39, 0xdc, 0xd2, 0x46, 0x6c,
	0x55, 0x46, 0x1e, 0x72, 0x07, 0x6b, 0x83, 0x5c, 0x97, 0xa5, 0x56, 0xc4, 0xda, 0xf8, 0x83, 0xb1,
	0xce, 0x33, 0x9f, 0x15, 0xaf, 0xb0, 0x96, 0x14, 0xc9, 0xc2, 0x70, 0x61, 0xb3, 0x9d, 0xb6, 0xa4,
	0x88, 0xaf, 0xb2, 0x1e, 0x6e, 0x97, 0x59, 0x95, 0xb4, 0x86, 0x0b, 0x9b, 0xfd, 0x74, 0x09, 0xd7,
	0x63, 0x15, 0x5f, 0x63, 0x7d, 0xa7, 0x1d, 0x9f, 0x65, 0x05, 0x40, 0xd2, 0x1e, 0x2e, 0x6c, 0xb6,
	0xd2, 0x1e, 0x02, 0x4f, 0x00, 0xde, 0x06, 0x55, 0x5d, 0x26, 0x8b, 0xc3, 0x85, 0xcd, 0x4e, 0x08,
	0x3e, 0xad, 0xcb, 0x78, 0x9d, 0x0d, 0x28, 0xf8, 0x06, 0xe4, 0x64, 0xea, 0x92, 0x0e, 0x26, 0x47,
	0x88, 0xbd, 0x44, 0x28, 0xbe, 0xc1, 0x18, 0xd5, 0x75, 0xf3, 0x0a, 0x92, 0x2e, 0x56, 0xee, 0x23,
	0xf2, 0x7c, 0x5e, 0x81, 0x3f, 0x56, 0xc5, 0xe7, 0x14, 0x5c, 0xa2, 0x63, 0x55, 0x7c, 0x8e, 0xa1,
	0x75, 0x36, 0xc8, 0xb9, 0xca, 0x04, 0xcc, 0xe4, 0x21, 0x98, 0x79, 0xd2, 0x1b, 0x2e, 0x6c, 0xf6,
	0xd2, 0x28, 0xe7, 0xea, 0x71, 0x80, 0xe2, 0x2b, 0x6c, 0xc9, 0x53, 0x72, 0x2d, 0x92, 0x3e, 0x46,
	0xbb, 0x39, 0x57, 0xbb, 0x5a, 0xc4, 0xb7, 0x58, 0x94, 0xd7, 0xd6, 0xe9, 0x12, 0x4c, 0x26, 0x45,
	0xc2, 0xb0, 0x0d, 0xac, 0x81, 0x46, 0x22, 0x4e, 0x98, 0xaf, 0x53, 0x82, 0x72, 0x49, 0x84, 0x87,
	0x6e, 0x96, 0xbe, 0x6c, 0xa9, 0x85, 0x2c, 0xe6, 0x59, 0x65, 0x64, 0x0e, 0xc9, 0x80, 0xee, 0x44,
	0xd8, 0xbe, 0x87, 0x7c, 0x59, 0x69, 0xb3, 0xc2, 0x00, 0x24, 0xcb, 0x54, 0x56, 0xda, 0x27, 0x06,
	0xc2, 0x6d, 0xa4, 0xc0, 0x46, 0xae, 0x34, 0xdb, 0x4a, 0xe1, 0xfb, 0x78, 0x8b, 0x45, 0xf0, 0x53,
	0x65, 0xc0, 0x5a, 0x8c, 0x9e, 0xc3, 0x28, 0x0b, 0x90, 0x27, 0xac, 0xb3, 0x81, 0x81, 0xa2, 0x56,
	0x02, 0x28, 0xff, 0x3c, 0xd5, 0x6d, 0xb0, 0x40, 0x11, 0xd2, 0xe6, 0xba, 0x56, 0x0e, 0x29, 0x17,
	0x88, 0xd2, 0x60, 0x9e, 0xb2, 0xc6, 0x7a, 0x79, 0x6d, 0x0c, 0xa8, 0x7c, 0x9e, 0x5c, 0xc1, 0x7e,
	0x1e, 0xad, 0xfd, 0xa7, 0xa8, 0xb4, 0x54, 0x8e, 0x4e, 0x90, 0xe0, 0xb7, 0xec, 0x13, 0xe2, 0x53,
	0x6f, 0xb3, 0x65, 0x03, 0x6f, 0xb8, 0x11, 0x19, 0x61, 0xc9, 0x55, 0x64, 0x0c, 0x08, 0xdc, 0x47,
	0x2c, 0x5e, 0x65, 0x5d, 0xeb, 0xb8, 0xab, 0x6d, 0xb2, 0x86, 0xbb, 0x87, 0x15, 0xee, 0xcd, 0xe7,
	0x59, 0x88, 0x5d, 0xa3, 0xcf, 0x5c, 0xf1, 0xf9, 0x98, 0xc2, 0xb8, 0xb7, 0xbf, 0x48, 0xc3, 0xb8,
	0x8e, 0x8c, 0x70, 0xe3, 0x40, 0xba, 0xc3, 0x56, 0xc2, 0xc7, 0x6e, 0x58, 0x37, 0x90, 0xb5, 0x1c,
	0xd0, 0xf1, 0x51, 0x29, 0x67, 0xb8, 0x80, 0xac, 0x84, 0x52, 0x27, 0x37, 0xa9, 0x14, 0x22, 0x7b,
	0x50, 0x6a, 0x5f, 0xea, 0xa0, 0x9e, 0x83, 0xc9, 0x4a, 0xb0, 0x96, 0x4f, 0x20, 0xb9, 0x45, 0xa5,
	0x10, 0xdc, 0x23, 0xcc, 0xab, 0xfa, 0xc0, 0x70, 0x95, 0x4f, 0xbd, 0x3a, 0x86, 0xa4, 0x6a, 0x02,
	0x46, 0x28, 0x1e, 0x0b, 0xb3, 0x19, 0x98, 0xac, 0x98, 0xf1, 0x49, 0xb2, 0x8e, 0xf9, 0x8c, 0xa0,
	0x27, 0x33, 0x3e, 0x89, 0x6f, 0xb2, 0x48, 0xd7, 0x2e, 0xab, 0x2d, 0xa9, 0xeb, 0x93, 0x20, 0xea,
	0xda, 0xbd, 0xb0, 0x28, 0xae, 0x21, 0x1b, 0xf8, 0x38, 0xe9, 0x5e, 0xe9, 0xe4, 0x2e, 0xed, 0xa0,
	0x6b, 0x87, 0x6f, 0xf3, 0xa9, 0x8e, 0xef, 0xb2, 0x73, 0xd5, 0x8c, 0xbb, 0x42, 0x9b, 0x32, 0xb3,
	0xba, 0x36, 0x39, 0x24, 0x9b, 0x48, 0x5a, 0x69, 0xe0, 0x31, 0xa2, 0x71, 0xcc, 0x16, 0xf1, 0x10,
	0x9f, 0xe2, 0x19, 0xf1, 0xb7, 0xc7, 0xf0, 0xea, 0x9f, 0x61, 0x06, 0xfe, 0x8e, 0x87, 0x2c, 0xb2,
	0xbc, 0x80, 0x49, 0xcd, 0x8d, 0x00, 0x91, 0x7c, 0x4e, 0x6f, 0xe5, 0x18, 0xe4, 0xb5, 0x69, 0xa0,
	0xa0, 0x97, 0xf6, 0x05, 0xbd, 0x34, 0x03, 0x05, 0xbe, 0xb4, 0x21, 0x4a, 0x2f, 0x9c, 0x57, 0x8a,
	0xe4, 0x4b, 0x7a, 0x2e, 0x06, 0x0a, 0x3c, 0xef, 0x48, 0x78, 0xc5, 0xa3, 0xb0, 0xb9, 0x4b, 0xb6,
	0xe8, 0xbb, 0xfb, 0xe5, 0x0e, 0x3e, 0x6f, 0x3b, 0x95, 0x55, 0x05, 0x18, 0xbb, 0x47, 0x9d, 0x08,
	0xc8, 0x8e, 0xf3, 0x7d, 0xb6, 0x72, 0xa2, 0x28, 0x7a, 0x9f, 0xf4, 0x48, 0xc0, 0x8e, 0xf3, 0x7d,
	0x3e, 0x52, 0x3c, 0x77, 0xc9, 0x57, 0xd4, 0xa5, 0x06, 0x22, 0x42, 0x21, 0x95, 0xb4, 0x53, 0x22,
	0x6c, 0x13, 0xa1, 0x81, 0xa8, 0x7a, 0x6e, 0x80, 0x3b, 0x8a, 0x3f, 0xa0, 0xea, 0x01, 0xa1, 0x70,
	0x5d, 0x89, 0x26, 0xfc, 0x35, 0x85, 0x03, 0xb2, 0xe3, 0xe2, 0x6f, 0xd8, 0x92, 0x00, 0xc7, 0xe5,
	0xcc, 0x26, 0x0f, 0x87, 0xed, 0xcd, 0x68, 0xfb, 0xf6, 0xd6, 0x5f, 0x9b, 0xec, 0x16, 0xb6, 0xe1,
	0x31, 0x72, 0xd3, 0x26, 0x67, 0xe3, 0xe7, 0x0e, 0x8b, 0x8e, 0x05, 0xde, 0xef, 0xb8, 0x52, 0xa0,
	0xe3, 0xb6, 0x83, 0xe3, 0x52, 0x3b, 0xa5, 0x83, 0xd2, 0x47, 0xda, 0x18, 0xe9, 0xfa, 0xe5, 0x48,
	0xc4, 0x97, 0x59, 0xd7, 0xbe, 0xaa, 0x3d, 0xbe, 0x88, 0x78, 0xc7, 0xbe, 0xaa, 0x8f, 0xf1, 0xad,
	0x42, 0x8b, 0xed, 0x13, 0x7f, 0xac, 0x1a, 0xbe, 0x55, 0xc1, 0x59, 0x3d, 0x7f, 0xac, 0xbc, 0x42,
	0x14, 0x2f, 0x1b, 0x47, 0xc5, 0xdf, 0xfe, 0xe5, 0x06, 0x97, 0xee, 0xa1, 0x6d, 0x84, 0x55, 0x7c,
	0x89, 0x75, 0xc8, 0xe8, 0xfa, 0x08, 0xd3, 0xc2, 0xef, 0x90, 0x6b, 0xeb, 0xd0, 0x39, 0x5b, 0x29,
	0xfe, 0x8e, 0xcf, 0xb3, 0xb6, 0x1f, 0x02, 0x11, 0x4a, 0xd1, 0xff, 0xf4, 0x57, 0xb4, 0xa0, 0x04,
	0xce, 0x86, 0x01, 0xc2, 0x4b, 0x7e, 0xed, 0x47, 0xc3, 0x2a, 0xeb, 0xf2, 0xd2, 0xbb, 0x12, 0x5a,
	0x64, 0x2b, 0x0d, 0x2b, 0x8f, 0x07, 0x7b, 0x59, 0xc1, 0x84, 0xb0, 0xf2, 0x4a, 0xc1, 0x2b, 0xa2,
	0x3e, 0xcf, 0x91, 0x52, 0x3c, 0x80, 0x02, 0xbd, 0xc9, 0x18, 0x17, 0x42, 0x3a, 0xa9, 0x15, 0x9f,
	0xa1, 0x33, 0xf6, 0xd3, 0x63, 0x08, 0xba, 0x8f, 0x01, 0x0b, 0xca, 0xf9, 0xd6, 0x5d, 0xc4, 0xd6,
	0xf5, 0x03, 0x32, 0x12, 0xde, 0x37, 0xb5, 0x91, 0x13, 0xa9, 0x82, 0xa5, 0x5f, 0x22, 0xdf, 0x24,
	0x8c, 0x2c, 0xfd, 0xa4, 0xeb, 0x5f, 0x7e, 0xd7, 0xf5, 0x37, 0xd8, 0xb2, 0xb4, 0xd9, 0xa1, 0xac,
	0xb2, 0x03, 0x5d, 0xfb, 0x3e, 0xae, 0xd2, 0x23, 0x93, 0xf6, 0x07, 0x59, 0x3d, 0x42, 0x28, 0xbe,
	0xc7, 0x2e, 0x0a, 0x69, 0x9d, 0x91, 0x07, 0xb5, 0x3f, 0x5a, 0x56, 0x19, 0x5d, 0x48, 0x87, 0x4e,
	0xdc, 0x4a, 0xe3, 0xe3, 0xa1, 0x7d, 0x8c, 0x9c, 0x50, 0xf0, 0x85, 0xd3, 0x15, 0x1c, 0x9f, 0x50,
	0xf0, 0xc6, 0xaf, 0x2d, 0x36, 0x40, 0x09, 0xa6, 0xf0, 0xba, 0x06, 0xeb, 0x4e, 0xce, 0xbd, 0x85,
	0x77, 0xe6, 0x1e, 0x4e, 0x4c, 0xe3, 0x1a, 0x4d, 0xf6, 0xfd, 0xc4, 0x34, 0xee, 0x5f, 0x48, 0x32,
	0x88, 0xa1, 0xf3, 0x56, 0x0c, 0x6b, 0xac, 0x27, 0xa4, 0x81, 0xdc, 0x81, 0x40, 0x35, 0xf6, 0xd2,
	0xa3, 0xb5, 0xbf, 0x07, 0x17, 0x02, 0xa7, 0x9f, 0x14, 0x28, 0xcb, 0x76, 0xda, 0x0f, 0x08, 0x4d,
	0xe3, 0xc6, 0xad, 0x7b, 0x64, 0x4d, 0x61, 0xe9, 0x13, 0x0f, 0x65, 0x95, 0xfb, 0xa9, 0x24, 0x69,
	0xc8, 0xb7, 0xd3, 0x7e, 0x40, 0x46, 0xa2, 0x19, 0x3b, 0x25, 0xb8, 0xa9, 0xa6, 0x31, 0xdf, 0xc1,
	0xb1, 0xb3, 0x87, 0x00, 0x76, 0x57, 0xd7, 0x95, 0x56, 0x99, 0x14, 0x36, 0x89, 0x86, 0x6d, 0x9f,
	0x4d, 0xc8, 0x48, 0xd8, 0x8d, 0x5f, 0x5a, 0x6c, 0x39, 0xb4, 0xcf, 0x56, 0x5a, 0x59, 0x88, 0x1f,
	0xb2, 0x2e, 0x28, 0x27, 0xdd, 0x1c, 0x5b, 0x17, 0x6d, 0xdf, 0x38, 0xd5, 0x11, 0xd2, 0x40, 0x8e,
	0x1f, 0xb0, 0x4e, 0xc5, 0x27, 0x60, 0xb0, 0xa7, 0xa7, 0x64, 0xed, 0x7b, 0x52, 0x4a, 0x5c, 0x9f,
	0xe4, 0x5b, 0x6c, 0x93, 0x36, 0x9a, 0xcf, 0x07, 0x4a, 0x11, 0xd7, 0x27, 0x81, 0x31, 0xda, 0xe0,
	0xc7, 0x38, 0x25, 0xe9, 0x5b, 0x4f, 0x4a, 0x89, 0x1b, 0xdf, 0x67, 0x8b, 0x52, 0x15, 0x1a, 0x3f,
	0x56, 0xb4, 0x7d, 0xfd, 0x7d, 0x39, 0x23, 0x55, 0xe8, 0x14, 0x99, 0xdb, 0xbf, 0x2d, 0xb2, 0x95,
	0xbd, 0x39, 0x56, 0x1e, 0x83, 0x39, 0xf4, 0xf2, 0xff, 0x91, 0x2d, 0xed, 0x6a, 0x55, 0x48, 0x53,
	0xc6, 0x1f, 0x9f, 0x7e, 0x54, 0xd2, 0xe2, 0xda, 0x9d, 0x0f, 0xb0, 0xa8, 0xe5, 0x1b, 0x1f, 0xc5,
	0xfb, 0xac, 0x3b, 0xae, 0x0f, 0x4a, 0xff, 0x1a, 0x4e, 0x4d, 0xf9, 0x47, 0x3b, 0x3e, 0x86, 0x19,
	0x38, 0x38, 0xcb, 0x1d, 0x77, 0xb9, 0xca, 0x61, 0x76, 0x66, 0x3b, 0x7e, 0xcf, 0x96, 0x52, 0xc8,
	0x41, 0x56, 0x67, 0x77, 0xed, 0x3d, 0xd6, 0xfe, 0x0e, 0xce, 0x6e, 0xbb, 0xe7, 0xac, 0x3b, 0x06,
	0x6e, 0xf2, 0x69, 0xbc, 0xfe, 0xbe, 0x94, 0x47, 0xdc, 0xc2, 0xcb, 0x29, 0x18, 0xf8, 0xdb, 0xbb,
	0x6e, 0xff, 0xbe, 0x18, 0x3c, 0xab, 0x11, 0xd6, 0x4b, 0xd6, 0xdd, 0x45, 0xc3, 0x3b, 0x6b, 0x5d,
	0x3d, 0x63, 0x9d, 0xdd, 0x29, 0xe4, 0xaf, 0xce, 0xac, 0x21, 0x2f, 0x58, 0xb4, 0x77, 0x6c, 0x20,
	0x9c, 0x5d, 0x9f, 0x19, 0x6d, 0xbb, 0x23, 0x84, 0xf9, 0x0f, 0xbf, 0x81, 0xff, 0x83, 0xbc, 0x0e,
	0xba, 0xf8, 0x47, 0xf8, 0xc1, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x1c, 0x9d, 0xaf, 0x3d,
	0x0f, 0x00, 0x00,
}
