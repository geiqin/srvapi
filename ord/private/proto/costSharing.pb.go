// Code generated by protoc-gen-go. DO NOT EDIT.
// source: costSharing.proto

package geiqin_srv_ord_private

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CostSharingWhere struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	OrderDetailId        int64    `protobuf:"varint,2,opt,name=orderDetailId,proto3" json:"orderDetailId,omitempty"`
	OrderDetailIds       []int64  `protobuf:"varint,3,rep,packed,name=orderDetailIds,proto3" json:"orderDetailIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CostSharingWhere) Reset()         { *m = CostSharingWhere{} }
func (m *CostSharingWhere) String() string { return proto.CompactTextString(m) }
func (*CostSharingWhere) ProtoMessage()    {}
func (*CostSharingWhere) Descriptor() ([]byte, []int) {
	return fileDescriptor_168fdb7d713e254d, []int{0}
}

func (m *CostSharingWhere) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CostSharingWhere.Unmarshal(m, b)
}
func (m *CostSharingWhere) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CostSharingWhere.Marshal(b, m, deterministic)
}
func (m *CostSharingWhere) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CostSharingWhere.Merge(m, src)
}
func (m *CostSharingWhere) XXX_Size() int {
	return xxx_messageInfo_CostSharingWhere.Size(m)
}
func (m *CostSharingWhere) XXX_DiscardUnknown() {
	xxx_messageInfo_CostSharingWhere.DiscardUnknown(m)
}

var xxx_messageInfo_CostSharingWhere proto.InternalMessageInfo

func (m *CostSharingWhere) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *CostSharingWhere) GetOrderDetailId() int64 {
	if m != nil {
		return m.OrderDetailId
	}
	return 0
}

func (m *CostSharingWhere) GetOrderDetailIds() []int64 {
	if m != nil {
		return m.OrderDetailIds
	}
	return nil
}

type CostSharing struct {
	Money                float32  `protobuf:"fixed32,1,opt,name=money,proto3" json:"money,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CostSharing) Reset()         { *m = CostSharing{} }
func (m *CostSharing) String() string { return proto.CompactTextString(m) }
func (*CostSharing) ProtoMessage()    {}
func (*CostSharing) Descriptor() ([]byte, []int) {
	return fileDescriptor_168fdb7d713e254d, []int{1}
}

func (m *CostSharing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CostSharing.Unmarshal(m, b)
}
func (m *CostSharing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CostSharing.Marshal(b, m, deterministic)
}
func (m *CostSharing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CostSharing.Merge(m, src)
}
func (m *CostSharing) XXX_Size() int {
	return xxx_messageInfo_CostSharing.Size(m)
}
func (m *CostSharing) XXX_DiscardUnknown() {
	xxx_messageInfo_CostSharing.DiscardUnknown(m)
}

var xxx_messageInfo_CostSharing proto.InternalMessageInfo

func (m *CostSharing) GetMoney() float32 {
	if m != nil {
		return m.Money
	}
	return 0
}

type CostSharingResponse struct {
	Entity               *CostSharing   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager                *Pager         `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items                []*CostSharing `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error                *Error         `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *Info          `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CostSharingResponse) Reset()         { *m = CostSharingResponse{} }
func (m *CostSharingResponse) String() string { return proto.CompactTextString(m) }
func (*CostSharingResponse) ProtoMessage()    {}
func (*CostSharingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_168fdb7d713e254d, []int{2}
}

func (m *CostSharingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CostSharingResponse.Unmarshal(m, b)
}
func (m *CostSharingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CostSharingResponse.Marshal(b, m, deterministic)
}
func (m *CostSharingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CostSharingResponse.Merge(m, src)
}
func (m *CostSharingResponse) XXX_Size() int {
	return xxx_messageInfo_CostSharingResponse.Size(m)
}
func (m *CostSharingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CostSharingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CostSharingResponse proto.InternalMessageInfo

func (m *CostSharingResponse) GetEntity() *CostSharing {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *CostSharingResponse) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func (m *CostSharingResponse) GetItems() []*CostSharing {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CostSharingResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CostSharingResponse) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*CostSharingWhere)(nil), "geiqin.srv.ord.private.CostSharingWhere")
	proto.RegisterType((*CostSharing)(nil), "geiqin.srv.ord.private.CostSharing")
	proto.RegisterType((*CostSharingResponse)(nil), "geiqin.srv.ord.private.CostSharingResponse")
}

func init() {
	proto.RegisterFile("costSharing.proto", fileDescriptor_168fdb7d713e254d)
}

var fileDescriptor_168fdb7d713e254d = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xff, 0x69, 0x9a, 0xc2, 0x7f, 0xaa, 0xa2, 0xab, 0x48, 0x28, 0x0a, 0x25, 0x15, 0x09,
	0x08, 0x41, 0xda, 0x93, 0x78, 0xac, 0x1e, 0x7a, 0x52, 0xb6, 0x07, 0xcf, 0x6b, 0x32, 0x6d, 0x17,
	0x9a, 0xdd, 0x38, 0x59, 0x0b, 0xf5, 0x7b, 0xf8, 0x21, 0xfc, 0x96, 0x92, 0xdd, 0x82, 0xa9, 0xd8,
	0x92, 0x5b, 0x76, 0xf8, 0xbd, 0x79, 0xef, 0x91, 0x81, 0x93, 0x54, 0x97, 0x66, 0xba, 0x10, 0x24,
	0xd5, 0x3c, 0x29, 0x48, 0x1b, 0xcd, 0xce, 0xe7, 0x28, 0xdf, 0xa4, 0x4a, 0x4a, 0x5a, 0x25, 0x9a,
	0xb2, 0xa4, 0x20, 0xb9, 0x12, 0x06, 0x7b, 0x07, 0xa9, 0xce, 0x73, 0xad, 0x1c, 0xd5, 0xeb, 0x6a,
	0xca, 0x90, 0xdc, 0x23, 0xfa, 0xf4, 0xe0, 0x78, 0xfc, 0xb3, 0xe8, 0x65, 0x81, 0x84, 0x6c, 0x04,
	0x81, 0x65, 0x42, 0xaf, 0xef, 0xc5, 0xdd, 0xe1, 0x65, 0xf2, 0xf7, 0xde, 0xe4, 0xa9, 0x82, 0xb8,
	0x63, 0xd9, 0x15, 0x1c, 0xda, 0x8f, 0x07, 0x34, 0x42, 0x2e, 0x27, 0x59, 0xd8, 0xea, 0x7b, 0xb1,
	0xcf, 0xb7, 0x87, 0xec, 0x1a, 0x8e, 0xb6, 0x06, 0x65, 0xe8, 0xf7, 0xfd, 0xd8, 0xe7, 0xbf, 0xa6,
	0xd1, 0x00, 0xba, 0xb5, 0x58, 0xec, 0x0c, 0x82, 0x5c, 0x2b, 0x5c, 0xdb, 0x44, 0x2d, 0xee, 0x1e,
	0xd1, 0x57, 0x0b, 0x4e, 0x6b, 0x14, 0xc7, 0xb2, 0xd0, 0xaa, 0x44, 0x76, 0x0f, 0x1d, 0x54, 0x46,
	0x9a, 0xf5, 0xa6, 0xc0, 0x60, 0x57, 0x81, 0xba, 0x78, 0x23, 0xa9, 0xca, 0x17, 0x62, 0x8e, 0x64,
	0xf3, 0xef, 0x29, 0xff, 0x5c, 0x41, 0xdc, 0xb1, 0xec, 0x0e, 0x02, 0x69, 0x30, 0x77, 0x6d, 0x1a,
	0x1a, 0x3a, 0x45, 0xe5, 0x87, 0x44, 0x9a, 0xc2, 0xf6, 0x7e, 0xbf, 0xc7, 0x0a, 0xe2, 0x8e, 0x65,
	0xb7, 0xd0, 0x96, 0x6a, 0xa6, 0xc3, 0xc0, 0x6a, 0x2e, 0x76, 0x69, 0x26, 0x6a, 0xa6, 0xb9, 0x25,
	0x87, 0x1f, 0xc0, 0x6a, 0xe6, 0x53, 0xa4, 0x95, 0x4c, 0x91, 0x65, 0xf0, 0x7f, 0x2c, 0x96, 0xe9,
	0xfb, 0x52, 0x18, 0x64, 0x71, 0x83, 0xd4, 0xf6, 0x40, 0x7a, 0x37, 0x4d, 0xfa, 0x6d, 0xfe, 0x46,
	0xf4, 0xef, 0xb5, 0x63, 0x6f, 0x6d, 0xf4, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x5a, 0xa2, 0xeb, 0xa9,
	0xb3, 0x02, 0x00, 0x00,
}
