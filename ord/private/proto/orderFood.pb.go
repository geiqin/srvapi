// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderFood.proto

package geiqin_srv_ord_private

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderFood struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	OrderId              int64    `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	TableId              int64    `protobuf:"varint,4,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	TableName            string   `protobuf:"bytes,5,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	SurchargeType        int32    `protobuf:"varint,6,opt,name=surcharge_type,json=surchargeType,proto3" json:"surcharge_type,omitempty"`
	SurchargeFee         float32  `protobuf:"fixed32,7,opt,name=surcharge_fee,json=surchargeFee,proto3" json:"surcharge_fee,omitempty"`
	SurchargeFeeName     string   `protobuf:"bytes,8,opt,name=surcharge_fee_name,json=surchargeFeeName,proto3" json:"surcharge_fee_name,omitempty"`
	TotalSurchargeFee    float32  `protobuf:"fixed32,9,opt,name=total_surcharge_fee,json=totalSurchargeFee,proto3" json:"total_surcharge_fee,omitempty"`
	BoxFee               float32  `protobuf:"fixed32,10,opt,name=box_fee,json=boxFee,proto3" json:"box_fee,omitempty"`
	GuestNum             int32    `protobuf:"varint,11,opt,name=guest_num,json=guestNum,proto3" json:"guest_num,omitempty"`
	IsSettlement         bool     `protobuf:"varint,12,opt,name=is_settlement,json=isSettlement,proto3" json:"is_settlement,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderFood) Reset()         { *m = OrderFood{} }
func (m *OrderFood) String() string { return proto.CompactTextString(m) }
func (*OrderFood) ProtoMessage()    {}
func (*OrderFood) Descriptor() ([]byte, []int) {
	return fileDescriptor_b25400c348127c6a, []int{0}
}

func (m *OrderFood) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderFood.Unmarshal(m, b)
}
func (m *OrderFood) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderFood.Marshal(b, m, deterministic)
}
func (m *OrderFood) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderFood.Merge(m, src)
}
func (m *OrderFood) XXX_Size() int {
	return xxx_messageInfo_OrderFood.Size(m)
}
func (m *OrderFood) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderFood.DiscardUnknown(m)
}

var xxx_messageInfo_OrderFood proto.InternalMessageInfo

func (m *OrderFood) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrderFood) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OrderFood) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *OrderFood) GetTableId() int64 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *OrderFood) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *OrderFood) GetSurchargeType() int32 {
	if m != nil {
		return m.SurchargeType
	}
	return 0
}

func (m *OrderFood) GetSurchargeFee() float32 {
	if m != nil {
		return m.SurchargeFee
	}
	return 0
}

func (m *OrderFood) GetSurchargeFeeName() string {
	if m != nil {
		return m.SurchargeFeeName
	}
	return ""
}

func (m *OrderFood) GetTotalSurchargeFee() float32 {
	if m != nil {
		return m.TotalSurchargeFee
	}
	return 0
}

func (m *OrderFood) GetBoxFee() float32 {
	if m != nil {
		return m.BoxFee
	}
	return 0
}

func (m *OrderFood) GetGuestNum() int32 {
	if m != nil {
		return m.GuestNum
	}
	return 0
}

func (m *OrderFood) GetIsSettlement() bool {
	if m != nil {
		return m.IsSettlement
	}
	return false
}

func init() {
	proto.RegisterType((*OrderFood)(nil), "geiqin.srv.ord.private.OrderFood")
}

func init() {
	proto.RegisterFile("orderFood.proto", fileDescriptor_b25400c348127c6a)
}

var fileDescriptor_b25400c348127c6a = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x5f, 0x4b, 0xf3, 0x30,
	0x14, 0xc6, 0x49, 0xf7, 0xaf, 0x3d, 0xef, 0xde, 0xa9, 0x11, 0x34, 0x22, 0x42, 0x51, 0x84, 0x5e,
	0x48, 0x6f, 0xfc, 0x0e, 0x83, 0xdd, 0x4c, 0xe8, 0xbc, 0x0f, 0xa9, 0x39, 0xce, 0xc0, 0xda, 0xcc,
	0x24, 0x1d, 0xf3, 0x23, 0xf8, 0xad, 0x25, 0x67, 0x58, 0xb7, 0xbb, 0xe6, 0xf7, 0xfc, 0x78, 0x9e,
	0x03, 0x85, 0x33, 0xeb, 0x34, 0xba, 0xb9, 0xb5, 0xba, 0xdc, 0x3a, 0x1b, 0x2c, 0xbf, 0x5a, 0xa3,
	0xf9, 0x34, 0x6d, 0xe9, 0xdd, 0xae, 0xb4, 0x2e, 0x52, 0xb3, 0x53, 0x01, 0xef, 0xbf, 0x07, 0x90,
	0xbd, 0xfc, 0xba, 0x7c, 0x06, 0x89, 0xd1, 0x82, 0xe5, 0xac, 0x18, 0x54, 0x89, 0xd1, 0x9c, 0xc3,
	0x30, 0x7c, 0x6d, 0x51, 0x24, 0x39, 0x2b, 0xb2, 0x8a, 0xbe, 0xf9, 0x0d, 0xa4, 0x54, 0x2e, 0x8d,
	0x16, 0x03, 0x32, 0x27, 0xf4, 0x5e, 0xe8, 0x18, 0x05, 0x55, 0x6f, 0x30, 0x46, 0xc3, 0x43, 0x44,
	0xef, 0x85, 0xe6, 0x77, 0x00, 0x87, 0xa8, 0x55, 0x0d, 0x8a, 0x11, 0xf5, 0x65, 0x44, 0x96, 0xaa,
	0x41, 0xfe, 0x08, 0x33, 0xdf, 0xb9, 0xb7, 0x0f, 0xe5, 0xd6, 0x28, 0x69, 0x72, 0x9c, 0xb3, 0x62,
	0x54, 0xfd, 0xef, 0xe9, 0x6b, 0xdc, 0x7e, 0x80, 0x3f, 0x20, 0xdf, 0x11, 0xc5, 0x24, 0x67, 0x45,
	0x52, 0x4d, 0x7b, 0x38, 0x47, 0xe4, 0x4f, 0xc0, 0x4f, 0xa4, 0xc3, 0x64, 0x4a, 0x93, 0xe7, 0xc7,
	0x26, 0x2d, 0x97, 0x70, 0x19, 0x6c, 0x50, 0x1b, 0x79, 0x5a, 0x9c, 0x51, 0xf1, 0x05, 0x45, 0xab,
	0xe3, 0xf6, 0x6b, 0x98, 0xd4, 0x76, 0x4f, 0x0e, 0x90, 0x33, 0xae, 0xed, 0x3e, 0x06, 0xb7, 0x90,
	0xad, 0x3b, 0xf4, 0x41, 0xb6, 0x5d, 0x23, 0xfe, 0xd1, 0xf5, 0x29, 0x81, 0x65, 0xd7, 0xc4, 0xc3,
	0x8d, 0x97, 0x1e, 0x43, 0xd8, 0x60, 0x83, 0x6d, 0x10, 0xd3, 0x9c, 0x15, 0x69, 0x35, 0x35, 0x7e,
	0xd5, 0xb3, 0x7a, 0x4c, 0xbf, 0xea, 0xf9, 0x27, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x10, 0xe2, 0xa0,
	0xbd, 0x01, 0x00, 0x00,
}
